# Copyright 2012 Google Inc. All Rights Reserved.

__author__ = 'benvanik@google.com (Ben Vanik)'


# Master anvil-build BUILD file for wtf


# ------------------------------------------------------------------------------
# Third Party
# ------------------------------------------------------------------------------

JS_COMPILER_JAR='third_party:closure_compiler_jar'
SOY_COMPILER_JAR='third_party:closure_templates_jar'
GSS_COMPILER_JAR='third_party:closure_stylesheets_jar'
file_set(
    name='all_externs',
    srcs=glob('externs/**/*.js'))


# ------------------------------------------------------------------------------
# CSS
# ------------------------------------------------------------------------------

file_set(
    name='all_less',
    srcs=glob('src/**/*.less'))


# ------------------------------------------------------------------------------
# Soy Templates
# ------------------------------------------------------------------------------

closure_soy_library(
    name='wtf_ui_soy_js',
    srcs=glob('src/wtf/ui/**/*.soy'),
    compiler_jar=SOY_COMPILER_JAR)
closure_soy_library(
    name='wtf_hud_soy_js',
    srcs=glob('src/wtf/hud/**/*.soy'),
    deps=':wtf_ui_soy_js',
    compiler_jar=SOY_COMPILER_JAR)
closure_soy_library(
    name='wtf_app_soy_js',
    srcs=glob('src/wtf/app/**/*.soy'),
    deps=':wtf_ui_soy_js',
    compiler_jar=SOY_COMPILER_JAR)
closure_soy_library(
    name='wtf_replay_soy_js',
    srcs=glob('src/wtf/replay/**/*.soy'),
    deps=':wtf_ui_soy_js',
    compiler_jar=SOY_COMPILER_JAR)

file_set(
    name='all_soy_js',
    srcs=[
        ':wtf_ui_soy_js',
        ':wtf_hud_soy_js',
        ':wtf_app_soy_js',
        ':wtf_replay_soy_js',
        ])


# ------------------------------------------------------------------------------
# JavaScript
# ------------------------------------------------------------------------------

# wtf src/
file_set(
    name='wtf_src_js',
    srcs=glob('src/**/*.js'))

# third_party js
file_set(
    name='third_party_js',
    srcs=[
        'third_party/d3/colorbrewer.js',
        ])

# Testing support files
file_set(
    name='testing_files',
    srcs=[
        'node_modules/mocha/mocha.js',
        'node_modules/mocha/mocha.css',
        'node_modules/chai/chai.js',
        ])

SHARED_JS_FLAGS=[
    '--summary_detail_level=3',
    '--define=goog.DEBUG=false',
    '--define=goog.asserts.ENABLE_ASSERTS=false',
    '--create_source_map=%outname%.map',
    '--source_map_format=V3',
    ]

RELEASE_JS_FLAGS=[
    '--use_types_for_optimization',
    #'--collapse_variable_declarations',
    #'--collapse_anonymous_functions',
    #'--collapse_properties',
    #'--disambiguate_properties',
    # rewrites things to be smaller but likely not better
    # http://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/javascript/jscomp/FunctionRewriter.java
    #'--rewrite_function_expressions=false',
    # slow - may want disabled
    #'--devirtualize_prototype_methods',
    #'--devirtualize_prototype_methods=false',
    ]

# deps.js only
closure_js_library(
    name='wtf_js_deps',
    out='wtf_js',
    mode='DEPS',
    entry_points=[
        'wtf.app.exports',
        'wtf.db.exports',
        'wtf.hud.exports',
        'wtf.remote.exports',
        'wtf.replay.graphics.exports',
        'wtf.replay.timeTravel.exports',
        'wtf.trace.exports',
    ],
    srcs=[
        'third_party:all_closure_js',
        ':third_party_js',
        ':wtf_src_js',
        ':all_soy_js',
        ],
    compiler_jar=JS_COMPILER_JAR)


# ------------------------------------------------------------------------------
# JavaScript : trace_web
# ------------------------------------------------------------------------------

less_css_library(
    name='wtf_trace_web_styles_debug',
    srcs=['src/wtf/hud/hud.less', ':all_less'],
    include_paths=['src',],
    compiler_flags=[])
less_css_library(
    name='wtf_trace_web_styles_release_unminified',
    srcs=['src/wtf/hud/hud.less', ':all_less'],
    include_paths=['src',],
    compiler_flags=[''])
closure_gss_library(
    name='wtf_trace_web_styles_release',
    mode='COMPILED',
    srcs=':wtf_trace_web_styles_release_unminified',
    compiler_jar=GSS_COMPILER_JAR,
    compiler_flags=[
        '--css-renaming-prefix', 'wtf_',
        '--no-eliminate-dead-styles',
        '--allow-unrecognized-functions',
        ])

WTF_TRACE_WEB_SRCS=[
    ':third_party_js',
    ':wtf_src_js',
    ':wtf_ui_soy_js',
    ':wtf_hud_soy_js',
    ]

# All uncompiled JS
file_set(
    name='all_trace_web_uncompiled_js',
    srcs=[
        'third_party:all_closure_js',
        'third_party:closure_uncompiled_js',
        ] + WTF_TRACE_WEB_SRCS)

# All compiled JS
file_set(
    name='all_trace_web_compiled_js',
    srcs=[
        'third_party:all_closure_js',
        ':wtf_trace_web_styles_release',
        ] + WTF_TRACE_WEB_SRCS)

WTF_TRACE_WEB_ENTRY_POINTS=[
    'wtf.addon',
    'wtf.trace.exports',
    'wtf.hud.exports',
    'wtf.remote.exports',
    ]

WTF_TRACE_WEB_JS_FLAGS=[
    '--language_in=ECMASCRIPT5_STRICT',
    '--define=wtf.hud.exports.ENABLE_EXPORTS=true',
    '--define=wtf.remote.exports.ENABLE_EXPORTS=true',
    '--define=wtf.trace.exports.ENABLE_EXPORTS=true',
    '--output_wrapper="if(!this.wtf){(function(){%output%}).call(this);}"',
    ]
# wtf_trace_web_js_compiled_debug js
closure_js_library(
    name='wtf_trace_web_js_compiled_debug_head',
    deps_out='wtf_trace_web_js',
    mode='ADVANCED',
    pretty_print=True,
    entry_points=WTF_TRACE_WEB_ENTRY_POINTS,
    srcs=':all_trace_web_uncompiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS +
        WTF_TRACE_WEB_JS_FLAGS + [
            '--debug',
            '--create_name_map_files',
            ])
# wtf_trace_web_js_compiled js
closure_js_library(
    name='wtf_trace_web_js_compiled_head',
    deps_out='wtf_trace_web_js',
    mode='ADVANCED',
    entry_points=WTF_TRACE_WEB_ENTRY_POINTS,
    srcs=':all_trace_web_compiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS + RELEASE_JS_FLAGS +
        WTF_TRACE_WEB_JS_FLAGS + [
            ])

# TODO(benvanik): test in IE
STYLES_WRAPPER=''.join([
    "if(this.window && !window.wtf_styles){window.wtf_styles=1;",
    "var style = document.createElement('style');",
    "style.innerHTML = '%output%';",
    "(document.documentElement || document.head).appendChild(style);",
    ";}\n"])
# wtf_trace_web_js_compiled_debug
embed_files(
    name='wtf_trace_web_styles_debug_js',
    srcs=[':wtf_trace_web_styles_debug'],
    wrapper=STYLES_WRAPPER,
    replace_chars=[['\n', '\\n'], ['\'', '\\\'']])
concat_files(
    name='wtf_trace_web_js_compiled_debug',
    out='wtf_trace_web_js_compiled_debug.js',
    srcs=[
        ':wtf_trace_web_js_compiled_debug_head',
        ':wtf_trace_web_styles_debug_js',
        'assets:hud_icons',
        ],
    src_exclude_filter='*-deps.js')
# wtf_trace_web_js_compiled
embed_files(
    name='wtf_trace_web_styles_release_js',
    srcs=[':wtf_trace_web_styles_release'],
    wrapper=STYLES_WRAPPER,
    replace_chars=[['\n', '\\n'], ['\'', '\\\'']],
    src_exclude_filter='*.js')
concat_files(
    name='wtf_trace_web_js_compiled',
    out='wtf_trace_web_js_compiled.js',
    srcs=[
        ':wtf_trace_web_js_compiled_head',
        ':wtf_trace_web_styles_release_js',
        'assets:hud_icons',
        ],
    src_exclude_filter='*-deps.js')

file_set(
    name='wtf_trace_web_debug',
    srcs=[
        ':testing_files',
        ':wtf_trace_web_js_compiled_debug',
        ':wtf_trace_web_styles_debug',
        ])
file_set(
    name='wtf_trace_web_release',
    srcs=[
        ':wtf_trace_web_js_compiled',
        ],
    src_exclude_filter='*-deps.js')


# ------------------------------------------------------------------------------
# JavaScript : trace_min
# ------------------------------------------------------------------------------

WTF_TRACE_MIN_SRCS=[
    ':third_party_js',
    ':wtf_src_js',
    ]

# All uncompiled JS
file_set(
    name='all_trace_min_uncompiled_js',
    srcs=[
        'third_party:all_closure_js',
        'third_party:closure_uncompiled_js',
        ] + WTF_TRACE_MIN_SRCS)

# All compiled JS
file_set(
    name='all_trace_min_compiled_js',
    srcs=[
        'third_party:all_closure_js',
        ] + WTF_TRACE_MIN_SRCS)

WTF_TRACE_MIN_ENTRY_POINTS=[
    'wtf.trace.exports',
    ]

WTF_TRACE_MIN_JS_FLAGS=[
    '--language_in=ECMASCRIPT5_STRICT',
    '--define=wtf.MIN_BUILD=true',
    '--define=wtf.trace.exports.ENABLE_EXPORTS=true',
    '--output_wrapper="if(!this.wtf){(function(){%output%}).call(this);}"',
    ]
# wtf_trace_min_js_compiled_debug js
closure_js_library(
    name='wtf_trace_min_js_compiled_debug',
    deps_out='wtf_trace_min_js',
    mode='ADVANCED',
    pretty_print=True,
    entry_points=WTF_TRACE_MIN_ENTRY_POINTS,
    srcs=':all_trace_min_uncompiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS +
        WTF_TRACE_MIN_JS_FLAGS + [
            '--debug',
            '--create_name_map_files',
            ])
# wtf_trace_min_js_compiled js
closure_js_library(
    name='wtf_trace_min_js_compiled',
    deps_out='wtf_trace_min_js',
    mode='ADVANCED',
    entry_points=WTF_TRACE_MIN_ENTRY_POINTS,
    srcs=':all_trace_min_compiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS + RELEASE_JS_FLAGS +
        WTF_TRACE_MIN_JS_FLAGS + [
            ])

file_set(
    name='wtf_trace_min_debug',
    srcs=[
        ':testing_files',
        ':wtf_trace_min_js_compiled_debug',
        ])
file_set(
    name='wtf_trace_min_release',
    srcs=[
        ':wtf_trace_min_js_compiled',
        ],
    src_exclude_filter='*-deps.js')


# ------------------------------------------------------------------------------
# JavaScript : trace_prod
# ------------------------------------------------------------------------------

WTF_TRACE_PROD_JS_FLAGS=[
    '--language_in=ECMASCRIPT5_STRICT',
    '--define=wtf.MIN_BUILD=true',
    '--define=wtf.PROD_BUILD=true',
    '--define=wtf.trace.exports.ENABLE_EXPORTS=true',
    '--output_wrapper="if(!this.wtf){(function(){%output%}).call(this);}"',
    ]
# wtf_trace_prod_js_compiled_debug js
closure_js_library(
    name='wtf_trace_prod_js_compiled_debug',
    deps_out='wtf_trace_prod_js',
    mode='ADVANCED',
    pretty_print=True,
    entry_points=WTF_TRACE_MIN_ENTRY_POINTS,
    srcs=':all_trace_min_uncompiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS +
        WTF_TRACE_PROD_JS_FLAGS + [
            '--debug',
            '--create_name_map_files',
            ])
# wtf_trace_prod_js_compiled js
closure_js_library(
    name='wtf_trace_prod_js_compiled',
    deps_out='wtf_trace_prod_js',
    mode='ADVANCED',
    entry_points=WTF_TRACE_MIN_ENTRY_POINTS,
    srcs=':all_trace_min_compiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS + RELEASE_JS_FLAGS +
        WTF_TRACE_PROD_JS_FLAGS + [
            ])

file_set(
    name='wtf_trace_prod_debug',
    srcs=[
        ':wtf_trace_prod_js_compiled_debug',
        ])
file_set(
    name='wtf_trace_prod_release',
    srcs=[
        ':wtf_trace_prod_js_compiled',
        ],
    src_exclude_filter='*-deps.js')


# ------------------------------------------------------------------------------
# JavaScript : node
# ------------------------------------------------------------------------------

closure_js_library(
    name='wtf_node_js_compiled',
    deps_out='wtf_node_js',
    # TODO(benvanik): fix exports so ADVANCED can be used
    mode='SIMPLE',
    pretty_print=True,
    entry_points=[
        'wtf.db.exports',
        'wtf.db.node',
        'wtf.replay.graphics.Step',
        'wtf.trace.exports',
        'wtf.trace.node',
        ],
    srcs=[
        'third_party:all_closure_js',
        ':third_party_js',
        ':wtf_src_js',
        ],
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS + RELEASE_JS_FLAGS + [
        '--language_in=ECMASCRIPT5_STRICT',
        '--define=goog.DEBUG=false',
        '--define=goog.asserts.ENABLE_ASSERTS=false',
        '--define=wtf.NODE=true',
        '--define=wtf.db.exports.ENABLE_EXPORTS=true',
        '--define=wtf.trace.exports.ENABLE_EXPORTS=true',
        '--output_wrapper="module.exports = (function(exports){%output%;return this.wtf;}).call(global); delete global.wtf;"',
        ])

file_set(
    name='wtf_node_release',
    srcs=[
        ':wtf_node_js_compiled',
        ],
    src_exclude_filter='*-deps.js')


# ------------------------------------------------------------------------------
# JavaScript : app
# ------------------------------------------------------------------------------
# TODO(benvanik): move to app/BUILD?

WTF_UI_SRCS=[
    ':third_party_js',
    ':wtf_src_js',
    ':wtf_ui_soy_js',
    ':wtf_app_soy_js',
    ':wtf_replay_soy_js',
    ]

# All uncompiled JS
file_set(
    name='all_ui_uncompiled_js',
    srcs=[
        'third_party:all_closure_js',
        'third_party:closure_uncompiled_js',
        'app:debug_js_srcs',
        ] + WTF_UI_SRCS)

# All compiled JS
file_set(
    name='all_ui_compiled_js',
    srcs=[
        'third_party:all_closure_js',
        'app:release_js_srcs',
        ] + WTF_UI_SRCS)

WTF_UI_ENTRY_POINTS=[
    'wtf.app.exports',
    'wtf.db.exports',
    'wtf.replay.graphics.exports',
    'wtf.replay.timeTravel.exports',
    ]

WTF_UI_JS_FLAGS=[
    # Safari has issues with 'use strict'.
    '--language_in=ECMASCRIPT5',
    ]

# wtf_ui_js_uncompiled
closure_js_library(
    name='wtf_ui_js_uncompiled',
    deps_out='wtf_ui_js',
    mode='UNCOMPILED',
    entry_points=WTF_UI_ENTRY_POINTS,
    srcs=':all_ui_uncompiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS + WTF_UI_JS_FLAGS + [
        ],
    wrap_with_global='this',
    file_list_out='wtf_ui_js.list')

# wtf_ui_js_compiled
closure_js_library(
    name='wtf_ui_js_compiled',
    deps_out='wtf_ui_js',
    mode='ADVANCED',
    #pretty_print=True,
    entry_points=WTF_UI_ENTRY_POINTS,
    srcs=':all_ui_compiled_js',
    externs=[':all_externs'],
    compiler_jar=JS_COMPILER_JAR,
    compiler_flags=SHARED_JS_FLAGS + RELEASE_JS_FLAGS + WTF_UI_JS_FLAGS + [
        #'--debug',
        '--define=wtf.app.exports.ENABLE_EXPORTS=true',
        '--define=wtf.db.exports.ENABLE_EXPORTS=true',
        '--define=wtf.replay.graphics.exports.ENABLE_EXPORTS=true',
        '--define=wtf.replay.timeTravel.exports.ENABLE_EXPORTS=true',
        ],
    wrap_with_global='window')

less_css_library(
    name='wtf_ui_styles_debug',
    srcs=['src/wtf/app/app.less', ':all_less'],
    include_paths=['src',],
    compiler_flags=[])
less_css_library(
    name='wtf_ui_styles_release',
    srcs=['src/wtf/app/app.less', ':all_less'],
    include_paths=['src',],
    compiler_flags=['--compress'])


# ------------------------------------------------------------------------------
# JS linting
# ------------------------------------------------------------------------------

CLOSURE_LINTER_PATH='third_party/closure-linter/'

file_set(
    name='lint_src',
    srcs=[':wtf_src_js'],
    src_exclude_filter='filterparser.js|eventbuffers_test.js|benchmark.js')

closure_js_fixstyle(
    name='all_js_fixstyle',
    namespaces=['goog', 'wtf',],
    srcs=[':lint_src'],
    linter_path=CLOSURE_LINTER_PATH)

closure_js_lint(
    name='all_js_lint',
    namespaces=['goog', 'wtf',],
    srcs=[':lint_src'],
    linter_path=CLOSURE_LINTER_PATH)


# ------------------------------------------------------------------------------
# Testing
# ------------------------------------------------------------------------------

TEST_REQUIRES=[
    ('node module', 'mocha@1.4.2'),
    ('node module', 'chai@1.2.0'),
    ]

file_set(
    name='test_external',
    deps=[':fast'],
    requires=TEST_REQUIRES)

shell_execute(
    name='wtf_js_test',
    srcs=glob('src/**/*_test.js'),
    deps=[':fast'],
    command=[
        'node_modules/mocha/bin/mocha',
        '--ui', 'tdd',
        '--reporter', 'dot',
        '--require', 'src/wtf/bootstrap/mocha.js',
        ],
    requires=TEST_REQUIRES)


# ------------------------------------------------------------------------------
# Target rules
# ------------------------------------------------------------------------------

file_set(
    name='setup',
    requires=[
        ('node', '>=0.6.14'),
        ] + TEST_REQUIRES)

file_set(
    name='lint',
    deps=':all_js_lint')

file_set(
    name='fixstyle',
    deps=':all_js_fixstyle')

file_set(
    name='fast',
    deps=[
        ':testing_files',
        ':wtf_js_deps',
        ':wtf_trace_web_styles_debug',
        'app:fast',
        ])

file_set(
    name='deps',
    srcs=[
        ':wtf_js_deps',
        ])

file_set(
    name='test',
    deps=[':wtf_js_test'])

file_set(
    name='debug',
    srcs=[
        ':testing_files',
        ':deps',
        ':wtf_trace_web_debug',
        'app:debug',
        ])

archive_files(
    name='wtf-trace-web-api',
    srcs=[
        ':wtf_trace_web_release',
        ] + glob('shims/*.*'))

archive_files(
    name='wtf-app',
    srcs=[
        'app:release',
        ])

file_set(
    name='injector',
    srcs=[
        'extensions/wtf-injector-chrome:wtf-injector-chrome',
        'extensions/wtf-injector-firefox:wtf-injector-firefox',
        ])

file_set(
    name='release',
    srcs=[
        ':deps',
        ':wtf_trace_web_release',
        ':wtf_trace_min_release',
        ':wtf_node_release',
        'app:release',
        ':wtf-trace-web-api',
        ':wtf-app',
        ':injector',
        ],
    src_exclude_filter='*-deps.js',
    deps=[
        #':all_js_lint',
        ])

file_set(
    name='gh-pages',
    srcs=[
        ':wtf_trace_web_release',
        'app:app_files'
        ])

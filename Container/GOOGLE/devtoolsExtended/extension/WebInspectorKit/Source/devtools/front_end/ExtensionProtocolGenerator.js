// File is generated by Source/devtools/scripts/CodeGeneratorFrontend.py

// Copyright (c) 2011 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

function extensionProtocolGenerator() {
  function ProtocolImpl(remoteDebug) {
    ProtocolImpl.remoteDebug = remoteDebug;
  }
  ProtocolImpl.prototype = {};
  ProtocolImpl.prototype.Inspector = {};

  ProtocolImpl.prototype.Memory = {};

  ProtocolImpl.prototype.Page = {};
  // Ignore Enum("Page.ResourceType", {Document: "Document", Stylesheet: "Stylesheet", Image: "Image", Font: "Font", Script: "Script", XHR: "XHR", WebSocket: "WebSocket", Other: "Other"})

  ProtocolImpl.prototype.Runtime = {};
  // Ignore Enum("Runtime.RemoteObjectType", {Object: "object", Function: "function", Undefined: "undefined", String: "string", Number: "number", Boolean: "boolean"})
  // Ignore Enum("Runtime.RemoteObjectSubtype", {Array: "array", Null: "null", Node: "node", Regexp: "regexp", Date: "date"})
  // Ignore Enum("Runtime.PropertyPreviewType", {Object: "object", Function: "function", Undefined: "undefined", String: "string", Number: "number", Boolean: "boolean"})
  // Ignore Enum("Runtime.PropertyPreviewSubtype", {Array: "array", Null: "null", Node: "node", Regexp: "regexp", Date: "date"})

  ProtocolImpl.prototype.Console = {};
  // Ignore Enum("Console.ConsoleMessageSource", {XML: "xml", Javascript: "javascript", Network: "network", ConsoleAPI: "console-api", Storage: "storage", Appcache: "appcache", Rendering: "rendering", Css: "css", Security: "security", Other: "other", Deprecation: "deprecation"})
  // Ignore Enum("Console.ConsoleMessageLevel", {Log: "log", Warning: "warning", Error: "error", Debug: "debug"})
  // Ignore Enum("Console.ConsoleMessageType", {Log: "log", Dir: "dir", DirXML: "dirxml", Table: "table", Trace: "trace", Clear: "clear", StartGroup: "startGroup", StartGroupCollapsed: "startGroupCollapsed", EndGroup: "endGroup", Assert: "assert", Profile: "profile", ProfileEnd: "profileEnd"})
  ProtocolImpl.prototype.Console.onMessageAdded = {
    addListener: function (callback) {
      ProtocolImpl.remoteDebug.addListener("Console.messageAdded", callback);
    },
    removeListener: function (callback) {
      ProtocolImpl.remoteDebug.removeListener("Console.messageAdded", callback);
    },
  };
  ProtocolImpl.prototype.Console.onMessageRepeatCountUpdated = {
    addListener: function (callback) {
      ProtocolImpl.remoteDebug.addListener(
        "Console.messageRepeatCountUpdated",
        callback
      );
    },
    removeListener: function (callback) {
      ProtocolImpl.remoteDebug.removeListener(
        "Console.messageRepeatCountUpdated",
        callback
      );
    },
  };
  ProtocolImpl.prototype.Console.onMessagesCleared = {
    addListener: function (callback) {
      ProtocolImpl.remoteDebug.addListener("Console.messagesCleared", callback);
    },
    removeListener: function (callback) {
      ProtocolImpl.remoteDebug.removeListener(
        "Console.messagesCleared",
        callback
      );
    },
  };

  ProtocolImpl.prototype.Network = {};
  // Ignore Enum("Network.InitiatorType", {Parser: "parser", Script: "script", Other: "other"})

  ProtocolImpl.prototype.Database = {};

  ProtocolImpl.prototype.IndexedDB = {};
  // Ignore Enum("IndexedDB.KeyType", {Number: "number", String: "string", Date: "date", Array: "array"})
  // Ignore Enum("IndexedDB.KeyPathType", {Null: "null", String: "string", Array: "array"})

  ProtocolImpl.prototype.DOMStorage = {};

  ProtocolImpl.prototype.ApplicationCache = {};

  ProtocolImpl.prototype.FileSystem = {};

  ProtocolImpl.prototype.DOM = {};
  // Ignore Enum("DOM.PseudoType", {Before: "before", After: "after"})

  ProtocolImpl.prototype.CSS = {};
  // Ignore Enum("CSS.StyleSheetOrigin", {User: "user", UserAgent: "user-agent", Inspector: "inspector", Regular: "regular"})
  // Ignore Enum("CSS.CSSPropertyStatus", {Active: "active", Inactive: "inactive", Disabled: "disabled", Style: "style"})
  // Ignore Enum("CSS.CSSMediaSource", {MediaRule: "mediaRule", ImportRule: "importRule", LinkedSheet: "linkedSheet", InlineSheet: "inlineSheet"})
  // Ignore Enum("CSS.RegionRegionOverset", {Overset: "overset", Fit: "fit", Empty: "empty"})

  ProtocolImpl.prototype.Timeline = {};

  ProtocolImpl.prototype.Debugger = {};
  // Ignore Enum("Debugger.ScopeType", {Global: "global", Local: "local", With: "with", Closure: "closure", Catch: "catch"})

  ProtocolImpl.prototype.DOMDebugger = {};
  // Ignore Enum("DOMDebugger.DOMBreakpointType", {SubtreeModified: "subtree-modified", AttributeModified: "attribute-modified", NodeRemoved: "node-removed"})

  ProtocolImpl.prototype.Profiler = {};

  ProtocolImpl.prototype.HeapProfiler = {};

  ProtocolImpl.prototype.Worker = {};

  ProtocolImpl.prototype.Canvas = {};
  // Ignore Enum("Canvas.CallArgumentType", {Object: "object", Function: "function", Undefined: "undefined", String: "string", Number: "number", Boolean: "boolean"})
  // Ignore Enum("Canvas.CallArgumentSubtype", {Array: "array", Null: "null", Node: "node", Regexp: "regexp", Date: "date"})

  ProtocolImpl.prototype.Input = {};
  // Ignore Enum("Input.TouchPointState", {TouchPressed: "touchPressed", TouchReleased: "touchReleased", TouchMoved: "touchMoved", TouchStationary: "touchStationary", TouchCancelled: "touchCancelled"})

  ProtocolImpl.prototype.LayerTree = {};

  ProtocolImpl.prototype.Tracing = {};

  return ProtocolImpl;
}

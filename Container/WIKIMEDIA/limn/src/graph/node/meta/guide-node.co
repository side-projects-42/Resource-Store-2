_  = require 'underscore'
ko = require 'knockout'
moment = require 'moment'

{ GraphNodeData,
} = require '../graph-node-data'
{ GraphNode,
} = require '../graph-node'

Trait = require '../graph-node-trait'


/**
 * @class
 * @extends GraphNodeData
 */
class exports.GuideNodeData extends GraphNodeData
    @registerType 'guide'
    
    defaults: ->
        dimension : null # x | y
        options   : 
            stroke :
                width   : 1
                color   : '#CACACA'
                opacity : 1
    
    attributeTypes: ->
        {}
    
    -> super ...



/**
 * @class
 * @extends GraphNode
 */
class exports.GuideNode extends GraphNode
    @registerType 'guide'
    traits : [
        Trait.META_NODE
        Trait.BG_LAYER
        Trait.SVG
        Trait.LEAF
    ]
    
    
    -> super ...
    
    
    render: ->
        options = @model().options()
        return unless scales    = @root().scalesIfValid()
        return unless dimension = options.get('dimension')
        
        return if @line
        
        @line = @sparent.append 'line'
            .attr do
                'pointer-events': 'none'
        
        switch dimension
            case 'x'
                @line
                    .classed 'verticalGuide', true
                    .attr do
                        y1: 0
                        y2: @root().height()
                
                @root().handle 'hover-graph', this, (xOffset) ~>
                    @line.attr do
                        x1: xOffset
                        x2: xOffset
                
                @root().handle 'hover-out-graph', this, ~>
                    @line.attr do
                        x1: 0
                        x2: 0

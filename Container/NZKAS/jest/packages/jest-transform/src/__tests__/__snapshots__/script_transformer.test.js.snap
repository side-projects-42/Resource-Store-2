// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScriptTransformer passes expected transform options to getCacheKey 1`] = `
Object {
  "config": Object {
    "automock": false,
    "browser": false,
    "cache": true,
    "cacheDirectory": "/cache/",
    "clearMocks": false,
    "coveragePathIgnorePatterns": Array [],
    "cwd": "/test_root_dir/",
    "detectLeaks": false,
    "detectOpenHandles": false,
    "displayName": undefined,
    "errorOnDeprecated": false,
    "extraGlobals": Array [],
    "filter": null,
    "forceCoverageMatch": Array [],
    "globalSetup": null,
    "globalTeardown": null,
    "globals": Object {},
    "haste": Object {
      "providesModuleNodeModules": Array [],
    },
    "moduleDirectories": Array [],
    "moduleFileExtensions": Array [
      "js",
    ],
    "moduleLoader": "/test_module_loader_path",
    "moduleNameMapper": Array [],
    "modulePathIgnorePatterns": Array [],
    "modulePaths": Array [],
    "name": "test",
    "prettierPath": "prettier",
    "resetMocks": false,
    "resetModules": false,
    "resolver": null,
    "restoreMocks": false,
    "rootDir": "/",
    "roots": Array [],
    "runner": "jest-runner",
    "setupFiles": Array [],
    "setupFilesAfterEnv": Array [],
    "skipFilter": false,
    "skipNodeResolution": false,
    "snapshotResolver": null,
    "snapshotSerializers": Array [],
    "testEnvironment": "node",
    "testEnvironmentOptions": Object {},
    "testLocationInResults": false,
    "testMatch": Array [],
    "testPathIgnorePatterns": Array [],
    "testRegex": Array [
      "\\\\.test\\\\.js$",
    ],
    "testRunner": "jest-jasmine2",
    "testURL": "",
    "timers": "real",
    "transform": Array [
      Array [
        "^.+\\\\.js$",
        "test_preprocessor",
      ],
    ],
    "transformIgnorePatterns": Array [
      "/node_modules/",
    ],
    "unmockedModulePathPatterns": null,
    "watchPathIgnorePatterns": Array [],
  },
  "instrument": true,
  "rootDir": "/",
}
`;

exports[`ScriptTransformer transforms a file properly 1`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest){/* istanbul ignore next */
var cov_25u22311x4 = function () {
  var path = \\"/fruits/banana.js\\";
  var hash = \\"ef12c7f3c0d46c0ac007781d50b4e524293578c6\\";

  var Function = function () {}.constructor;

  var global = new Function(\\"return this\\")();
  var gcv = \\"__coverage__\\";
  var coverageData = {
    path: \\"/fruits/banana.js\\",
    statementMap: {
      \\"0\\": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 26
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      \\"0\\": 0
    },
    f: {},
    b: {},
    _coverageSchema: \\"43e27e138ebf9cfc5966b082cf9a028302ed4184\\"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

cov_25u22311x4.s[0]++;
module.exports = \\"banana\\";
}});"
`;

exports[`ScriptTransformer transforms a file properly 2`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest){/* istanbul ignore next */
var cov_23yvu8etmu = function () {
  var path = \\"/fruits/kiwi.js\\";
  var hash = \\"90cf6273dfbcd93e4510a6c5503c2125aab1f1b8\\";

  var Function = function () {}.constructor;

  var global = new Function(\\"return this\\")();
  var gcv = \\"__coverage__\\";
  var coverageData = {
    path: \\"/fruits/kiwi.js\\",
    statementMap: {
      \\"0\\": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 30
        }
      },
      \\"1\\": {
        start: {
          line: 1,
          column: 23
        },
        end: {
          line: 1,
          column: 29
        }
      }
    },
    fnMap: {
      \\"0\\": {
        name: \\"(anonymous_0)\\",
        decl: {
          start: {
            line: 1,
            column: 17
          },
          end: {
            line: 1,
            column: 18
          }
        },
        loc: {
          start: {
            line: 1,
            column: 23
          },
          end: {
            line: 1,
            column: 29
          }
        },
        line: 1
      }
    },
    branchMap: {},
    s: {
      \\"0\\": 0,
      \\"1\\": 0
    },
    f: {
      \\"0\\": 0
    },
    b: {},
    _coverageSchema: \\"43e27e138ebf9cfc5966b082cf9a028302ed4184\\"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

cov_23yvu8etmu.s[0]++;

module.exports = () => {
  /* istanbul ignore next */
  cov_23yvu8etmu.f[0]++;
  cov_23yvu8etmu.s[1]++;
  return \\"kiwi\\";
};
}});"
`;

exports[`ScriptTransformer transforms a file properly 3`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest,Math){module.exports = \\"banana\\";
}});"
`;

exports[`ScriptTransformer uses multiple preprocessors 1`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest){
          const TRANSFORMED = {
            filename: '/fruits/banana.js',
            script: 'module.exports = \\"banana\\";',
            config: '{\\"automock\\":false,\\"browser\\":false,\\"cache\\":true,\\"cacheDirectory\\":\\"/cache/\\",\\"clearMocks\\":false,\\"coveragePathIgnorePatterns\\":[],\\"cwd\\":\\"/test_root_dir/\\",\\"detectLeaks\\":false,\\"detectOpenHandles\\":false,\\"errorOnDeprecated\\":false,\\"extraGlobals\\":[],\\"filter\\":null,\\"forceCoverageMatch\\":[],\\"globalSetup\\":null,\\"globalTeardown\\":null,\\"globals\\":{},\\"haste\\":{\\"providesModuleNodeModules\\":[]},\\"moduleDirectories\\":[],\\"moduleFileExtensions\\":[\\"js\\"],\\"moduleLoader\\":\\"/test_module_loader_path\\",\\"moduleNameMapper\\":[],\\"modulePathIgnorePatterns\\":[],\\"modulePaths\\":[],\\"name\\":\\"test\\",\\"prettierPath\\":\\"prettier\\",\\"resetMocks\\":false,\\"resetModules\\":false,\\"resolver\\":null,\\"restoreMocks\\":false,\\"rootDir\\":\\"/\\",\\"roots\\":[],\\"runner\\":\\"jest-runner\\",\\"setupFiles\\":[],\\"setupFilesAfterEnv\\":[],\\"skipFilter\\":false,\\"skipNodeResolution\\":false,\\"snapshotResolver\\":null,\\"snapshotSerializers\\":[],\\"testEnvironment\\":\\"node\\",\\"testEnvironmentOptions\\":{},\\"testLocationInResults\\":false,\\"testMatch\\":[],\\"testPathIgnorePatterns\\":[],\\"testRegex\\":[\\"\\\\\\\\.test\\\\\\\\.js$\\"],\\"testRunner\\":\\"jest-jasmine2\\",\\"testURL\\":\\"\\",\\"timers\\":\\"real\\",\\"transform\\":[[\\"^.+\\\\\\\\.js$\\",\\"test_preprocessor\\"],[\\"^.+\\\\\\\\.css$\\",\\"css-preprocessor\\"]],\\"transformIgnorePatterns\\":[\\"/node_modules/\\"],\\"unmockedModulePathPatterns\\":null,\\"watchPathIgnorePatterns\\":[]}',
          };
        
}});"
`;

exports[`ScriptTransformer uses multiple preprocessors 2`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest){
          module.exports = {
            filename: /styles/App.css,
            rawFirstLine: root {,
          };
        
}});"
`;

exports[`ScriptTransformer uses multiple preprocessors 3`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest){module.exports = \\"react\\";
}});"
`;

exports[`ScriptTransformer uses the supplied preprocessor 1`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest){
          const TRANSFORMED = {
            filename: '/fruits/banana.js',
            script: 'module.exports = \\"banana\\";',
            config: '{\\"automock\\":false,\\"browser\\":false,\\"cache\\":true,\\"cacheDirectory\\":\\"/cache/\\",\\"clearMocks\\":false,\\"coveragePathIgnorePatterns\\":[],\\"cwd\\":\\"/test_root_dir/\\",\\"detectLeaks\\":false,\\"detectOpenHandles\\":false,\\"errorOnDeprecated\\":false,\\"extraGlobals\\":[],\\"filter\\":null,\\"forceCoverageMatch\\":[],\\"globalSetup\\":null,\\"globalTeardown\\":null,\\"globals\\":{},\\"haste\\":{\\"providesModuleNodeModules\\":[]},\\"moduleDirectories\\":[],\\"moduleFileExtensions\\":[\\"js\\"],\\"moduleLoader\\":\\"/test_module_loader_path\\",\\"moduleNameMapper\\":[],\\"modulePathIgnorePatterns\\":[],\\"modulePaths\\":[],\\"name\\":\\"test\\",\\"prettierPath\\":\\"prettier\\",\\"resetMocks\\":false,\\"resetModules\\":false,\\"resolver\\":null,\\"restoreMocks\\":false,\\"rootDir\\":\\"/\\",\\"roots\\":[],\\"runner\\":\\"jest-runner\\",\\"setupFiles\\":[],\\"setupFilesAfterEnv\\":[],\\"skipFilter\\":false,\\"skipNodeResolution\\":false,\\"snapshotResolver\\":null,\\"snapshotSerializers\\":[],\\"testEnvironment\\":\\"node\\",\\"testEnvironmentOptions\\":{},\\"testLocationInResults\\":false,\\"testMatch\\":[],\\"testPathIgnorePatterns\\":[],\\"testRegex\\":[\\"\\\\\\\\.test\\\\\\\\.js$\\"],\\"testRunner\\":\\"jest-jasmine2\\",\\"testURL\\":\\"\\",\\"timers\\":\\"real\\",\\"transform\\":[[\\"^.+\\\\\\\\.js$\\",\\"test_preprocessor\\"]],\\"transformIgnorePatterns\\":[\\"/node_modules/\\"],\\"unmockedModulePathPatterns\\":null,\\"watchPathIgnorePatterns\\":[]}',
          };
        
}});"
`;

exports[`ScriptTransformer uses the supplied preprocessor 2`] = `
"({\\"Object.<anonymous>\\":function(module,exports,require,__dirname,__filename,global,jest){module.exports = \\"react\\";
}});"
`;

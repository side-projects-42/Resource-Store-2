<!doctype html>
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %link{:href => "https://fonts.googleapis.com/css?family=Roboto:400,300,500,900,700,700italic", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "/css/lib.css", :rel => "stylesheet", :type => "text/css"}/
    
    = partial('scriptlinks.html.haml') 
    
    %script{:src => "https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js"}
    %script{:src => "/js/cjp-grid.js"}
    %script{:src => "/js/plguinlist-service.js"}
    %script{:src => "/js/featured-service.json"}
  %body
    = partial('toptoolbar.html.haml',:section=>'plugins', :specific=>'plugins')
    :javascript
      ///////////////////////////
      // custom renderers
      
      function drawIcon(cell,row,col){
        var $div = $('');
        var value = $.trim(cell.value.toLowerCase().replace('jenkins','').replace('plugin',''));
        if(typeof value !== 'string') return $div;
        
        
        var $html = $('');
        var valArr = value.split(' ');
        var $s0 = $('').text(valArr[0].substring(0,1));
        var $s1 = [];
        var className = 'single';
        var s1 = valArr[1];
        if(s1) {
          className = 'double';
          s1 = s1.substring(0,1);
          $s1 = $('').text(s1);
        }
        
        $html
          .append($s0)
          .append($s1)
          .addClass(className)
          .appendTo($div);
        
        return $div;
      }
      
      
      function dependencyRenderer(cell,row,col){
        var $div = $('');
        if($.isArray(cell.value))    
          $.each(cell.value,function(i,dep){
            var $item = $('');
            var $title = $('').text(dep.name).appendTo($item);
            var $v = $('').text(dep.version).appendTo($item);
            $item.appendTo($div);
          });
        
        return $div;
      }
      
      function maintainerRenderer(cell,row,col){
        var $div = $('');
        if($.isArray(cell.value))    
          $.each(cell.value,function(i,val){
            var $item = $('')
              .text(val.name || val.developerId || val.email)
              .appendTo($div);
          });
        
        return $div;
      }
      
      function fromNowRenderer(cell,row,col){
        var $div = $('')
          .text(moment(cell.value).fromNow());
      
        return $div;
      }
      
      function titleRenderer(cell,row,col){
        cell.value = row.items[col.id];
        var val = cell.value.replace('Plug-in','').replace('Plug-In','').replace('_Plugin','').replace('-Plugin','').replace('-plugin','').replace('Plugin','').replace('plugin','').replace('Jenkins','');
        var $a = $('')
          .attr('href',row.items.wiki)
          .text(val);
      
        return $a;
      }
      
      
      function titleGrouper(cell,row,col){
        var group = {
            id:row.id || row.items['gav'],
            title:row.title || cell,
            value:cell,
            rows:[] 
        };
        
        return group;
      }
      
      
      
      
      $(function() {
      
        $.getScript('https://updates.jenkins-ci.org/current/update-center.json');
       
        $(window).on('loadComplete',function(e,data){
          if(data.loaded) data.cleanData(data);
          //$('#test')[0].methods.setViewType('block');
        });
      
      
      });
//
// MHVActionPlanTasksApi.h
// MHVLib
//
// Copyright (c) 2017 Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import <Foundation/Foundation.h>
#import "MHVRemoteMonitoringClient.h"
#import "MHVActionPlanTask.h"
#import "MHVActionPlanTaskInstance.h"
#import "MHVActionPlanTasksResponseActionPlanTaskInstance_.h"
#import "MHVErrorResponse.h"


NS_ASSUME_NONNULL_BEGIN

@interface MHVRemoteMonitoringClient (MHVActionPlanTasksApi)

/// Post a new action plan task
/// 
///
/// @param actionPlanTask The action plan task to create.
/// 
- (void)actionPlanTasksCreateWithActionPlanTask:(MHVActionPlanTask* )actionPlanTask
    completion:(void(^_Nonnull)(MHVActionPlanTaskInstance* _Nullable output, NSError* _Nullable error))completion;


/// Delete a task by id
/// 
///
/// @param actionPlanTaskId The unique identifer of the task.
/// 
- (void)actionPlanTasksDeleteWithActionPlanTaskId:(NSString* )actionPlanTaskId
    completion:(void(^_Nonnull)(NSError* _Nullable error))completion;


/// Get a collection of task definitions
/// 
///
/// @param actionPlanTaskStatus An optional status used to filter the results. (optional)
/// 
- (void)actionPlanTasksGetWithActionPlanTaskStatus:(MHVActionPlanTaskInstanceStatusEnum* _Nullable)actionPlanTaskStatus
    completion:(void(^_Nonnull)(MHVActionPlanTasksResponseActionPlanTaskInstance_* _Nullable output, NSError* _Nullable error))completion;


/// Get a task by id
/// 
///
/// @param actionPlanTaskId The unique identifer of the task.
/// 
- (void)actionPlanTasksGetByIdWithActionPlanTaskId:(NSString* )actionPlanTaskId
    completion:(void(^_Nonnull)(MHVActionPlanTaskInstance* _Nullable output, NSError* _Nullable error))completion;


/// Put an update for an action plan task
/// 
///
/// @param actionPlanTask The updated action plan task.
/// 
- (void)actionPlanTasksReplaceWithActionPlanTask:(MHVActionPlanTaskInstance* )actionPlanTask
    completion:(void(^_Nonnull)(MHVActionPlanTaskInstance* _Nullable output, NSError* _Nullable error))completion;


/// Patch an update for an action plan task
/// 
///
/// @param actionPlanTask The updated task
/// 
- (void)actionPlanTasksUpdateWithActionPlanTask:(MHVActionPlanTaskInstance* )actionPlanTask
    completion:(void(^_Nonnull)(MHVActionPlanTaskInstance* _Nullable output, NSError* _Nullable error))completion;



@end

NS_ASSUME_NONNULL_END

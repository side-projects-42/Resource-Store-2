"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var SplitContext_1 = __importDefault(require("./SplitContext"));
var constants_1 = require("./constants");
var utils_1 = require("./utils");
/**
 * 'useClient' is a custom hook that returns a client from the Split context.
 * It uses the 'useContext' hook to access the context, which is updated by
 * SplitFactory and SplitClient components in the hierarchy of components.
 *
 * @return A Split Client instance, or null if used outside the scope of SplitFactory
 * @see {@link https://help.split.io/hc/en-us/articles/360020448791-JavaScript-SDK#advanced-instantiate-multiple-sdk-clients}
 */
var useClient = function (key, trafficType) {
    if (!utils_1.checkHooks(constants_1.ERROR_UC_NO_USECONTEXT))
        return null;
    var _a = react_1.default.useContext(SplitContext_1.default), factory = _a.factory, client = _a.client;
    if (key) {
        return factory ? utils_1.getSplitSharedClient(factory, key, trafficType) : null;
    }
    return client;
};
exports.default = useClient;

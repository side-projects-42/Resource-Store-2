"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SplitNetworkError = exports.SplitTimeoutError = exports.SplitError = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var SplitError = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(SplitError, _Error);

  var _super = _createSuper(SplitError);

  function SplitError() {
    var _this;

    var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Split Error';
    (0, _classCallCheck2.default)(this, SplitError);
    _this = _super.call(this, msg);
    _this.message = msg;
    return _this;
  }

  return SplitError;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));

exports.SplitError = SplitError;

var SplitTimeoutError = /*#__PURE__*/function (_SplitError) {
  (0, _inherits2.default)(SplitTimeoutError, _SplitError);

  var _super2 = _createSuper(SplitTimeoutError);

  function SplitTimeoutError(msg) {
    (0, _classCallCheck2.default)(this, SplitTimeoutError);
    return _super2.call(this, msg || 'Split Timeout Error');
  }

  return SplitTimeoutError;
}(SplitError);

exports.SplitTimeoutError = SplitTimeoutError;

var SplitNetworkError = /*#__PURE__*/function (_SplitError2) {
  (0, _inherits2.default)(SplitNetworkError, _SplitError2);

  var _super3 = _createSuper(SplitNetworkError);

  function SplitNetworkError(msg, code) {
    var _this2;

    (0, _classCallCheck2.default)(this, SplitNetworkError);
    _this2 = _super3.call(this, msg || 'Split Network Error');
    _this2.statusCode = code;
    return _this2;
  }

  return SplitNetworkError;
}(SplitError);

exports.SplitNetworkError = SplitNetworkError;
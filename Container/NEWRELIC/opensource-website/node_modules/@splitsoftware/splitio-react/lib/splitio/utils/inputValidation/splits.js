"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateSplits = validateSplits;

var _lang = require("../lang");

var _logger = _interopRequireDefault(require("../logger"));

var _split = require("./split");

var log = (0, _logger.default)('');

function validateSplits(maybeSplits, method) {
  var listName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'split_names';
  var item = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'split name';

  if (Array.isArray(maybeSplits) && maybeSplits.length > 0) {
    var validatedArray = []; // Remove invalid values

    maybeSplits.forEach(function (maybeSplit) {
      var splitName = (0, _split.validateSplit)(maybeSplit, method, item);
      if (splitName) validatedArray.push(splitName);
    }); // Strip off duplicated values if we have valid split names then return

    if (validatedArray.length) return (0, _lang.uniq)(validatedArray);
  }

  log.error("".concat(method, ": ").concat(listName, " must be a non-empty array."));
  return false;
}
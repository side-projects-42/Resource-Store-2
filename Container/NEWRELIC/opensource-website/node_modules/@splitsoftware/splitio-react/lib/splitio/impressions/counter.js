"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _time = require("../utils/time");

var _objectAssign = _interopRequireDefault(require("object-assign"));

var ImpressionCounter = /*#__PURE__*/function () {
  function ImpressionCounter() {
    (0, _classCallCheck2.default)(this, ImpressionCounter);
    this.cache = {};
  }
  /**
  * Builds key to be stored in the cache with the featureName and the timeFrame truncated.
  */


  (0, _createClass2.default)(ImpressionCounter, [{
    key: "_makeKey",
    value: function _makeKey(featureName, timeFrame) {
      return "".concat(featureName, "::").concat((0, _time.truncateTimeFrame)(timeFrame));
    }
    /**
    * Increments the quantity of impressions with the passed featureName and timeFrame.
    */

  }, {
    key: "inc",
    value: function inc(featureName, timeFrame, amount) {
      var key = this._makeKey(featureName, timeFrame);

      var currentAmount = this.cache[key];
      this.cache[key] = currentAmount ? currentAmount + amount : amount;
    }
    /**
    * Returns all the elements stored in the cache and resets the cache.
    */

  }, {
    key: "popAll",
    value: function popAll() {
      var res = {};
      (0, _objectAssign.default)(res, this.cache);
      this.cache = {};
      return res;
    }
    /**
    * Returns how many keys are stored in cache.
    */

  }, {
    key: "size",
    value: function size() {
      return Object.keys(this.cache).length;
    }
  }]);
  return ImpressionCounter;
}();

var _default = ImpressionCounter;
exports.default = _default;
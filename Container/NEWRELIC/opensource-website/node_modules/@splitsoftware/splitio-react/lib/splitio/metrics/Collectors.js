"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClientCollector = exports.MySegmentsCollector = exports.SplitChangesCollector = exports.SegmentChangesCollector = void 0;

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var ProducerMetricsCollector = /*#__PURE__*/function () {
  function ProducerMetricsCollector(storage) {
    (0, _classCallCheck2.default)(this, ProducerMetricsCollector);
    this.storage = storage;
    this.latency = this.latency.bind(this);
    this.count = this.count.bind(this);
    this.countException = this.countException.bind(this);
  }

  (0, _createClass2.default)(ProducerMetricsCollector, [{
    key: "latency",
    value: function latency(ms) {
      this.storage.metrics.track("".concat(this.metricType, ".time"), ms);
    }
  }, {
    key: "count",
    value: function count(status) {
      this.storage.count.track("".concat(this.metricType, ".status.").concat(status));
    }
  }, {
    key: "countException",
    value: function countException() {
      this.storage.count.track("".concat(this.metricType, ".exception"));
    }
  }]);
  return ProducerMetricsCollector;
}();

var SegmentChangesCollector = /*#__PURE__*/function (_ProducerMetricsColle) {
  (0, _inherits2.default)(SegmentChangesCollector, _ProducerMetricsColle);

  var _super = _createSuper(SegmentChangesCollector);

  function SegmentChangesCollector(storage) {
    var _this;

    (0, _classCallCheck2.default)(this, SegmentChangesCollector);
    _this = _super.call(this, storage);
    _this.metricType = 'segmentChangeFetcher';
    return _this;
  }

  return SegmentChangesCollector;
}(ProducerMetricsCollector);

exports.SegmentChangesCollector = SegmentChangesCollector;

var SplitChangesCollector = /*#__PURE__*/function (_ProducerMetricsColle2) {
  (0, _inherits2.default)(SplitChangesCollector, _ProducerMetricsColle2);

  var _super2 = _createSuper(SplitChangesCollector);

  function SplitChangesCollector(storage) {
    var _this2;

    (0, _classCallCheck2.default)(this, SplitChangesCollector);
    _this2 = _super2.call(this, storage);
    _this2.metricType = 'splitChangeFetcher';
    return _this2;
  }

  return SplitChangesCollector;
}(ProducerMetricsCollector);

exports.SplitChangesCollector = SplitChangesCollector;

var MySegmentsCollector = /*#__PURE__*/function (_ProducerMetricsColle3) {
  (0, _inherits2.default)(MySegmentsCollector, _ProducerMetricsColle3);

  var _super3 = _createSuper(MySegmentsCollector);

  function MySegmentsCollector(storage) {
    var _this3;

    (0, _classCallCheck2.default)(this, MySegmentsCollector);
    _this3 = _super3.call(this, storage);
    _this3.metricType = 'mySegmentsFetcher';
    return _this3;
  }

  return MySegmentsCollector;
}(ProducerMetricsCollector);

exports.MySegmentsCollector = MySegmentsCollector;

var ClientCollector = /*#__PURE__*/function () {
  function ClientCollector(storage) {
    (0, _classCallCheck2.default)(this, ClientCollector);
    this.storage = storage;
    this.ready = this.ready.bind(this);
    this.getTreatment = this.getTreatment.bind(this);
    this.getTreatments = this.getTreatments.bind(this);
    this.getTreatmentWithConfig = this.getTreatmentWithConfig.bind(this);
    this.getTreatmentsWithConfig = this.getTreatmentsWithConfig.bind(this);
  }

  (0, _createClass2.default)(ClientCollector, [{
    key: "ready",
    value: function ready(ms) {
      this.storage.metrics.track('sdk.ready', ms);
    }
  }, {
    key: "getTreatment",
    value: function getTreatment(ms) {
      this.storage.metrics.track('sdk.getTreatment', ms);
    }
  }, {
    key: "getTreatments",
    value: function getTreatments(ms) {
      this.storage.metrics.track('sdk.getTreatments', ms);
    }
  }, {
    key: "getTreatmentWithConfig",
    value: function getTreatmentWithConfig(ms) {
      this.storage.metrics.track('sdk.getTreatmentWithConfig', ms);
    }
  }, {
    key: "getTreatmentsWithConfig",
    value: function getTreatmentsWithConfig(ms) {
      this.storage.metrics.track('sdk.getTreatmentsWithConfig', ms);
    }
  }]);
  return ClientCollector;
}();

exports.ClientCollector = ClientCollector;
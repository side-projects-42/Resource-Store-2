"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var useClient_1 = __importDefault(require("./useClient"));
var constants_1 = require("./constants");
var utils_1 = require("./utils");
// no-op function that returns false
var noOpFalse = function () { return false; };
/**
 * 'useTrack' is a custom hook that returns the track method from a Split client.
 * It uses the 'useContext' hook to access the client from the Split context.
 *
 * @return A track function binded to a Split client. If the client is not available, the result is a no-op function that returns false.
 * @see {@link https://help.split.io/hc/en-us/articles/360020448791-JavaScript-SDK#track}
 */
var useTrack = function (key, trafficType) {
    var client = utils_1.checkHooks(constants_1.ERROR_UTRACK_NO_USECONTEXT) ? useClient_1.default(key, trafficType) : null;
    return client ? client.track.bind(client) : noOpFalse;
};
exports.default = useTrack;

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var useClient_1 = __importDefault(require("./useClient"));
var constants_1 = require("./constants");
var utils_1 = require("./utils");
/**
 * 'useTreatments' is a custom hook that returns a list of treatments.
 * It uses the 'useContext' hook to access the client from the Split context,
 * and invokes the 'getTreatmentsWithConfig' method.
 *
 * @return A TreatmentsWithConfig instance, that might contain control treatments if the client is not available or ready, or if split names do not exist.
 * @see {@link https://help.split.io/hc/en-us/articles/360020448791-JavaScript-SDK#get-treatments-with-configurations}
 */
var useTreatments = function (splitNames, attributes, key) {
    var client = utils_1.checkHooks(constants_1.ERROR_UT_NO_USECONTEXT) ? useClient_1.default(key) : null;
    return client ?
        client.getTreatmentsWithConfig(splitNames, attributes) :
        constants_1.getControlTreatmentsWithConfig(splitNames);
};
exports.default = useTreatments;

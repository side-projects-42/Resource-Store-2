import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";

var Backoff = /*#__PURE__*/function () {
  /**
   * Schedule function calls with exponential backoff
   *
   * @param {function} cb
   * @param {number} baseMillis
   * @param {number} maxMillis
   */
  function Backoff(cb, baseMillis, maxMillis) {
    _classCallCheck(this, Backoff);

    this.baseMillis = baseMillis || Backoff.DEFAULT_BASE_MILLIS;
    this.maxMillis = maxMillis || Backoff.DEFAULT_MAX_MILLIS;
    this.attempts = 0;
    this.cb = cb;
  }
  /**
   * Schedule a next call to `cb`
   * @returns scheduled delay in milliseconds
   */


  _createClass(Backoff, [{
    key: "scheduleCall",
    value: function scheduleCall() {
      var _this = this;

      var delayInMillis = Math.min(this.baseMillis * Math.pow(2, this.attempts), this.maxMillis);
      if (this.timeoutID) clearTimeout(this.timeoutID);
      this.timeoutID = setTimeout(function () {
        _this.cb();
      }, delayInMillis);
      this.attempts++;
      return delayInMillis;
    }
  }, {
    key: "reset",
    value: function reset() {
      this.attempts = 0;

      if (this.timeoutID) {
        clearTimeout(this.timeoutID);
        this.timeoutID = 0;
      }
    }
  }]);

  return Backoff;
}();

Backoff.DEFAULT_BASE_MILLIS = 1000; // 1 second

Backoff.DEFAULT_MAX_MILLIS = 1800000; // 30 minutes

export default Backoff;
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import { truncateTimeFrame } from '../utils/time';
import objectAssign from 'object-assign';

var ImpressionCounter = /*#__PURE__*/function () {
  function ImpressionCounter() {
    _classCallCheck(this, ImpressionCounter);

    this.cache = {};
  }
  /**
  * Builds key to be stored in the cache with the featureName and the timeFrame truncated.
  */


  _createClass(ImpressionCounter, [{
    key: "_makeKey",
    value: function _makeKey(featureName, timeFrame) {
      return "".concat(featureName, "::").concat(truncateTimeFrame(timeFrame));
    }
    /**
    * Increments the quantity of impressions with the passed featureName and timeFrame.
    */

  }, {
    key: "inc",
    value: function inc(featureName, timeFrame, amount) {
      var key = this._makeKey(featureName, timeFrame);

      var currentAmount = this.cache[key];
      this.cache[key] = currentAmount ? currentAmount + amount : amount;
    }
    /**
    * Returns all the elements stored in the cache and resets the cache.
    */

  }, {
    key: "popAll",
    value: function popAll() {
      var res = {};
      objectAssign(res, this.cache);
      this.cache = {};
      return res;
    }
    /**
    * Returns how many keys are stored in cache.
    */

  }, {
    key: "size",
    value: function size() {
      return Object.keys(this.cache).length;
    }
  }]);

  return ImpressionCounter;
}();

export default ImpressionCounter;
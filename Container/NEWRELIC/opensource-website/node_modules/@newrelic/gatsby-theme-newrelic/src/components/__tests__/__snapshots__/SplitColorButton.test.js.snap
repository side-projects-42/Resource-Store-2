// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders button with color defined in split 1`] = `
.emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  border-radius: 3px;
  font-family: var(--primary-font-family);
  line-height: 1;
  cursor: pointer;
  border: 1px solid transparent;
  -webkit-transition: all 0.15s ease-out;
  transition: all 0.15s ease-out;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: var(--color-white);
  background-color: var(--color-brand-600);
  font-size: 0.625rem;
  padding: 0.375rem 0.625rem;
  border-radius: 0.125rem;
  background-color: red;
}

.emotion-0:hover {
  color: var(--color-white);
  background-color: var(--color-brand-500);
}

<button
  className="emotion-0 emotion-1"
  onClick={[Function]}
  size="extraSmall"
>
  <span>
    Test
  </span>
</button>
`;

exports[`renders children 1`] = `
.emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  border-radius: 3px;
  font-family: var(--primary-font-family);
  line-height: 1;
  cursor: pointer;
  border: 1px solid transparent;
  -webkit-transition: all 0.15s ease-out;
  transition: all 0.15s ease-out;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: var(--color-white);
  background-color: var(--color-brand-600);
  font-size: 0.625rem;
  padding: 0.375rem 0.625rem;
  border-radius: 0.125rem;
  background-color: blue;
}

.emotion-0:hover {
  color: var(--color-white);
  background-color: var(--color-brand-500);
}

<button
  className="emotion-0 emotion-1"
  onClick={[Function]}
  size="extraSmall"
>
  <span>
    Test child text must match
  </span>
</button>
`;

exports[`renders default button with no split 1`] = `
.emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  border-radius: 3px;
  font-family: var(--primary-font-family);
  line-height: 1;
  cursor: pointer;
  border: 1px solid transparent;
  -webkit-transition: all 0.15s ease-out;
  transition: all 0.15s ease-out;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: var(--color-white);
  background-color: var(--color-brand-600);
  font-size: 0.625rem;
  padding: 0.375rem 0.625rem;
  border-radius: 0.125rem;
}

.emotion-0:hover {
  color: var(--color-white);
  background-color: var(--color-brand-500);
}

<button
  className="emotion-0 emotion-1"
  onClick={[Function]}
  size="extraSmall"
>
  <span>
    Test
  </span>
</button>
`;

exports[`renders spinner before split.io is ready 1`] = `
@keyframes animation-0 {
  to {
    -webkit-transform: rotate(1turn);
    -moz-transform: rotate(1turn);
    -ms-transform: rotate(1turn);
    transform: rotate(1turn);
  }
}

.emotion-0 {
  --spinner-size: 1rem;
  display: inline-block;
  position: relative;
  height: 100%;
  width: 100%;
}

.emotion-0:after {
  -webkit-animation: animation-0 0.5s linear infinite;
  animation: animation-0 0.5s linear infinite;
  border-radius: 50%;
  border-right: 1px solid transparent;
  border-top: 1px solid;
  content: '';
  left: calc(50% + 1px);
  margin-left: calc(var(--spinner-size) / 2 * -1);
  margin-top: calc(var(--spinner-size) / 2 * -1);
  position: absolute;
  top: calc(50% + 1px);
  width: var(--spinner-size);
  height: var(--spinner-size);
}

<div
  aria-busy={true}
  aria-label="Loading"
  className="emotion-0"
/>
`;

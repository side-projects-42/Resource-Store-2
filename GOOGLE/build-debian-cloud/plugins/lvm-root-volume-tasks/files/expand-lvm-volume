#!/bin/bash
### BEGIN INIT INFO
# Provides:       expand-volume
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:  2 3 4 5
# Default-Stop:
# Description:    Expand the filesystem of the mounted root volume to its maximum possible size
### END INIT INFO

prog=$(basename $0)
logger="logger -t $prog"

device_path="/dev/xvda"
new_part_number=3
new_partition="${device_path}${new_part_number}"
lvm_root_volume="/dev/mapper/vg_root-lv_root"

# Check for existence of xvda3 - exit if it exists

if fdisk -l ${device_path} | grep -q ${new_partition}
then
  exit
fi

# Check for free space at end of disk - exit if no extra space
if [ `parted ${device_path} "unit cyl print free" | tail -n2 | head -n1 | awk '{print $3}'` == "0cyl" ]
then
  exit
fi

# Add new xvda3 with type 8e that fills up the disk
( echo n; echo p; echo ${new_part_number}; echo ; echo ; echo t; echo ${new_part_number}; echo 8e; echo w; ) | fdisk ${device_path}
partprobe

# Add the new partition to the VG, extend the LV
pvcreate $new_partition
vgextend vg_root $new_partition
lvextend -l+100%FREE /dev/vg_root/lv_root

# Resize the FS

filesystem=`blkid | grep $lvm_root_volume | sed 's#\(.*\):.*TYPE="\(.*\)".*#\2#'`

case $filesystem in
	xfs)  xfs_growfs / ;;
	ext2) resize2fs $lvm_root_volume ;;
	ext3) resize2fs $lvm_root_volume ;;
	ext4) resize2fs $lvm_root_volume ;;
	*)    $logger "The filesystem $filesystem was not recognized. Unable to expand size." ;;
esac

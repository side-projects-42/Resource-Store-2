2012-04-23  Jim Meyering  <meyering@redhat.com>

	version 2.12
	* NEWS: Record release date.

	build: update gnulib submodule to latest

	tests: skip annoyingly long gnulib lock tests
	* bootstrap.conf (avoided_gnulib_modules): Define.
	(gnulib_tool_option_extras): Use it.

2012-04-22  Jim Meyering  <meyering@redhat.com>

	tests: avoid spurious quote-mismatch failure on OS/X
	* tests/in-eq-out-infloop: Simplify expected error output, eliminating
	expected quotes altogether, thus avoiding spurious OS/X-specific
	failure due to mismatch of multi-byte vs. single-byte quotes.

2012-04-17  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest
	* bootstrap: Also update this file.

2012-04-17  Jim Meyering  <meyering@redhat.com>

	grep: fix --devices=ACTION (-D) so stdin is once again exempt
	An oversight in the 2.11 changes made it so "echo x|grep x" would
	fail for those who set GREP_OPTIONS=--devices=skip.

	* src/main.c (grepdesc): Ignore skip-related options when reading
	from standard input.
	* tests/skip-device: New file.  Test for the above.
	* tests/Makefile.am (TESTS): Add it.
	* doc/grep.texi (File and Directory Selection): Clarify this point,
	documenting the stdin exemption.
	* NEWS (Bug fixes): Mention it, and add a few "[fixed in ...] notes.
	Reported by Tino Keitel in http://bugs.debian.org/669084,
	and forwarded to bug-grep by An√≠bal Monsalve Salazar.

2012-04-13  Jim Meyering  <meyering@redhat.com>

	maint: dfa: correct bogus formatting
	* src/dfa.c (transit_state, dfaexec): s/++ * VAR/++*VAR/

	maint: dfa: add/improve comments
	* src/dfa.c (transit_state_consume_1char): Note always-ignored
	return value.
	Fix typos: s/equivalent class/equivalence class/.

	maint: dfa: avoid unnecessary uses of strcpy/strncpy
	* src/dfa.c (icatalloc): Use memcpy, not strcpy, given the length.
	(dfamust): Combine MALLOC+strcpy into cleaner xmemdup.
	(parse_bracket_exp): Likewise, but replace a use of strncpy.

	grep: handle symlinked directory loops as usual
	* src/main.c (grepfile): Treat EMLINK just like ELOOP, for
	systems like FreeBSD 9.0 on which we would otherwise report
	"Too many links" rather than ignoring that type of failure.
	E.g., "mkdir d; cd d; ln -s . a; grep -r ^" would print
	grep: a: Too many links and would exit with status 2.
	Now, it prints nothing and exits with status 1, as before.
	Reported by Nelson H. F. Beebe.

	tests: avoid spurious failure of the symlink test
	* tests/symlink: Ignore spurious "Binary file d matches" on
	systems for which reading from a directory actually succeeds.
	Reported by Bruno Haible and Nelson Beebe.

2012-04-09  Jim Meyering  <meyering@redhat.com>

	tests: avoid syntax-check failure: reverse compare arguments
	* tests/repetition-overflow: Fix reversed compare arguments.

	build: update gnulib submodule to latest

2012-03-19  Paul Eggert  <eggert@cs.ucla.edu>

	grep: report overflow for ERE a{1000000000}
	* NEWS: Document this.
	* src/dfa.c (MIN): New macro.
	(lex): Lexically analyze the repeat-count operator once, not
	twice; the double-scan complicated the code and made it harder to
	understand and fix.  Adjust the repeat-count parsing so that it
	better matches the behavior of the regex code, in three ways:
	1. Diagnose too-large repeat counts rather than treating them as
	literal characters.  2. Use RE_INVALID_INTERVAL_ORD, not
	RE_NO_BK_BRACES, to decide whether to treat invalid-syntax {...}s
	as literals.  3. Use the same wording for {...}-related
	diagnostics that the regex code uses.
	* tests/bre.tests, tests/ere.tests, tests/repetition-overflow:
	Adjust to match new behavior, and add a few tests.
	* cfg.mk (exclude_file_name_regexp--sc_error_message_uppercase):
	New macro, since the diagnostics start with uppercase letters.

2012-03-15  Paul Eggert  <eggert@cs.ucla.edu>

	grep: -r no longer follows symlinks; use fts
	Change -r to follow only command-line symlinks, and by default to
	read only devices named on the command line.  This is a simple
	way to get a more-useful behavior when searching random
	directories; the idea is to use 'find' if you want something fancy.
	-R acts as before and gets a new alias --dereference-recursive.
	The code now uses fts internally, so it is more robust and
	faster with large hierarchies.
	* .gitignore: Remove lib/savedir.c, lib/savedir.h.
	* tests/symlink: New file
	* Makefile.boot (LIB_OBJS_core): Remove isdir.o, savedir.o.
	Perhaps other changes are needed too, but I'm not sure what
	this makefile is for.
	* NEWS: Document changes.
	* doc/grep.texi (File and Directory Selection): Likewise.
	* bootstrap.conf (gnulib_modules): Remove dirent, dirname, isdir, open.
	Add fstatat, fts, openat-safer.
	* lib/Makefile.am (libgreputils_a_SOURCES): Remove savedir.c, savedir.h.
	* lib/savedir.c, lib/savedir.h: Remove.
	* po/POTFILES.in: Add lib/openat-die.c.
	* src/main.c: Include fcntl-safer.h, fts_.h.  Don't include
	isdir.h, savedir.h.
	(struct stats, stats_base): Remove.
	(long_options, usage, main): Add --dereference-recursive and
	implement -r vs -R.
	(filename_prefix_len, fts_options): New static vars.
	(basic_fts_options, READ_COMMAND_LINE_DEVICES): New constants.
	(devices): Now defaults to READ_COMMAND_LINE_DEVICES.
	(reset, grep): Now takes just struct stat rather than file name and
	struct stats.  All callers changed.
	(fillbuf): Now takes struct stat reather than struct stats.
	All callers changed.
	(grep): Don't worry about recursing too deeply; fts and grepdesc
	handle this now.
	(is_device_mode, grepdirent, grepdesc, grep_command_line_args):
	New functions.
	(grepfile): New args DIRDESC, FOLLOW, COMMAND_LINE.  Remove struct stats
	arg.  All callers changed.  Use openat_safer rather than open.
	Use desc == STDIN_FILENO to tell whether we're reading "-".
	Don't worry about EINTR when closing -- not possible, since we're
	not catching signals.
	* tests/Makefile.am (TESTS): Add symlink.
	* tests/symlink: New file.

2012-03-12  Paul Eggert  <eggert@cs.ucla.edu>

	tests: port big-match to non-GNU dd
	* tests/big-match: Don't assume GNU dd extension "bs=1M".

	tests: test for bug with -r --exclude-dir and no file operand
	* tests/include-exclude: Test for the bug and fix.

2012-03-12  Allan McRae  <allan@archlinux.org>

	grep: fix segfault with -r --exclude-dir and no file operand
	* src/main.c (grepdir): Don't invoke excluded_file_name on NULL.
	* NEWS (Bug fixes): Mention it.

2012-03-09  Jim Meyering  <meyering@redhat.com>

	tests: exercise two recently-fixed bugs
	* tests/repetition-overflow: New test for bugs fixed by commit
	v2.10-82-gcbbc1a4.
	* tests/Makefile.am (TESTS): Add it.

2012-03-03  Jim Meyering  <meyering@redhat.com>

	maint: use an optimal-for-grep xz compression setting
	* cfg.mk (XZ_OPT): Use -6e (determined empirically, see comments).
	This sacrifices a meager 60 bytes of compressed tarball size for a
	55-MiB decrease in the memory required during decompression.  I.e.,
	using -9e would shave off only 60 bytes from the tar.xz file, yet
	would force every decompression process to use 55 MiB more memory.

	build: update gnulib submodule to latest

2012-03-02  Jim Meyering  <meyering@redhat.com>

	maint: post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.11
	* NEWS: Record release date.

	tests: avoid failure when using Solaris 10's sed
	* tests/reversed-range-endpoints: Use a simpler sed expression to
	sanitize actual output, so it also works with Solaris 10's /bin/sed.

	maint: manually correct formatting in dfa.c's cpp definitions
	* src/dfa.c: Adjust formatting in cpp definitions.

	maint: indent dfa.c
	* src/dfa.c: Filter through indent like this:
	HOME=. indent -Tsize_t -l79 --leave-preprocessor-space \
	  --dont-format-comments --no-tabs < dfa.c > k && mv k dfa.c

	doc: correct grep.1's descriptions of \w and \W (they omitted "_")
	* doc/grep.in.1: Fix descriptions of \w and \W.
	They did not mention "_".
	* doc/grep.texi (The Backslash Character and Special Expressions):
	[\w, \W]: List the "_" before the char class, not after: [_[:alnum:]],
	for readability and to be consistent with the man page.

2012-03-02  Paul Eggert  <eggert@cs.ucla.edu>

	maint: spelling fixes

2012-03-01  Paul Eggert  <eggert@cs.ucla.edu>

	grep: fix integer-overflow issues in main program
	* NEWS: Document this.
	* bootstrap.conf (gnulib_modules): Add inttypes, xstrtoimax.
	Remove xstrtoumax.
	* src/main.c: Include <inttypes.h>, for INTMAX_MAX, PRIdMAX.
	(context_length_arg, prtext, grepbuf, grep, grepfile)
	(get_nondigit_option, main):
	Use intmax_t, not int, for line counts.
	(context_length_arg, main): Silently ceiling line counts
	to maximum value, since there's no practical difference between
	doing that and using infinite-precision arithmetic.
	(out_before, out_after, pending): Now intmax_t, not int.
	(max_count, outleft): Now intmax_t, not off_t.
	(prepend_args, prepend_default_options, main):
	Use size_t, not int, for sizes.
	(prepend_default_options): Check for int and size_t overflow.

	grep: avoid mishandling of long lines
	* src/pcresearch.c (Pexecute): Do not pass a line longer than
	INT_MAX to pcre_exec, since its API does not permit that.

	grep: remove no-longer-used setrlimit code
	This code has been unused and obsolescent ever since the regex
	code stopped using the stack for large regular expressions.
	* src/main.c [HAVE_SETRLIMIT]: Do not include <sys/time.h> or
	or <sys/resource.h>; no longer needed.
	(set_rlimits): Remove.  All callers changed.

	grep: fix some core dumps with long lines etc.
	These problems mostly occur because the code attempts to stuff
	sizes into int or into unsigned int; this doesn't work on most
	64-bit hosts and the errors can lead to core dumps.
	* NEWS: Document this.
	* src/dfa.c (token): Typedef to ptrdiff_t, since the enum's
	range could be as small as -128 .. 127 on practical hosts.
	(position.index): Now size_t, not unsigned int.
	(leaf_set.elems): Now size_t *, not unsigned int *.
	(dfa_state.hash, struct mb_char_classes.nchars, .nch_classes)
	(.nranges, .nequivs, .ncoll_elems, struct dfa.cindex, .calloc, .tindex)
	(.talloc, .depth, .nleaves, .nregexps, .nmultibyte_prop, .nmbcsets):
	(.mbcsets_alloc): Now size_t, not int.
	(dfa_state.first_end): Now token, not int.
	(state_num): New type.
	(struct mb_char_classes.cset): Now ptrdiff_t, not int.
	(struct dfa.utf8_anychar_classes): Now token[5], not int[5].
	(struct dfa.sindex, .salloc, .tralloc): Now state_num, not int.
	(struct dfa.trans, .realtrans, .fails): Now state_num **, not int **.
	(struct dfa.newlines): Now state_num *, not int *.
	(prtok): Don't assume 'token' is no wider than int.
	(lexleft, parens, depth): Now size_t, not int.
	(charclass_index, nsubtoks)
	(parse_bracket_exp, addtok, copytoks, closure, insert, merge, delete)
	(state_index, epsclosure, state_separate_contexts)
	(dfaanalyze, dfastate, build_state, realloc_trans_if_necessary)
	(transit_state_singlebyte, match_anychar, match_mb_charset)
	(check_matching_with_multibyte_ops, transit_state_consume_1char)
	(transit_state, dfaexec, free_mbdata, dfaoptimize, dfafree)
	(freelist, enlist, addlists, inboth, dfamust):
	Don't assume indexes fit in 'int'.
	(lex): Avoid overflow in string-to-{hi,lo} conversions.
	(dfaanalyze): Redo indexing so that it works with size_t values,
	which cannot go negative.
	* src/dfa.h (dfaexec): Count argument is now size_t *, not int *.
	(dfastate): State numbers are now ptrdiff_t, not int.
	* src/dfasearch.c: Include "intprops.h", for TYPE_MAXIMUM.
	(kwset_exact_matches): Now size_t, not int.
	(EGexecute): Don't assume indexes fit in 'int'.
	Check for overflow before converting a ptrdiff_t to a regoff_t,
	as regoff_t is narrower than ptrdiff_t in 64-bit glibc (contra POSIX).
	Check for memory exhaustion in re_search rather than treating
	it merely as failure to match; use xalloc_die () to report any error.
	* src/kwset.c (struct trie.accepting): Now size_t, not unsigned int.
	(struct kwset.words): Now ptrdiff_t, not int.
	* src/kwset.h (struct kwsmatch.index): Now size_t, not int.

	tests: test for problems with long matches
	The new test is expensive, so add a category of expensive tests,
	which are normally not run, and put the new test in this new
	category.  The idea of having expensive tests is taken from coreutils.
	* HACKING: Mention RUN_EXPENSIVE_TESTS and similar env vars.
	* Makefile.am (check-expensive): New rule.
	* tests/Makefile.am (TESTS): Add big-match.
	* tests/init.cfg (expensive_): New function, from coreutils.
	* tests/big-match: New file.

2012-02-29  Paul Eggert  <eggert@cs.ucla.edu>

	maint: use gnulib _Noreturn rather than __attribute__ ((noreturn))
	* src/grep.h (__attribute__): Remove.
	* src/dfa.h (__attribute__): Likewise.
	(dfaerror): Use noreturn rather than __attribute__ ((noreturn)).
	* src/main.c (usage): Likewise.

2012-02-26  Jim Meyering  <meyering@redhat.com>

	build: update submodule, bootstrap, tests/init.sh from gnulib
	* gl/lib/regcomp.c.diff: Adjust.
	* bootstrap: Update from gnulib.
	* tests/init.sh: Update from gnulib.

2012-02-26  Paolo Bonzini  <bonzini@gnu.org>

	dfa: merge calls to SUCCEEDS_IN_CONTEXT
	* src/dfa.c (state_index): use a single call to SUCCEEDS_IN_CONTEXT.

	dfa: fix a subtle constraint encoding bug
	* src/dfa.c (SUCCEEDS_IN_CONTEXT, PREV_NEWLINE_DEPENDENT,
	PREV_LETTER_DEPENDENT): Rewrite to handle all 3*3=9 possible
	combinations of previous and next character contexts.
	(MATCHES_NEWLINE_CONTEXT, MATCHES_LETTER_CONTEXT): Remove.
	(NO_CONSTRAINT, BEGLINE_CONSTRAINT, ENDLINE_CONSTRAINT,
	BEGWORD_CONSTRAINT, ENDWORD_CONSTRAINT, LIMWORD_CONSTRAINT,
	NOTLIMWORD_CONSTRAINT): Switch to new encoding.
	* NEWS: Document resulting bugfix.
	* tests/spencer1.tests: Add regression test.

	dfa: do not use MATCHES_*_CONTEXT directly
	* src/dfa.c (dfastate): Use SUCCEEDS_IN_CONTEXT.

	dfa: change meaning of a state context
	* src/dfa.c (MATCHES_NEWLINE_CONTEXT, MATCHES_LETTER_CONTEXT): New.
	(state_separate_contexts): Remove second argument.
	(state_index): Do not mask away CTX_NONE.
	(dfaanalyze): Adjust call to state_index and state_separate_contexts.
	(dfastate): Adjust calls to state_index and state_separate_contexts.

2012-02-13  Paul Eggert  <eggert@cs.ucla.edu>

	tests: fix loop in epipe test
	* tests/epipe: Don't loop forever if the bug is present.
	Problem reported by Jaroslav Skarvada.

2012-02-08  Paul Eggert  <eggert@cs.ucla.edu>

	tests: work portably even if SIGPIPE is ignored
	* tests/epipe: Don't rely on "trap - PIPE"; that's not portable.
	Problem reported by Eric Blake in
	<http://lists.gnu.org/archive/html/bug-grep/2012-02/msg00017.html>.
	Also, use "ls -al" rather than "echo", in case "echo" is done by a
	buggy shell that ignores write errors.  And close grep's fd 3, as
	a sanity check.

	tests: work even if SIGPIPE is ignored
	* tests/epipe: Do not infinite-loop if SIGPIPE is already ignored.
	It could be that the invoker of 'make check' ignores SIGPIPE,
	for example.

2012-02-05  Jim Meyering  <meyering@redhat.com>

	build: accommodate -Wshadow and -Werror=suggest-attribute=pure
	* src/dfa.c (state_separate_contexts): Add _GL_ATTRIBUTE_PURE.
	(dfaexec): Rename parameter, s/newline/allow_nl/, to avoid
	shadowing the global.

2012-02-05  Paolo Bonzini  <bonzini@gnu.org>

	dfa: refactor common context computations
	* src/dfa.c (CTX_ANY, charclass_context, state_separate_contexts): New.
	(dfaanalyze): Use state_separate_contexts.
	(dfastate): Use charclass_context and state_separate_contexts.  Rename
	prev_context to separate_contexts.

	dfa: change newline/letter to a single context value
	* src/dfa.c (MATCHES_NEWLINE_CONTEXT, MATCHES_LETTER_CONTEXT,
	SUCCEEDS_IN_CONTEXT, ACCEPTS_IN_CONTEXT): Take a single context value
	for prev and curr.
	(struct dfa_state): Replace newline and letter with context.
	(wchar_context): New.
	(state_index): Replace newline and letter with context.  Compare
	context values in the state struct.  Adjust calls to pass contexts.
	(wants_newline): Replace with wanted_context.  Adjust calls to pass
	contexts.
	(dfastate): Replace wants_newline and wants_letter with wanted_context.
	Adjust calls to pass contexts.
	(build_state): Adjust calls to pass contexts.
	(match_anychar, match_mb_charset, transit_state): Use wchar_context.
	Adjust calls to pass contexts.

2012-02-05  Paolo Bonzini  <bonzini@gnu.org>

	dfa: introduce contexts for the values in d->success
	Also initialize all tables in a single place in dfasyntax.

	* src/dfa.c (CTX_NONE, CTX_LETTER, CTX_NEWLINE, char_context): New.
	(sbit, letters, newline): New.
	(dfasyntax): Fill them.
	(dfastate): Remove letters, newline, initialized.
	(build_state): Use CTX_* constants.
	(dfaexec): Remove sbit and sbit_init.

2012-02-05  Paolo Bonzini  <bonzini@gnu.org>

	dfa: remove useless check
	* src/dfa.c (state_index): There is nothing that is a newline *and*
	a letter.  Remove redundant call to SUCCEEDS_IN_CONTEXT.

2012-01-22  Jim Meyering  <meyering@redhat.com>

	build: update bootstrap from gnulib and adapt
	* bootstrap: Update from gnulib.
	* tests/init.sh: Update from gnulib.
	* bootstrap.conf (bootstrap_epilogue): Remove now-unnecessary,
	snippet that edited gnulib-tests/gnulib.mk.
	(gnulib_tool_option_extras): Add both --symlink and
	--makefile-name=gnulib.mk.  Remove use of $bt.
	* lib/Makefile.am: Initialize numerous automake variables so that
	generated code in gnulib.mk may use += to append to them.

	maint: convert `this' to 'this' quoting style in diagnostics
	Now that gnulib's quote and quotearg modules use 'this' style,
	change the few explicit uses in diagnostics to conform.
	* src/egrep.c (after_options): Use 'this' style of quotes.
	* src/fgrep.c (after_options): Likewise.
	* src/grep.c (after_options): Likewise.
	* src/main.c (usage): Likewise.

	build: update gnulib to latest; adjust quoting in tests
	* gnulib: Update.
	* tests/in-eq-out-infloop: Convert expected diagnostics to match
	new quoting.

2012-01-22  Paul Eggert  <eggert@cs.ucla.edu>

	doc: document recent diagnostics-related changes
	* NEWS: Document changes re diagnostics related to GREP_COLORS,
	directory loops, -s, "write error".

	grep: be quiet about GREP_COLORS syntax
	* src/main.c (struct color_cap): fct now returns void,
	since there's no longer need to use what it returns.
	(color_cap_mt_fct, color_cap_rv_fct, color_cap_ne_fct): Return void.
	(parse_grep_colors): Do not output diagnostics and then exit with
	status 0.  Instead, ignore errors in GREP_COLORS.  This is more
	consistent with programs that (e.g.) ignore errors in termcap entries,
	and it's more internally-consistent as some GREP_COLORS errors
	were ignored but not others.

	grep: exit with nonzero status if directory loop
	* src/main.c (grepdir): Exit with status 2 if a directory loop is
	found, since the output might not be "right" (i.e., infinite...).

	grep: suppress read errors if -s
	* src/main.c (reset, grep, grepfile): Do not report an input error
	if -s is given.

	grep: don't say "write error" over and over
	Problem reported by Travis Gummels in
	<https://bugzilla.redhat.com/show_bug.cgi?id=741452>.
	* src/main.c (write_error_seen): New static var.
	(clean_up_stdout): New function.
	(prline): Do not output 'write error' more than once; exit
	after the first one.  Use the same wording for the diagnostic
	that close_stdout uses.
	(main): Clean up with clean_up_stdout, not close_stdout, so that
	grep doesn't output multiple "write error" diagnostics.
	* tests/Makefile.am (TESTS): Add epipe.
	* tests/epipe: New file.

2012-01-12  Paul Eggert  <eggert@cs.ucla.edu>

	dfa: non-glibc word-constituent unibyte fix
	* src/dfa.c (is_valid_unibyte_character): Fix typo that caused
	this to incorrectly return 0 on unibyte non-glibc systems.
	Problem reported by Aharon Robbins in
	<http://lists.gnu.org/archive/html/bug-grep/2012-01/msg00084.html>.

2012-01-04  Paul Eggert  <eggert@cs.ucla.edu>

	doc: document empty pattern better
	* doc/grep.texi (Top, Fundamental Structure, Usage):
	Explain how grep deals with the empty pattern.
	Problem spotted by Bernhard Voelker in
	<http://lists.gnu.org/archive/html/bug-grep/2012-01/msg00050.html>.

	grep: with no args, search "." only if command-line -r
	* NEWS: Document this.
	* doc/grep.texi (Environment Variables, grep Programs): Likewise.
	* src/main.c (usage): Likewise.
	(main): Implement this.
	(prepend_default_options): Return a count of prepended options.
	* tests/r-dot: Test the above.

2012-01-03  Jim Meyering  <meyering@redhat.com>

	tests: adjust test to match code, now that --mmap writes to stderr
	* tests/ignore-mmap: Separate stdout and stderr; test both.

	deprecate the --mmap option
	* src/main.c (main): Deprecate the --mmap option: issue a warning
	when it is used.
	(usage): Change description.
	* doc/grep.texi (Other Options): Document the new behavior.
	* NEWS (Changes in behavior): Mention it.

2012-01-03  Paolo Bonzini  <bonzini@gnu.org>

	dfa: fix incorrect comment
	* src/dfa.c (dfastate): Fix comment for newline.

	dfa: fix rebase conflict
	* src/dfa.c (dfaanalyze): Fix reference to nalloc.

	dfa: automatically resize position_sets
	* src/dfa.c (insert, copy, merge): Resize arrays here.
	(dfaanalyze): Do not track number of allocated elements here.
	(dfastate): Allocate mbps with only one element.

	dfa: change position_set nelem to size_t
	* src/dfa.c (REALLOC_IF_NECESSARY): Disable assertion, to avoid
	warnings from -Wtype-limits.
	(position_set): Change nelem to a size_t.

	dfa: move nalloc to position_set structure
	* src/dfa.c (position_set): Add alloc.
	(alloc_position_set): Initialize it.
	(dfaanalyze): Use it instead of the nalloc array or nelem.

	dfa: remove dead assignment
	* src/dfa.c (transit_state): transit_state_consume_1char will clear follows,
	do not do this ourselves.

	dfa: introduce alloc_position_set
	* src/dfa.c (alloc_position_set): New function, use it throughout.

	dfa: use a more compact data type for grps
	* src/dfa.c (leaf_set): New.
	(dfastate): Use the smaller type, leaf_set, for grps.  Its prior type
	contained an unused constraint field.

	dfa: use MALLOC/REALLOC always
	src/dfa.c (dfastate, enlist, dfamust): Use MALLOC and REALLOC.

	dfa: remove unnecessary braces
	* src/dfa.c (dfastate): Remove unnecessary braces.

	dfa: x2nrealloc starting from a NULL pointer works
	* src/dfa.c (parse_bracket_exp): Do not MALLOC mbcset parts the first time
	they are encountered.  Initialize chars_al correctly.

2012-01-03  Jim Meyering  <meyering@redhat.com>

	build: avoid build failure with --enable-gcc-warnings and recent gcc
	* lib/colorize-posix.c: Disable -Wsuggest-attribute=const, to avoid
	warning about this empty init_colorize function.

2012-01-03  Paolo Bonzini  <bonzini@gnu.org>

	remove lib/ms/
	* configure.ac: Create lib/colorize.c as a symbolic link.
	* lib/colorize-posix.c: New name of lib/colorize-impl.c.
	* lib/colorize-w32.c: New name of lib/ms/colorize-impl.c.
	* lib/colorize.c: Delete.
	* lib/Makefile.am (EXTRA_DIST): Adjust.
	* .gitignore: Adjust.
	* cfg.mk: Adjust syntax-check exclusions.

	unify colorize.h headers
	* lib/Makefile.am (EXTRA_DIST): Adjust.
	* lib/colorize.h: Remove inline functions.
	* lib/colorize-impl.c: Move them here as functions.
	* lib/ms/colorize.h: Remove.
	* src/Makefile.am (DEFAULT_HEADERS): Remove.

	colorize: use isatty module
	* bootstrap.conf: Add isatty module.
	* gnulib: Update to latest.
	* lib/colorize.h: Remove argument from should_colorize.
	* lib/ms/colorize.h: Likewise.
	* lib/colorize-impl.c: Factor isatty call out of here...
	* lib/ms/colorize-impl.c: ... and here...
	* src/main.c: ... into here.

2012-01-03  Jim Meyering  <meyering@redhat.com>

	tests: avoid minor "make check" failure
	* tests/r-dot: Make executable, to avoid triggering a failed
	consistency test in "make check".

2012-01-02  Paul Eggert  <eggert@cs.ucla.edu>

	grep: -r with no args now searches "."
	This is a patch I've been meaning to put in for years.
	When I added support for "grep -r", I forgot to have "grep -r PAT"
	search the working directory by default, instead of searching
	standard input (which makes no sense, even if stdin is a directory).
	This is not an upward compatible change, since "grep -r PAT <file"
	will no longer search standard input, but that's OK; nobody should
	be using "grep -r" that way anyway.
	* NEWS: Document this.
	* doc/grep.texi (File and Directory Selection, grep Programs, Usage):
	Likewise.
	* src/main.c (usage): Likewise.
	(grepdir): If DIR is null, search the working directory, but do
	not prepend "./" to the file names.
	(main): If recursing and no operands are given, search ".".
	* tests/Makefile.am (TESTS): Add r-dot.
	* tests/r-dot: New file.

	grep: prefer fgets to printf, _ to gettext
	* lib/colorize.h (print_end_colorize):
	* lib/ms/colorize-impl.c (print_end_colorize):
	Use fputs instead of printf.
	* src/main.c (usage): Likewise.  Use _ instead of gettext.

2012-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	grep: check stdin like other files
	* NEWS: Document this.
	* src/main.c (grepfile): Revamp tests for input files so that
	standard input is tested like other files.  For example, report
	an error if standard input equals standard output.
	Prefer open+fstat to stat+open if possible, as open+fstat is
	usually a bit faster and avoids a race condition.
	* tests/in-eq-out-infloop: Add tests for cases like
	'grep pat <file >>file'.

2012-01-01  Jim Meyering  <meyering@redhat.com>

	maint: update all copyright year number ranges
	Run "make update-copyright".

2012-01-01  Paul Eggert  <eggert@cs.ucla.edu>

	grep: lower-case function names
	These names used to be macros, but they're functions now.
	All callers changed.
	* src/main.c (pr_sgr_start): Rename from PR_SGR_START.
	(pr_sgr_end): Rename from PR_SGR_END.
	(pr_sgr_start_if): Rename from PR_SGR_START_IF.
	(pr_sgr_end_if): Rename from PR_SGR_END_IF.

	ms: move Microsoft-specific stuff to lib/ms
	* cfg.mk (exclude_file_name_regexp--sc_prohibit_strcmp)
	(exclude_file_name_regexp--sc_require_config_h)
	(exclude_file_name_regexp--sc_require_config_h_first):
	New rules.
	* lib/colorize.c, lib/colorize.h, lib/colorize-impl.c:
	* lib/ms/colorize.h, lib/ms/colorize-impl.c: New files.
	* configure.ac (GREP_SRC_INCLUDES): New macro.
	* lib/Makefile.am (libgreputils_a_SOURCES): Add colorize.[ch].
	(EXTRA_DIST): New macro.
	* src/Makefile.am (DEFAULT_INCLUDES): New macro.
	* src/main.c: Include colorize.h.
	(PR_SGR_START, PR_SGR_END, PR_SGR_START_IF, PR_SGR_END_IF):
	Now static functions, not macros.
	(hstdout, norm_attr, w32_console_init, w32_sgr2attr)
	(w32_clreol) [__MINGW32__]: Move to lib/ms/colorize-impl.c.
	(pr_sgr_start, pr_sgr_end): Remove; callers changed to use new
	print_start_colorize, print_end_colorize from colorize.h.
	(init_colorize): Rename from w32_console_init and move to
	colorize module; caller changed.
	(should_colorize): Move to colorize module.

	grep: do input==output check more like dir loop check
	* src/main.c (grepfile): Just use SAME_INODE; don't bother
	with SAME_REGULAR_FILE.  This works better on properly-working
	POSIX hosts, since it handles the case where the file is changing
	as we grep it.  It works worse on hosts that don't support st_ino
	properly, but in practice this isn't that much of a problem here.
	* src/system.h (same_file_attributes, SAME_REGULAR_FILE):
	Remove; no longer needed.

	build: update gnulib submodule to latest

2011-12-28  Paul Eggert  <eggert@cs.ucla.edu>

	maint: remove now-unused/obsolete files
	* README.DOS: Remove file.
	* m4/djgpp.m4: Likewise.
	* .gitignore: Remove reference to m4/djgpp.m4.

2011-12-28  Jim Meyering  <meyering@redhat.com>

	maint: distribute ChangeLog-2009
	* Makefile.am (EXTRA_DIST): Add ChangeLog-2009.
	Spotted by Eli Zaretskii.

2011-12-28  Jim Meyering  <meyering@redhat.com>

	main.c: add some 'const' directives
	* src/main.c (color_dict, fg_color, bg_color, cap): Declare const.

	No semantic change.

2011-12-28  Jim Meyering  <meyering@redhat.com>

	main.c: correct indentation and formatting style
	* src/main.c: Correct many formatting inconsistencies.
	No semantic change.

	avoid new syntax-check failures
	* cfg.mk (old_NEWS_hash): Update, to accommodate old NEWS modification.
	* src/main.c: Indent solely with spaces, never with TABs.
	(should_colorize): Remove useless parens in #if directive.

2011-12-28  Eli Zaretskii  <eliz@gnu.org>

	Fix whitespace, indentation and documentation
	* src/main.c (parse_grep_colors): Fix indentation.
	(usage): Mention MS-Windows in help text for -U and -u options.

	update NEWS for MS-Windows changes
	* NEWS: Mention MS-Windows related bugfixes and enhancements.

	Fix the test suite for MS-Windows.
	* tests/include-exclude: Use --directories=skip, to avoid
	gratuitous failures on systems that cannot grep directories.
	* tests/reversed-range-endpoints: Don't reject program names with
	leading directories and drive letters.
	* tests/warn-char-classes: Likewise.

	Support color highlighting on MS-Windows
	* src/main.c (SGR_START, SGR_END, PR_SGR_FMT, PR_SGR_FMT_IF): Remove.
	(PR_SGR_START, PR_SGR_START_IF): Replace with pr_sgr_start.
	(PR_SGR_END, PR_SGR_END_IF): Replace with pr_sgr_end.
	(pr_sgr_start, pr_sgr_end, should_colorize): New functions.
	(w32_console_init, w32_sgr2attr, w32_clreol) [__MINGW32__]: New functions.
	(main): Use should_colorize.  Invoke w32_console_init.

2011-12-24  Paul Eggert  <eggert@cs.ucla.edu>

	don't ignore errors when reading a directory
	grep no longer silently suppresses errors when reading a directory
	as if it were a text file.  For example, "grep x ." now reports a
	read error on most systems; formerly, it ignored the error.
	Problem reported as an aside by Bob Proulx (Bug#10355).
	* NEWS: Document this.
	* src/main.c (grep, grepfile): Implement this.  Simplify the code
	considerably.
	* src/system.h (is_EISDIR): Remove; no longer needed.

	--include etc. now work on command-line args more consistently
	--include and --exclude apply only to non-directories and
	--exclude-dir applies only to directories.  "-" (standard input)
	is never excluded, since it is not a file name.
	This bug was discovered while fixing a read-directory bug (Bug#10355).
	* NEWS: Document this.
	* src/main.c (main): Implement this.
	* tests/include-exclude: Test for it.

2011-12-24  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

2011-12-12  Arnold D. Robbins  <arnold@skeeve.com>

	doc: improve grep.texi
	* doc/grep.texi: General editing for improved aesthetics.
	Also fix a few problems.

2011-12-12  Jim Meyering  <meyering@redhat.com>

	build: use gnulib's iswctype wcscoll
	* bootstrap.conf (gnulib_modules): Add iswctype and wcscoll.
	* configure.ac: Remove explicit checks for those functions.
	* src/mbsupport.h (MBS_SUPPORT): Define to 1 if not already defined.
	Remove the conditional, now that we're guaranteed by gnulib to have
	wcscoll and iswctype.
	Suggested by Alan Hourihane in http://savannah.gnu.org/bugs/?34930

	disable the new input==output guard for additional options
	* src/main.c (grepfile): Do not reject input == output also
	when using a few other options.
	* tests/in-eq-out-infloop: Test these new cases.
	* NEWS (Bug fixes): Mention it

2011-12-11  Nicolas Vigier  <boklm@mars-attacks.org>

	do not reject "grep -qr . > out"
	The recent fix to avoid an infinite disk-filling loop, commit 5e20a38a,
	introduced a minor regression.  If you use grep with -q and -r, and
	redirect output to a file that will be traversed, then grep would
	reject the command, even though it will generate no output.
	In that case, there is no risk of an infinite loop.
	* src/main.c (grepfile): Do not reject input == output when
	using --quiet/--silent (-q).
	Reported by J H Wilson in http://bugs.mageia.org/show_bug.cgi?id=3501
	forwarded by Nicolas Vigier to https://savannah.gnu.org/bugs/?34917

2011-11-29  Arnold Robbins  <arnold@skeeve.com>

	dfa: do not call nl_langinfo in !MBS_SUPPORT mode
	* src/dfa.c (using_utf8) [!MBS_SUPPORT]: Remove erroneous "defined"
	in cpp test for MBS_SUPPORT.  Since commit a163349d, MBS_SUPPORT is 0/1.
	This error caused trouble only in the !MBS_SUPPORT case.

	dfa: avoid warning from deficient compiler in !MBS_SUPPORT mode
	* src/dfa.c (setbit_wc) [!MBS_SUPPORT]: Add explicit "return false;"
	after "abort ();", to avoid a warning from deficient compilers.

2011-11-29  Jim Meyering  <meyering@redhat.com>

	tests: use "compare exp out", not "compare out exp"
	Likewise, when an empty file is expected, use "compare /dev/null out",
	not "compare out /dev/null". I.e., specify the expected/desired contents
	via the first file name.  Prompted by a suggestion from Bruno Haible
	in http://thread.gmane.org/gmane.comp.gnu.grep.bugs/4020/focus=29154

	Run these commands:

	    git grep -l -E 'compare [^ ]+ exp' \
	      |xargs perl -pi -e 's/(compare) (\S+) (exp\S*)/$1 $3 $2/'
	    git grep -l -E 'compare [^ ]+ /dev/null' \
	      |xargs perl -pi -e 's/(compare) (\S+) (\/dev\/null)/$1 $3 $2/'

2011-11-29  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

2011-11-28  Jim Meyering  <meyering@redhat.com>

	build: accommodate -Werror=suggest-attribute=pure
	Now that we're using the latest manywarnings module from gnulib,
	accommodate gcc's -Werror=suggest-attribute=pure option by marking
	suggested functions with gnulib-defined _GL_ATTRIBUTE_PURE.
	* src/kwset.c (hasevery): Mark function with pure attribute.
	(bmexec): Likewise.
	* src/dfa.c (nsubtoks, istrstr, find_pred, dfamusts): Likewise.
	* configure.ac: Disable (for lib/) options that seem not to be worth
	the trouble: -Wunsuffixed-float-constants and -Wformat-nonliteral.

2011-11-21  Bruno Haible  <bruno@clisp.org>

	build: fix "make check" error on OSF/1
	* tests/Makefile.am (TESTS_ENVIRONMENT): Test the value of the variable
	BASH_VERSION, not the literal ASH_VERSION.

2011-11-21  Jim Meyering  <meyering@redhat.com>

	portability: work consistently on *BSD systems
	* src/dfa.c (is_valid_unibyte_character): Define.
	(IS_WORD_CONSTITUENT): Use it here, to make grep work consistently
	even on *BSD systems, which use different tables for ctype macros
	like isalpha. http://thread.gmane.org/gmane.comp.gnu.grep.bugs/4022
	With help from Bruno Haible.

2011-11-20  Jim Meyering  <meyering@redhat.com>

	maint: consistently use NULL, not 0, when comparing pointers
	* src/dfa.c (dfaanalyze): Compare trans[s] with NULL, not 0.

	maint: remove an avoidable #ifdef/#endif pair
	* src/dfa.c (dfaanalyze): Remove avoidable #ifdef around "{".

	tests: fix typo in last change
	* tests/word-delim-multibyte: Use double quotes around $e_acute,
	not single quotes.  Spotted by Bruno Haible.
	This and the preceding change do not resolve the XPASS failure
	on OpenBSD 4.9 after all.  See the explanation at
	http://thread.gmane.org/gmane.comp.gnu.grep.bugs/4022

	tests: avoid unwarranted test failure on *BSD-based systems
	* tests/word-delim-multibyte (e_acute): Use a more portable
	representation of e-acute.  Reported by Bruno Haible.

2011-11-19  Jim Meyering  <meyering@redhat.com>

	maint: accommodate -Wdeclaration-after-statement, but only in dfa.c,
	and because doing so does not impact readability/maintainability.
	This is solely to accommodate gawk users who are stuck with ancient gcc.
	This is no excuse to change any other code in grep.
	* src/dfa.c (dfaoptimize, parse_bracket_exp): Move declaration
	to precede first statement in block.

2011-11-16  Jim Meyering  <meyering@redhat.com>

	maint: post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.10
	* NEWS: Record release date.

	build: update gnulib submodule to latest

2011-11-13  Jim Meyering  <meyering@redhat.com>

	maint: update bootstrap and init.sh from gnulib
	* tests/init.sh: Update from gnulib.
	* bootstrap: Likewise.

2011-11-12  Jim Meyering  <meyering@redhat.com>

	build: update gnulib for exclude-test fixes

	tests: make our "export" replacement efficient with modern shells
	* tests/Makefile.am (TESTS_ENVIRONMENT): Use a trivial and efficient
	implementation with a shell that supports "export var=val".
	Use the sed-invoking replacement only when necessary.
	Improved by Stefano Lattarini.

	tests: make the replacement export function more robust
	* tests/Makefile.am (sed_quote_value): Also quote single quotes.
	Remove sed's -e options.  Not needed.

2011-11-12  Bruno Haible  <bruno@clisp.org>

	tests: fix test suite execution failure on OSF/1 5.1
	* tests/Makefile.am (TESTS_ENVIRONMENT): Use a shell function to
	ensure that we use only the portable form of the 'export' shell
	built-in.

	tests: don't assume that /bin/bash exists
	* tests/fedora: Run using /bin/sh, not /bin/bash.

	tests: avoid unwarranted failures due to SATAN's timeout
	* tests/init.cfg (require_timeout_): Also ensure that
	timeout exits with its child's exit status.

	build: fix compilation error on MSVC 9 to due Pexecute() declaration
	* src/pcresearch.c (WITHOUT_PCRE_NORETURN): Remove macro.
	(Pexecute): Replace abort() call with code that does not trigger GCC
	warnings.

	tests: fix high-bit-range test failure on OSF/1 5.1
	* tests/high-bit-range: Use octal escape instead of hexadecimal escape
	sequence.

2011-11-11  Jim Meyering  <meyering@redhat.com>

	build: update gnulib for solaris test fix

2011-11-10  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

	maint: adjust the URL that will appear in the generated announcement
	* cfg.mk (url_dir_list): Use this http://ftp.gnu.org/gnu/$(PACKAGE)
	for the first link listed in the generated announcement.
	announce-gen now provides the faster mirror link automatically.

2011-11-06  Jim Meyering  <meyering@redhat.com>

	build: stop distributing gzip'd releases;  xz is enough
	* configure.ac (AM_INIT_AUTOMAKE): Add no-dist-gzip.
	* NEWS (Build-related): Mention that we're dropping .tar.gz.

	build: update gnulib submodule to latest

2011-10-14  Stefano Lattarini  <stefano.lattarini@gmail.com>

	distcheck: ensure dist-hook fails if syntax-check fails
	* Makefile.am (run-syntax-check): Fix logic, to ensure that
	the recipe of this target returns a non-zero exit status if
	"make syntax-check" fails.

2011-10-12  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest
	This should fix a few portability problems, including one on HP-UX
	and a test-float failure on PPC, reported by Andreas Metzler.

2011-10-10  Stefano Lattarini  <stefano.lattarini@gmail.com>

	gitignore: merge top-level and tests/ .gitignore files
	* tests/.gitignore: Remove; what little remained of its
	contents has been moved ...
	* .gitignore: ... here.

	tests: tiny simplification in TESTS_ENVIRONMENT definition
	* tests/Makefile.am (TESTS_ENVIRONMENT): Remove redundant use of
	`export'.

2011-10-10  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tests: support development version of automake too
	This change implements a more correct and idiomatic use of the
	features of the Automake-provided 'parallel-tests' harness.
	Moreover, this change is required in order for the testsuite to
	continue to work with the new testsuite harness that is planned
	to be introduced in Automake 1.12 (which, as of the writing date,
	is still under development and in late alpha state).

	* tests/Makefile.am (TESTS_ENVIRONMENT): The development version of
	automake dos not support setting the interpreter delegated to run
	the tests scripts in this variable; instead, use ...
	(LOG_COMPILER): ... this variable.
	* .gitignore: Ignore `.trs' files in directory `tests/'.
	* build-aux/.gitignore: Ignore `test-driver' script.

2011-10-04  Eli Zaretskii  <eliz@gnu.org>

	dfa: don't mishandle high-bit bytes in a regexp with signed-char
	This appears to arise only on systems for which "char" is signed.
	* src/dfa.c (FETCH_WC, FETCH): Produce an unsigned value, rather
	than a sign-extended one.  Fixes a bug on MS-Windows with compiling
	patterns that include characters with the 8-th bit set.
	(to_uchar): Define.  From coreutils.
	Reported by David Millis <tvtronix@yahoo.com>.
	See http://thread.gmane.org/gmane.comp.gnu.grep.bugs/3893
	* NEWS (Bug fixes): Mention it.

2011-09-16  Jim Meyering  <meyering@redhat.com>

	maint: dfa: simplify multi-byte-related conditionals
	* src/dfa.c (setbit_case_fold_c, parse_bracket_exp, lex):
	(addtok_mb, dfaparse): Change each "MBS_SUPPORT && MB_CUR_MAX > 1"
	test to just "MB_CUR_MAX > 1".
	* src/dfasearch.c (kwsincr_case, EGexecute): Likewise.
	* src/kwsearch.c (Fcompile, Fexecute): Likewise.
	* src/searchutils.c (kwsinit): Likewise.
	* src/dfa.c (parse_bracket_exp): Convert
	"if (!MBS_SUPPORT || MB_CUR_MAX == 1)" to
	"if (MB_CUR_MAX == 1)" and do this:
	-      assert(!MBS_SUPPORT || MB_CUR_MAX == 1);
	+      assert(MB_CUR_MAX == 1);

	maint: dfa: simplify several expressions
	* src/dfa.c (dfainit): Set d->mb_cur_max unconditionally, now
	that MB_CUR_MAX is always usable.  With that, simplify all
	"MBS_SUPPORT && d->mb_cur_max > 1" to simply "d->mb_cur_max > 1".
	(dfastate, dfaexec, dfainit, dfafree): Simplify, removing each
	now-unnecessary "MBS_SUPPORT &&".

	maint: dfa: avoid in-function "#if MBS_SUPPORT" tests
	* src/dfa.c (setbit_case_fold_c): Remove "#if MBS_SUPPORT" in favor
	of simple "if (MBS_SUPPORT ...".
	(dfaexec, addtok): Likewise.

	maint: ensure that MB_CUR_MAX is defined even when !MBS_SUPPORT
	* src/mbsupport.h [!MBS_SUPPORT] (MB_CUR_MAX): Define to 1.

	build: fix compilation failure when MBS_SUPPORT is 0
	* src/dfa.c (add_utf8_anychar): Always compile this function,
	but when MBS_SUPPORT is 0, give it an empty body.
	(prepare_wc_buf): Likewise.
	[! MBS_SUPPORT] (setbit_wc): Define to always abort.

	maint: dfa: simplify dfaoptimize
	* src/dfa.c (dfaoptimize): Simplify.
	(dfacomp): Remove now-redundant "if (MBS_SUPPORT)" guard,
	since dfaoptimize does nothing if !MBS_SUPPORT.

	maint: dfa: remove some #if MBS_SUPPORT guards
	* src/dfa.c: Replace a few "#if MBS_SUPPORT" directives with
	"if (MBS_SUPPORT)".  Remove some altogether.

	maint: dfa: convert #if-MBS_SUPPORT (dfastate)
	* src/dfa.c (dfastate): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (dfastate)
	* src/dfa.c (dfastate): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (state_index)
	* src/dfa.c (state_index): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (dfaparse)
	* src/dfa.c (dfaparse): Use regular "if", not #if MBS_SUPPORT.'

	maint: dfa: convert #if-MBS_SUPPORT (copytoks)
	* src/dfa.c (copytoks): Use regular "if", not #if MBS_SUPPORT.'

	maint: dfa: convert #if-MBS_SUPPORT (lex)
	* src/dfa.c (lex): Use regular "if", not #if MBS_SUPPORT.'

	maint: dfa: convert #if-MBS_SUPPORT (parse_bracket_exp)
	* src/dfa.c (parse_bracket_exp): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (parse_bracket_exp)
	* src/dfa.c (parse_bracket_exp): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (parse_bracket_exp)
	* src/dfa.c (parse_bracket_exp): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (dfaexec)
	* src/dfa.c (dfaexec): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (dfaexec)
	* src/dfa.c (dfaexec): Use regular "if", not #if MBS_SUPPORT.
	Also add curly braces around multi-line if/else blocks.

	maint: dfa: remove #if-MBS_SUPPORT (free_mbdata)
	* src/dfa.c (free_mbdata): Remove the #if guard altogether.

	maint: dfa: convert #if-MBS_SUPPORT (dfaoptimize, dfacomp)
	* src/dfa.c (dfaoptimize, dfacomp): Use regular "if",
	not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (dfafree)
	* src/dfa.c (dfafree): Use regular "if", not #if MBS_SUPPORT.

	maint: dfa: convert #if-MBS_SUPPORT (parse_bracket_exp, part1)
	* src/dfa.c (parse_bracket_exp): Remove in-function #if MBS_SUPPORT.

	maint: remove #if-MBS_SUPPORT declaration guards
	* src/search.h: Don't bother to #if-out declarations.

	maint: convert #if-MBS_SUPPORT (EGexecute)
	* src/dfasearch.c (EGexecute): Remove in-function #if MBS_SUPPORT.

	maint: convert #if-MBS_SUPPORT (kwsincr_case)
	* src/dfasearch.c (kwsincr_case): Remove in-function #if MBS_SUPPORT.
	Move decl's down.

	maint: convert #if-MBS_SUPPORT (Fcompile, etc.)
	* src/kwsearch.c (Fcompile, Fexecute): Remove in-function #if MBS_SUPPORT.
	(Fcompile): Rearrange some declarations.  No semantic change.

	maint: convert #if-MBS_SUPPORT (kwsinit)
	* src/searchutils.c (kwsinit): Remove in-function #if MBS_SUPPORT.

	maint: dfa: remove case-guarding #if-MBS_SUPPORT
	* src/dfa.c [DEBUG] (prtok): Remove now-useless #if-MBS_SUPPORT.

2011-09-15  Jim Meyering  <meyering@redhat.com>

	maint: remove #if MBS_SUPPORT around member declaration
	* src/dfa.c (dfastate): Don't #ifdef-out "mbps" position_set member.

	maint: dfa: remove #if MBS_SUPPORT around struct definition
	* src/dfa.c (struct mb_char_classes): Don't #ifdef-out declarations.

	build: avoid compilation failure when building without PCRE support
	* src/pcresearch.c [!HAVE_LIBPCRE] (WITHOUT_PCRE_NORETURN): Define
	to _Noreturn, not obsoleted-by-gnulib _GL_ATTRIBUTE_NORETURN.
	Reported by Eric Blake.

	tests: stop using skip_test_; use skip_ instead
	* tests/init.cfg (skip_test_): Remove definition.  Use the improved
	skip_ function from init.sh, now that it has the same feature.
	* tests/euc-mb: s/skip_test_/skip_/
	* tests/sjis-mb: Likewise.
	* tests/fmbtest: Likewise.

	tests: skip tests that require MBS support
	* tests/init.cfg (require_compiled_in_MB_support): New function.
	* tests/char-class-multibyte: Use it here, since this test cannot
	succeed without MBS support.
	* tests/equiv-classes: Likewise.
	* tests/euc-mb: Likewise.
	* tests/fgrep-infloop: Likewise.
	* tests/init.cfg: Likewise.
	* tests/prefix-of-multibyte: Likewise.
	* tests/turkish-I: Likewise.
	* tests/sjis-mb: Likewise.

	tests: make fmbtest explain (to stderr, not log) why it is skipped
	* tests/fmbtest: Use skip_ and fail_ to give better diagnostics.

	maint: dfa: improve comments
	* src/dfa.c (match_mb_charset, match_anychar): Improve comments.

2011-09-14  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to newer

	maint: correct indentation
	* src/dfa.c (dfaexec): Reposition curly braces to match indentation style.
	Remove useless comment.

	maint: move declaration "down" to inner scope where it is used
	* src/dfa.c (dfaexec): Move decl of local down into scope where used.

2011-09-07  Jim Meyering  <meyering@redhat.com>

	doc: use "file name" consistently in grep's --help output
	* src/main.c (usage): Use "file name", not "filename" in descriptions
	of --with-filename (-H), --no-filename (-h) and --label=LABEL.
	Suggested by Sequoia McDowell.

	bug: requires ru_RU.KOI8-R".  [bug introduced in grep-2.9]

2011-08-31  Matthew Burgess  <matthew@linuxfromscratch.org>

	tests: remove debug code that would cp to /t
	* tests/unibyte-bracket-expr: Remove debug artifact introduced
	by 2011-06-02 commit de5f7000, "tests: exercise a uni-byte [...]
	bug: requires ru_RU.KOI8-R".  [bug introduced in grep-2.9]

2011-08-20  Jim Meyering  <meyering@redhat.com>

	build: use largefile module and update to latest gnulib
	* configure.ac: Remove AC_SYS_LARGEFILE, subsumed by ...
	* bootstrap.conf (gnulib_modules): ...this.  Use largefile module.
	* gnulib: Update to latest.

	maint: clean up and plug a leak-on-OOM
	* src/dfa.c (icatalloc): Clean up; use xrealloc in place of malloc
	and realloc; remove conditionals that are unnecessary, now that
	failed allocation results in exit.
	(enlist): Use xrealloc in place of realloc; remove conditional.
	(comsubs): Avoid leak upon failed enlist call.
	(dfamust): Use xmalloc in place of malloc.
	Remove conditionals, now that icpyalloc and icatalloc never return NULL.

	maint: use x2nrealloc, not xrealloc
	* src/main.c (main): Use x2nrealloc, not xrealloc

2011-07-24  Jim Meyering  <meyering@redhat.com>

	tests: add a test to trigger the bug
	* tests/Makefile.am (TESTS): Add it.
	* tests/in-eq-out-infloop: Exercise the bug/fix.

	exit 2 (rather than infloop) when an input file is also on stdout
	This avoids a potential "infinite" disk-filling loop.
	Reported in http://savannah.gnu.org/patch/?5316
	and http://savannah.gnu.org/bugs/?17457.
	* src/main.c: Include "quote.h".
	(out_stat): New global.
	(grepfile): Compare each regular file's dev/ino/etc.
	with those from the file on stdout (if it too is regular).
	(main): Set out_stat, if stdout is a regular file.
	* src/system.h: Include "same-inode.h".
	(same_file_attributes): Define.  From diffutils.
	(SAME_REGULAR_FILE): Define.
	* bootstrap.conf (gnulib_modules): Use quote, not quotearg.
	Use same-inode.
	* NEWS (Bug fixes): Mention it.

2011-07-15  Reuben Thomas  <rrt@sc3d.org>

	doc: improve documentation of character classes in the man page
	* doc/grep.in.1: Reword documentation of character classes.

2011-07-12  Jim Meyering  <meyering@redhat.com>

	dfa: remove unnecessary inclusion of verify.h
	* src/dfa.c: Don't include "verify.h".

	dfa: simplify use of *ALLOC macros
	* src/dfa.c (XNMALLOC, XCALLOC): Redefine without outer cast-to-(t *).
	(CALLOC, MALLOC, REALLOC): Remove type "t" parameter and adjust callers.

	dfa: change semantics of REALLOC_IF_NECESSARY's 3rd parameter
	* src/dfa.c (REALLOC_IF_NECESSARY): Change meaning of 3rd param,
	from "maximum index" to 1 greater than that: the required number
	of *P-sized elements.  Note that only some of the uses of
	REALLOC_IF_NECESSARY needed to be adjusted, the others had already
	required an extra element.

	dfa: rename REALLOC_IF_NECESSARY param/local for clarity
	* src/dfa.c (REALLOC_IF_NECESSARY): Rename nalloc and new_nalloc
	to n_alloc and new_n_alloc.

	dfa: prepare for a semantic change in REALLOC_IF_NECESSARY
	* src/dfa.c (REALLOC_IF_NECESSARY): Remove "t" (type) parameter.
	Use (*p) instead.  Adjust all callers.

	dfa: add braces to REALLOC_IF_NECESSARY definition
	* src/dfa.c (REALLOC_IF_NECESSARY): Add curly braces; use TABs
	to right-indent.

2011-06-29  Paolo Bonzini  <bonzini@gnu.org>

	doc: improve documentation of character classes
	* doc/grep.texi (Character classes): Mention explicitly when
	examples refer to the C locale, explain better the general
	meaning of character classes.

2011-06-28  Jim Meyering  <meyering@redhat.com>

	dfa: fix the root cause of the heap overrun
	dfa's "insert" function was supposed to be maintaining the position
	list sorted on *decreasing* index, but since the 2009-12-09 "Speed
	up insert" commit, 62458291, it was using code that assumed the data
	were sorted on *increasing* index.  As such, sometimes it would no
	longer merge constraints (not finding a match) and would append
	entries that normally would have matched and been merged.  Those
	erroneous append operations resulted in the heap overrun fixed by
	2011-06-17 commit 0b91d692 by doubling the array size.
	* src/dfa.c (insert): Fix the comparison.
	(dfaanalyze): Now that that's fixed, revert commit 0b91d692,
	allocating space for only d->nleaves entries, not double that.
	As far as I can tell, this change has no effect other than
	decreased memory usage, although it may improve performance
	slightly, since the resulting list of positions is half as long
	as it used to be.

2011-06-28  Paolo Bonzini  <bonzini@gnu.org>

	dfa: use memcpy to copy position_sets
	* src/dfa.c (copy): Use memcpy.

	dfa: use copyset to copy charclasses
	* src/dfa.c (add_utf8_anychar): Change memcpy to copyset.

	gnulib: Update
	Fixes mmap-anon.m4 conflict with fn_grep, reported by Rainer Orth.

2011-06-22  Jim Meyering  <meyering@redhat.com>

	maint: update bootstrap from gnulib
	* bootstrap: Update to latest, so it no longer inserts empty lines
	in .gitignore files.
	* .gitignore: Let bootstrap move "!..." lines to end of file.

2011-06-21  Jim Meyering  <meyering@redhat.com>

	post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.9
	* NEWS: Record release date.

	build: avoid a warning when building with --disable-perl-regexp...
	and --enable-gcc-warnings.
	* src/pcresearch.c (WITHOUT_PCRE_NORETURN): Define.
	Remove the unreachable return statement.
	Reported by Eric Blake.

	tests: ensure that each test script is executable
	This adds a rule run at "make check" time to ensure that
	test scripts are consistently executable.
	This change is not required for "make check", but makes it easier
	for people to run scripts manually, but that is discouraged because
	doing so makes it easy to omit important variable settings that
	are normally provided via TESTS_ENVIRONMENT.
	This change also makes each of the existing TESTS executable.
	* tests/Makefile.am (check_executable_TESTS): New rule.
	(check): Depend on it.
	* tests/{all_scripts}: chmod 755.
	Prompted by a report from Eric Blake.

	maint: update bootstrap from gnulib
	* bootstrap: Update from gnulib.

	maint: update po/POTFILES.in
	* po/POTFILES.in: Remove dfasearch.c, now that it no longer
	contains a translatable diagnostic.

	tests: include-exclude: avoid false positive failure on FreeBSD
	* tests/include-exclude: Avoid false-positive failure due to
	matching "a" in a directory on FreeBSD, when searching a directory
	without "-r".  Search for '^aaa$' rather than just 'a'.
	Adjust test inputs and expected output files accordingly.

	dfa: remove some useless casts
	* src/dfa.c (icatalloc): Change type of "old" parameter
	from "char const *" to "char *".
	Don't cast-away const on realloc argument.
	Remove now-unnecessary const-discarding cast.
	Don't (void)-cast strcpy result.
	* src/dosbuf.c (undossify_input): Remove anachronistic
	cast-to-"char *" of realloc argument.

	dfa: more heap-allocation-related overflow protection
	* src/dfa.c (enlist): Use xnrealloc, not realloc.
	Also, remove unnecessary cast-to-(char *).
	(dfamust): Use xnmalloc, not malloc.  Before, this code would
	return upon malloc failure (xnmalloc exits upon failure), but
	later, via the *ALLOC macros, it could already exit, so this
	new potential exit point is nothing new.  The same applies
	to enlist, since it is called only through dfamust.

	tests: update init.sh; simplify TESTS_ENVIRONMENT
	* tests/init.sh: Update from coreutils.
	* tests/Makefile.am (TESTS_ENVIRONMENT): Remove shell_or_perl_
	function.  Instead, just use $(SHELL), since grep has no test
	that starts with #!/usr/bin/perl.

	build: update gnulib submodule to latest

	build: avoid configure/gnulib-related errors
	* bootstrap.conf: Remove now-unnecessary code to exclude
	gettext/intl-related m4 tests.

2011-06-19  Jim Meyering  <meyering@redhat.com>

	maint: tighten up superfluous code
	* src/main.c (parse_grep_colors): Use xstrdup in place of xmalloc,
	a useless test, strlen, and strcpy.

2011-06-19  Paul Eggert  <eggert@cs.ucla.edu>

	dfa: avoid possibility of overflow
	* src/dfa.c (REALLOC_IF_NECESSARY, CALLOC, MALLOC, REALLOC):
	Use functions from xalloc.h to avoid overflow.
	* src/dfasearch.c (GEAcompile): Use xnrealloc rather than realloc.
	* src/pcresearch.c (Pcompile): Use xnmalloc, not xmalloc.

2011-06-18  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

	dfa: correct two uses of btowc
	* src/dfa.c (setbit_c, setbit_case_fold_c): Compare the btowc
	return value against WEOF, not EOF.  Suggested by Eli Zaretskii.
	On a system like MinGW with unsigned wint_t, comparing a btowc
	return value against EOF (-1) would always be false.

2011-06-17  Jim Meyering  <meyering@redhat.com>

	dfa: don't overrun a malloc'd buffer for certain regexps
	* src/dfa.c (dfaanalyze): Allocate space for twice as many
	positions as there are leaves.  Before this change, for some
	regular expressions, DFA analysis would have inserted far more
	"positions" than dfa->nleaves (up to double).
	Reported by Raymond Russell in http://savannah.gnu.org/bugs/?33547
	* tests/dfa-heap-overrun: Trigger the overrun.
	* tests/Makefile.am (TESTS): Add it.
	* NEWS (Bug fixes): Mention it.

2011-06-08  Jim Meyering  <meyering@redhat.com>

	tests: don't ignore sjis-mb test failure
	I made changes that caused grep to segfault during "make check" --
	as seen in dmesg output -- yet no test failed(!), and there was no
	trace of the segfault in the logs.
	* tests/sjis-mb (test_grep_reject): Ensure that output is empty.
	Don't ignore test failure.

2011-06-07  Paolo Bonzini  <bonzini@gnu.org>

	dfa: optimize wide characters in a bracket expression
	* src/dfa.c (addtok): Compile characters to an alternation.  Handle the
	case when nothing else remains in the MBCSET.

	dfa: refactor to prepare for upcoming optimizations
	* src/dfa.c (parse_bracket_exp): Move optimization of MBCSET from here...
	(addtok): ... to here.

2011-06-07  Paolo Bonzini  <bonzini@gnu.org>

	dfa: correct handling of single-byte character ranges
	This provides a better fix for the unibyte-bracket-expr and high-bit-range
	testcases, and fixes the latent bug tested by bogus-wctob.

	* src/dfa.c (setbit_case_fold): Remove, replace with...
	(setbit_wc, setbit_c, setbit_case_fold_c): ... these.
	(parse_bracket_exp): Use setbit_case_fold_c when iterating over
	single-byte sequences.  Use setbit_wc for multi-byte character sets,
	and setbit_case_fold_c for single-byte character sets.
	(lex): Use setbit_case_fold_c for single-byte character sets.

2011-06-07  Paolo Bonzini  <bonzini@gnu.org>

	tests: exercise latent bug in character ranges
	* tests/bogus-wctob: New.
	* Makefile.am (TESTS): Add it.

2011-06-07  Jim Meyering  <meyering@redhat.com>

	tests: exercise a uni-byte [...] bug: requires ru_RU.KOI8-R
	* tests/unibyte-bracket-expr: New file.
	* tests/Makefile.am (TESTS): Add it.
	* init.cfg (require_ru_RU_koi8_r): New function.

	fix the [...] bug also for relatively unusual uni-byte encodings
	* src/dfa.c (setbit_case_fold): Also handle uni-byte locales
	like the one mentioned in the original report: see 2011-05-07
	commit d98338eb.  Re-reported by Santiago Ruano Rinc√≥n.
	Note that most uni-byte locales are not affected.
	* NEWS (Bug fixes): Mention it.

	tests: use skip_test_, not skip_
	Use skip_test_, not skip_.  The former prints its message both to
	the log file and to FD 9 (redirected to tty via tests/Makefile.am),
	while skip_ prints only to stderr, which goes to the log file.
	* tests/init.cfg (skip_test_): New function.
	Use skip_test_ in place of skip_ everywhere.
	* tests/fmbtest: s/skip_/skip_test_/
	* tests/sjis-mb: Likewise.
	* tests/euc-mb: Likewise.

	tests: fmbtest: factor
	* tests/fmbtest: Factor out locale-name duplication.

	tests: fix skip-inducing typo in fmbtest
	* tests/fmbtest: Fix locale name typo (s/cz_CZ/cs_CZ/)
	that would cause this test to be skipped every time.

2011-06-07  Paolo Bonzini  <bonzini@gnu.org>

	gnulib: adjust included modules
	* bootstrap.conf (gnulib_modules): Drop strtoul, rename wctype to
	wctype-h.

2011-05-21  Jim Meyering  <meyering@redhat.com>

	grep -P: don't abort upon exceeding PCRE's backtracking limit
	* src/pcresearch.c (Pexecute): Handle PCRE_ERROR_MATCHLIMIT.
	* tests/Makefile.am (XFAIL_TESTS): Remove pcre-abort.
	* tests/pcre-abort: Expect failure, no output, and increase
	the length of the input string, in case the backtracking limit
	is ever raised.  Adjust comment.
	* NEWS (Bug fixes): Mention it.

	tests: show how to make grep -P abort
	* tests/pcre-abort: New file.
	Minimal testcase by Paolo Bonzini, derived from a report
	by www.beaver@list.ru.
	* tests/Makefile.am (TESTS): Add it.
	(XFAIL_TESTS): Add it here, too, since this test always fails, for now.

	tests: fix oddities in pcre-z
	* tests/pcre-z: Redirect stderr inside $(), not outside.
	Remove double quotes around $REGEX (which is just 'a') within
	double-quoted "$(...)".  Split a long line.

	tests: factor out a new require_pcre_ function
	* tests/init.cfg (require_pcre_): New function, factored out of...
	* tests/pcre-z: ...here.  Use the function.
	* tests/pcre: Likewise.

	tests: clean up pcre
	* tests/pcre: Skip (don't pass) the test when PCRE support is disabled.
	Don't redirect so much to /dev/null, now that all test output goes to
	pcre.log.  Remove unnecessary braces and diagnostic about failing test.

2011-05-13  Jim Meyering  <meyering@redhat.com>

	post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.8
	* NEWS: Record release date.

	build: update gnulib, for fixed getcwd test

	build: update gnulib submodule to latest

	maint: remove syntax-checking sc_tight_scope rule
	* src/Makefile.am (sc_tight_scope): Remove rule.
	Now it's provided via gnulib's maint.mk.
	* cfg.mk (sc_tight_scope): Likewise.

2011-05-08  Jim Meyering  <meyering@redhat.com>

	maint: use consistent declaration syntax
	* src/grep.h (matchers): Declare consistently, so the sc_tight_scope
	rule detects this as an extern-marked variable.

2011-05-07  Jim Meyering  <meyering@redhat.com>

	maint: use gnulib's new readme-release module
	* bootstrap.conf (gnulib_modules): Add readme-release.
	(bootstrap_epilogue): Add the recommended perl one-liner.
	* README-release: Remove file; it is now generated from gnulib.
	* .gitignore: Add it.
	* gnulib: Update submodule to latest.

	tests: exercise bug with 0x80..0xff in [...]
	* tests/high-bit-range: New test, inspired by an example in the
	report by Igor O. Ladygin: http://bugs.debian.org/624387,
	via Santiago Ruano Rinc√≥n's http://savannah.gnu.org/bugs/?33198
	* tests/Makefile.am (TESTS): Add it.

	fix a bug whereby echo c|grep '[c]' would fail for any c in 0x80..0xff
	* src/dfa.c (setbit_case_fold) [MBS_SUPPORT]: Set the bit also
	when wctob returns EOF.
	* NEWS (Bug fixes): Mention it.

2011-05-02  Reuben Thomas  <rrt@sc3d.org>

	doc: correct comment about mmap
	* doc/grep.texi (Other Options) [--mmap]: This option is now
	ignored, so using it can have no effect on performance.

2011-05-02  Arnold D. Robbins  <arnold@skeeve.com>

	build: move add_utf8_anychar into MBS ifdef

	maint: remove GAWK ifndef; no longer needed

2011-05-01  Jim Meyering  <meyering@redhat.com>

	maint: remove now-unnecessary use of gnulib's strtol module
	* bootstrap.conf (gnulib_modules): Remove now-obsolete "strtol".

2011-04-29  Jim Meyering  <meyering@redhat.com>

	maint: tweak README-release
	* README-release: Add note to check the NixOS/Hydra autobuilder results.

2011-04-28  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

	maint: add the tight_scope syntax-checking rule
	This ensures that the only externally scoped symbols are ones
	that are explicitly marked as "extern" or white-listed like "main".
	* src/Makefile.am (sc_tight_scope): New rule, copied from coreutils.
	* cfg.mk (sc_tight_scope): Define, to hook to it from the top level.

	maint: mark some function declarations as extern
	* src/search.h: Add "extern" keyword to each function declaration.

2011-04-23  Jim Meyering  <meyering@redhat.com>

	maint: fix doubled-word typos in comments
	* src/dfa.c (SUCCEEDS_IN_CONTEXT): Remove doubled "a".
	* src/dfa.c (BACKREF): s/it it/it is/

2011-04-09  Jim Meyering  <meyering@redhat.com>

	maint: fix typos in comments: s/can not/cannot/
	* src/dfa.c (check_matching_with_multibyte_ops, dfastate): As above.

2011-03-19  Jim Meyering  <meyering@redhat.com>

	maint: stop using .x-sc_* files to list syntax-check exemptions
	Instead, use the new mechanism with which you merely use a
	variable (derived from the rule name) defined in cfg.mk to an ERE
	matching the exempted file names.
	* gnulib: Update to latest, to get maint.mk that implements this.
	* .x-sc_bindtextdomain: Remove file.
	* .x-sc_prohibit_tab_based_indentation: Likewise.
	* .x-sc_prohibit_xalloc_without_use: Likewise.
	* .x-sc_space_tab: Likewise.
	* cfg.mk: Define variables to exempt the same files.

	build: correct my change of 2011-01-28
	Do not override original dist-hook rule.
	* Makefile.am (run-syntax-check): Rename from overriding dist-hook.
	(dist-hook): Depend on run-syntax-check.

2011-02-28  Jim Meyering  <meyering@redhat.com>

	maint: update from gnulib
	* bootstrap: Update from gnulib.
	* tests/init.sh: Likewise.
	* gnulib: Update to latest.

2011-01-28  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

	build: run syntax-check rules as part of "make dist"
	* Makefile.am (dist-hook): Depend on syntax-check.
	Suggested by Reuben Thomas.

2011-01-26  Jim Meyering  <meyering@redhat.com>

	maint: remove unneeded #include directives
	* lib/savedir.c: Don't include <stddef.h>.  Not needed.
	* src/dfa.c: Likewise.

2011-01-22  Jim Meyering  <meyering@redhat.com>

	build: avoid new syntax-check failures
	* .x-sc_bindtextdomain: New file, used to avoid a spurious
	failure from the new syntax-check rule.
	* NEWS: Remove a trailing space.

2011-01-19  Jim Meyering  <meyering@redhat.com>

	tests: add a known-to-fail test
	* tests/turkish-I: New test.
	* tests/Makefile.am (TESTS): Add it.
	(XFAIL_TESTS): Add here, too.
	Reported by Ilya Basin.

	maint: sort test names in Makefile.am
	* tests/Makefile.am (TESTS): Sort test names.

2011-01-05  Jim Meyering  <meyering@redhat.com>

	doc: remove erroneous "{,m}" item from grep man page
	* doc/grep.in.1: Remove item describing bogus {,m} regex notation.
	Reported by Fernando Basso.

2011-01-03  Jim Meyering  <meyering@redhat.com>

	maint: update copyright year ranges to include 2011
	Run "make update-copyright", so "make syntax-check" works in 2011.

	build: update gnulib submodule to latest

2010-12-20  Paolo Bonzini  <bonzini@gnu.org>

	main: fix exit status on xmalloc failures
	* NEWS: Update.
	* src/main.c (main): Set exit_failure.  Reported by Guy Shaw.

	add comment above fn_grep
	* configure.ac (fn_grep): Add comment suggested by Bruno Haible.

2010-11-14  Paolo Bonzini  <bonzini@gnu.org>

	grep: add include guards
	* src/system.h: Add multiple inclusion guards.
	* src/grep.h: Likewise.

	configure: fix M4 quotation
	* configure.ac: Add extra brackets around [...] patterns.

	configure: remove dependency on grep that supports long lines and -e
	* configure.ac (fn_grep): New.  Set GREP and EGREP to it, replace
	with newly-built grep before AC_OUTPUT.  Reported by Florin Iucha
	<http://savannah.gnu.org/bugs/?31646>.

2010-11-04  Jim Meyering  <meyering@redhat.com>

	build: update gnulib to latest

	tests: don't hard-code a 5-second timeout; that's not always enough
	Instead, time the command in the C locale and use 10 times that
	duration -- rounded up to whole seconds -- as the timeout when running
	it in the UTF-8 locale.
	* tests/backref-multibyte-slow: Compute a performance-relative timeout.
	Reported by Gilles Espinasse, regarding an imac 400.  For more details,
	see http://thread.gmane.org/gmane.comp.gnu.grep.bugs/3360

2010-10-09  Jim Meyering  <meyering@redhat.com>

	maint: describe policy on copyright year number ranges
	* README: Mention coreutils' long-standing policy on use of M-N
	ranges in copyright year lists.  Requested by Richard Stallman.

2010-10-04  Dmitry V. Levin  <ldv@altlinux.org>

	build: compile gnulib without -Wcast-align to avoid warnings on ARM
	* configure.ac (GNULIB_WARN_CFLAGS): Remove -Wcast-align.

2010-09-30  Jim Meyering  <meyering@redhat.com>

	maint: don't define a gpg_key_ID.  now it's obtained automatically
	* cfg.mk (gpg_key_ID): Remove definition.  No longer needed.

2010-09-23  Paolo Bonzini  <bonzini@gnu.org>

	tests: add testcase for previous fix
	* tests/inconsistent-ranges: New.
	* tests/Makefile.am (TESTS): Add it.

2010-09-23  Paolo Bonzini  <bonzini@gnu.org>

	dfa: process range expressions consistently with system regex
	The actual meaning of range expressions in glibc is not exactly strcoll,
	which makes the behavior of grep hard to predict when compiled with the
	system regex.  Leave to the system regex matcher the decision of which
	single-byte characters are matched by a range expression.

	This partially reverts a change made in commit 0d38a8bb (which made
	sense at the time, but not now that src/dfa.c is not doing multibyte
	character set matching anymore).

	* src/dfa.c (in_coll_range): Remove.
	(parse_bracket_exp): Use system regex to find which single-char
	bytes match a range expression.

2010-09-23  Bruno Haible  <bruno@clisp.org>

	build: fix link error on systems that have libiconv but not libintl
	* src/Makefile.am (LDADD): Add $(LIBICONV).

2010-09-21  Jim Meyering  <meyering@redhat.com>

	build: avoid compilation failure on the Hurd
	* src/dfasearch.c (dfawarn): Rename enum symbols to use DW_ prefix,
	so as not to collide with "GNU", which is defined by the Hurd.
	Reported by Matthias Lanzinger in http://savannah.gnu.org/bugs/?31096

	maint: avoid obsolete gnulib modules
	* bootstrap.conf (gnulib_modules): Don't use obsolete atexit module.
	Use malloc-gnu and realloc-gnu -- malloc and realloc are obsolete.

2010-09-20  Jim Meyering  <meyering@redhat.com>

	maint: update README-release
	* README-release: Reflect changes in coreutils' version of this file.

2010-09-20  Aharon Robbins  <arnold@skeeve.com>

	dfa: fix compilation when not using MBS
	* src/dfa.c (prepare_wc_buf) [!MBS_SUPPORT]: Do not compile this
	function.

2010-09-16  Jim Meyering  <meyering@redhat.com>

	post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.7
	* NEWS: Record release date.

2010-09-14  Paolo Bonzini  <bonzini@gnu.org>

	tests: add equiv-classes
	* configure.ac (USE_INCLUDED_REGEX): Add Automake conditional.
	* tests/equiv-classes: New test.
	* tests/Makefile.am (TESTS): Add it.
	(XFAIL_TESTS) [USE_INCLUDED_REGEX]: Mark it as expected failure.

2010-09-14  Paolo Bonzini  <bonzini@gnu.org>

	dfa: fall back to glibc matcher if a MBCSET is found
	This patch enables full support of equivalence classes and multicharacter
	collation symbols.  It can also improve performance problems in some
	cases for multibyte grep.  Both of these changes however depend on the
	glibc version installed in the system.

	For UTF-8 it will trigger only in the presence of MBCSET, e.g. [a-z].
	For other character sets all brackets and `.` as well will trigger it.

	* NEWS: Document this.
	* src/dfa.c (dfaexec): Fall back to glibc for multibyte matches,
	if possible.

2010-09-14  Paolo Bonzini  <bonzini@gnu.org>

	build: update gnulib submodule to latest
	This is done to include commit "regex: Pass the system regex if its only
	problem is 32-bit regoff_t".

	* gnulib: Update to e2b0e1a.

2010-09-12  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

	tests: update init.sh from gnulib
	* tests/init.sh: Update from gnulib.

2010-09-08  Patrick Boyd  <pboyd04@gmail.com>

	dfa: reduce stack usage
	* src/dfa.c (dfaanalyze): Allocate GRPS and LABELS arrays from heap,
	not on the stack.  With this change, grep can now run in these UEFI
	simulators:
	http://sourceforge.net/apps/mediawiki/tianocore/index.php?title=EDK
	http://sourceforge.net/apps/mediawiki/tianocore/index.php?title=EDK2

2010-09-08  Jim Meyering  <meyering@redhat.com>

	tests/portability: avoid spurious failure with OpenBSD's /bin/sh
	* tests/warn-char-classes: Don't use "set -x" here.  It causes
	a spurious test failure on openbsd 4.7 when using its /bin/sh,
	since the command, /bin/sh -xc 'P=1 : 2> err' emits "P=1" into err.
	To enable set -x, run the test with "VERBOSE=yes", e.g.,
	make check -C tests TESTS=warn-char-classes VERBOSE=yes

	build: update gnulib submodule to latest

2010-09-03  Jim Meyering  <meyering@redhat.com>

	tests: remove .sh suffix from remaining test scripts.
	* tests/backref: Rename from backref.sh.
	* tests/bre: Rename from bre.sh.
	* tests/ere: Rename from ere.sh.
	* tests/file: Rename from file.sh.
	* tests/khadafy: Rename from khadafy.sh.
	* tests/options: Rename from options.sh.
	* tests/pcre: Rename from pcre.sh.
	* tests/spencer1: Rename from spencer1.sh.
	* tests/spencer2: Rename from spencer2.sh.
	* tests/status: Rename from status.sh.
	* tests/yesno: Rename from yesno.sh.
	* tests/Makefile.am: Reflect renamings.

	tests: convert remaining tests to use init.sh
	* tests/file.sh: Use init.sh. Use Exit, not exit. Use grep, not ${GREP}.
	* tests/khadafy.sh: Likewise.
	* tests/options.sh: Likewise.
	* tests/spencer1.sh: Likewise.
	* tests/spencer2.sh: Likewise.
	* tests/status.sh: Likewise.
	* tests/spencer1.awk: Use grep, not ${GREP}.
	Don't ignore failure to generate intermediate shell script.
	* tests/Makefile.am (CLEANFILES): Remove altogether, now that
	all tests use init.sh.
	(TESTS_ENVIRONMENT): Don't set GREP.  It's no longer used.

	tests: remove warning.sh
	* tests/warning.sh: Remove file.  All it did was print a warning.
	* tests/Makefile.am (TESTS): Remove warning.sh.

	tests: convert pcre.sh to use init.sh
	* tests/pcre.sh: Use init.sh. Use Exit, not exit. Use grep, not ${GREP}.

	tests: convert bre.sh to use init.sh
	* tests/bre.sh: Use init.sh.
	Use Exit, not exit.
	Use "$abs_top_srcdir/tests/", not "$srcdir/" to specify inputs.
	Source generated bre.script, rather than invoking $SHELL.
	* tests/ere.sh: Likewise.
	* tests/bre.awk: Use grep, not ${GREP}.
	* tests/ere.awk: Likewise.
	* tests/Makefile.am (CLEANFILES): Remove bre.script and ere.script.

	tests: convert to use init.sh
	* tests/yesno.sh: Use init.sh.
	Use Exit, not exit.
	Use grep, not $GREP.
	* tests/backref.sh: Likewise.
	* tests/Makefile.am (CLEANFILES): Remove yesno.txt.

	build: update gnulib submodule to latest

	build: update build/test tools from gnulib
	* bootstrap: Update from gnulib.
	* tests/init.sh: Likewise.

2010-09-01  Jim Meyering  <meyering@redhat.com>

	maint: add lib/version-etc.c to the list in POTFILES.in
	* po/POTFILES.in: Add lib/version-etc.c.

2010-09-01  Jim Meyering  <meyering@redhat.com>

	grep: diagnose and exit-2 for bogus REs like [:space:], [:digit:], etc.
	When I make a mistake like this:
	  grep '[:lower:]' ...
	be it in a script or on the command line, I want to know about
	it as soon as possible.  I don't want grep to print a mere warning
	that it is interpreting this suspicious and almost guaranteed-wrong
	regular expression as a set of just 6 bytes.  And I certainly don't
	want grep to silently do the wrong thing, even if that would be
	officially standards-conforming.  It's obvious that I intended
	[[:lower:]], and I want my error to be diagnosed in a way that is
	most likely to get my attention.  Thus, with this change, grep now
	prints a diagnostic and exits with status 2 the moment it
	encounters an offending [:char_class:] construct.

	This changes the way grep works by default, rather than
	putting this new behavior on an option.  A new option
	would seldom be used in scripts (not portable), and would
	probably be used only rarely by those who need it the most.
	This new functionality provides a valuable safety measure
	and incurs truly negligible risk.

	For strict POSIX compliance, set POSIXLY_CORRECT in
	your environment.  That disables this new feature.

	Revert the changes from commit 2cd3bcea, "grep: add
	--warnings={always,never,auto}.", and then do the following:

	* src/dfasearch.c (dfawarn): Call getenv("POSIXLY_CORRECT") here;
	Remove "warning: " from the diagnostic, now that it's more than
	a warning, and exit with status 2.
	* NEWS (New features): Describe the new semantics.
	* tests/warn-char-classes: Adjust one test to accommodate this change.
	* doc/grep.texi (Character Classes and Bracket Expressions): Document.
	(Environment Variables): Cross-reference it.
	Remove reference to obsolete getopt illegal vs. invalid difference.
	Thanks to Paul Eggert for suggestions and an initial prod.

2010-08-30  Jim Meyering  <meyering@redhat.com>

	maint: use gnulib's standard --version-printing code
	This includes author names and keeps the copyright year up to date.
	* bootstrap.conf (gnulib_modules): Add propername and version-etc-fsf.
	* src/main.c (AUTHORS): Define.
	(main): Use version_etc, rather than hard-coding the copyright text.
	Prompted by a patch from Paolo Bonzini.

2010-08-27  Paolo Bonzini  <bonzini@gnu.org>

	dfa: warn on [:space:] and similar
	* src/dfa.c (parse_bracket_exp): Warn on regular expressions such as
	[:space:].
	* src/dfa.h (dfawarn): New prototype.
	* src/dfasearch.c (dfawarn): New.
	* NEWS: Document.

	tests: add test for warnings
	* tests/Makefile.am (TESTS): Add warn-char-class.
	* tests/warn-char-class: New.

	grep: add --warnings={always,never,auto}.
	* src/grep.h (no_warnings): New declaration.
	* src/main.c (no_warnings): New.
	(WARNINGS_OPTION): Add to enum.
	(main): Add --warnings.  Handle color_option == 2 together with it.

	tests: add failing test for grep from a directory
	* tests/Makefile.am (TESTS, XFAIL_TESTS): Add grep-dir.
	* tests/grep-dir: New.

	tests: add test for previous commit
	* tests/Makefile.am (TESTS): Add grep-dev-null.
	* tests/grep-dev-null: New.

	search: fix "grep -Fif /dev/null"
	* bootstrap.conf: Include gnulib module minmax.
	* src/searchutils.c (mbtolower): Handle *N == 0 case.
	* src/system.h: Include minmax.h from gnulib.

2010-08-27  Adam Katz  <savannah@kopis.com>

	Remove declaration after statement in dfa.c
	* dfa.c (dfaexec): Declare saved_end at the beginning of the function.

2010-08-14  Jim Meyering  <meyering@redhat.com>

	make --include=FILE work once again
	The semantics of excluded_file_name changed (when operating on
	an "included" file name list).
	* src/main.c (main): Adjust for changed semantics of excluded_file_name
	simply by removing a negation.
	* NEWS (Bug fixes): Mention this fix.
	* tests/include-exclude: Add a test for this.
	Reported by Joe Perches in http://savannah.gnu.org/bugs/?29876.

2010-07-16  Paolo Bonzini  <bonzini@gnu.org>

	doc: document \s and \S
	* doc/grep.texi (The Backslash Character and Special Expressions):
	Document \s and \S escapes.

2010-05-29  Karl Berry  <karl@gnu.org>

	doc: discuss matches that span two or more lines
	* doc/grep.texi (Usage): Discuss matching across lines.
	(Character Classes and Bracket Expressions) <[:space:]>: refer to it.

2010-05-26  Jim Meyering  <meyering@redhat.com>

	build: use latest gettext: 0.18
	* configure.ac: Use gettext-0.18.
	* bootstrap.conf (gnulib_modules): Use gettext-h, not gettext.
	since the latter drags in a depedency on gettext 0.18.
	Suggested by Bruno Haible.

	maint: update helper scripts from gnulib
	* tests/init.sh: Update from gnulib.
	* bootstrap: Likewise.

	build: update gnulib submodule to latest

	maint: don't emit an extra newline in each of two diagnostics
	* src/main.c (context_length_arg, grepdir): Remove a stray \n in
	each of two diagnostics.

2010-05-24  Bruno Haible  <bruno@clisp.org>

	search: Avoid out-of-bounds access.
	* src/dfasearch.c (EGexecute): Avoid access beyond end of buffer
	that could happen if start != beg - buf.

2010-05-23  Aharon Robbins  <arnold@skeeve.com>

	dfa: fix signedness warnings
	* src/dfa.c (dfaexec): Cast p when passing it to prepare_wc_buf.

2010-05-09  Jim Meyering  <meyering@redhat.com>

	tests: update init.sh
	* tests/init.sh: Update from gnulib.

	tests: normalize init.sh-sourcing code
	* tests/backref-multibyte-slow: Use one-line idiom.
	* tests/backref-word: Likewise.
	* tests/case-fold-backref: Likewise.
	* tests/case-fold-backslash-w: Likewise.
	* tests/case-fold-char-class: Likewise.
	* tests/case-fold-char-range: Likewise.
	* tests/case-fold-char-type: Likewise.
	* tests/char-class-multibyte: Likewise.
	* tests/dfaexec-multibyte: Likewise.
	* tests/empty: Likewise.
	* tests/euc-mb: Likewise.
	* tests/fedora: Likewise.
	* tests/fgrep-infloop: Likewise.
	* tests/fmbtest: Likewise.
	* tests/foad1: Likewise.
	* tests/ignore-mmap: Likewise.
	* tests/include-exclude: Likewise.
	* tests/max-count-vs-context: Likewise.
	* tests/pcre-z: Likewise.
	* tests/prefix-of-multibyte: Likewise.
	* tests/reversed-range-endpoints: Likewise.
	* tests/sjis-mb: Likewise.
	* tests/spencer1-locale: Likewise.
	* tests/word-delim-multibyte: Likewise.
	* tests/word-multi-file: Likewise.

	tests: update help-version
	* tests/help-version: Update from coreutils.

2010-05-06  Jim Meyering  <meyering@redhat.com>

	tests: enable glibc's malloc-perturbing option
	* tests/Makefile.am (MALLOC_PERTURB_): Define, in case it's not already
	set in your environment.
	(TESTS_ENVIRONMENT): Propagate MALLOC_PERTURB_ setting to test scripts.

2010-05-06  Paolo Bonzini  <bonzini@gnu.org>

	dfa: speed up [[:digit:]] and [[:xdigit:]]
	There's no "multibyte pain" in these two classes, since POSIX
	and ISO C99 mandate their contents.

	Time for "./grep -x '[[:digit:]]' /usr/share/dict/linux.words"
	Before: 1.5s, after: 0.07s.  (sed manages only 0.5s).

	* src/dfa.c (predicates): Declare struct dfa_ctype separately
	from definition.  Add sb_only.
	(find_pred): Return const struct dfa_ctype *.
	(parse_bracket_exp): Return const struct dfa_ctype *.  Do
	not fill MBCSET for sb_only character types.

2010-05-05  Jim Meyering  <meyering@redhat.com>

	tests: readability: use awk rather than obfuscated sed
	* tests/backref-multibyte-slow: Generate input using an awk for-loop
	rather than expensive and harder-to-read sed pipes.
	Remove stray "set -x" and "wc -l in".

	dfa: avoid segfault when processing an invalid multi-byte sequence
	* src/dfa.c (dfaexec): Handle the cases in which mbrtowc returns
	(size_t)-1 or (size_t)-2, rather than setting mblen_buf[i] to an
	outrageously large value.

2010-05-05  Paolo Bonzini  <bonzini@gnu.org>

	grep: remove redundant syntax bit
	* grep.c (Gcompile): Remove RE_HAT_LISTS_NOT_NEWLINE.

	tests: add test for newly-fixed performance problem
	* tests/backref-multibyte-slow: New.
	* tests/Makefile.am: Add it.

2010-05-05  Paolo Bonzini  <bonzini@gnu.org>

	dfa: convert to wide character line-by-line
	This provides a nice speedup for -m in general, but especially
	it avoids quadratic complexity in case we have to go to glibc.

	* NEWS: Document change.
	* src/dfa.c (prepare_wc_buf): Extract out of dfaexec.  Convert
	only up to the next newline.
	(dfaexec): Exit multibyte processing loop if past buf_end.
	Call prepare_wc_buf again after processing a newline.

2010-05-01  Jim Meyering  <meyering@redhat.com>

	maint: remove useless #if HAVE_STDLIB_H
	* src/mbsupport.h: Don't test HAVE_STDLIB_H.

2010-04-20  Jim Meyering  <meyering@redhat.com>

	dfa: don't #ifdef-out member declarations
	* src/dfa.c (struct dfa): Remove "#if MBS_SUPPORT" guard that made
	several member declarations conditional on this cpp definition.
	(token): Likewise.
	Reported by Anders Wallin.

	tests: ensure that the --mmap option is ignored
	* tests/ignore-mmap: New file.
	* tests/Makefile.am (TESTS): Add it.
	Reported by Jaroslav ≈†karvada in <http://savannah.gnu.org/bugs/?29614>

2010-04-20  Paolo Bonzini  <bonzini@gnu.org>

	dfa: honor RE_DOT_NEWLINE and RE_DOT_NOT_NULL in UTF-8 period optimization
	* src/dfa.c (add_utf8_anychar): Check for RE_DOT_NEWLINE and
	RE_DOT_NOT_NULL.

	grep: fix --mmap not being ignored
	* NEWS: Document bugfix.
	* main.c (main): Ignore MMAP_OPTION.

2010-04-19  Jim Meyering  <meyering@redhat.com>

	maint: avoid syntax-check failure due to indentation via TABs
	* src/dfa.c (atom): Expand TABs in indentation.

	build: update gnulib submodule to latest

	maint: restrict scope of two globals to dfasearch.c
	* src/dfasearch.c (patterns, pcount): Declare these file-scoped
	globals to be static.

2010-04-19  Paolo Bonzini  <bonzini@gnu.org>

	dfa: optimize UTF-8 period
	* NEWS: Document improvement.
	* src/dfa.c (struct dfa): Add utf8_anychar_classes.
	(add_utf8_anychar): New.
	(atom): Simplify if/else nesting.  Call add_utf8_anychar for ANYCHAR
	in UTF-8 locales.
	(dfaoptimize): Abort on ANYCHAR.

	dfa: drop ORTOP
	* src/dfa.c (token, prtok, addtok_mb, nsubtoks, dfaanalyze, dfamust):
	Remove ORTOP.
	(regexp): Remove parameter, always add OR at the end, adjust callers.
	(atom): Adjust caller.
	(dfaparse): Adjust caller.  Always add OR at the end.

	dfa: fix {0,0}
	* NEWS: Document change.
	* src/dfa.c (struct dfa): Remove "broken" field.
	(lex): Do not set it.
	(closure): On {0,0}, backup and lex another closure without
	adding a CAT.
	(dfabroken): Remove.
	* src/dfa.h (dfabroken): Remove.
	* tests/spencer1.tests: Add testcases for {m,n}.

	dfa: simplify dfainit
	* src/dfa.c (dfainit): Use memset.

2010-04-17  Jim Meyering  <meyering@redhat.com>

	doc: fix a nit in HACKING
	* HACKING: Correct size of .git/ dir: 9MB, not 30MB.

	tests: add an expected-to-fail test using \< in a multi-byte locale
	* tests/word-delim-multibyte: New test.  Currently failing.
	* tests/Makefile.am (TESTS): Add it.
	(XFAIL_TESTS): Define, temporarily.
	Reported by Jaroslav ≈†karvada in http://savannah.gnu.org/bugs/?29537.

2010-04-17  Paolo Bonzini  <bonzini@gnu.org>

	test: cover just-fixed bug
	* tests/empty: Test -Fw too.

	grep: fix matching the empty string with grep -Fw
	* NEWS: Document fix.
	* src/kwsearch.c (Fexecute): The empty string is a valid match if it is
	a whole word.

2010-04-16  Jim Meyering  <meyering@redhat.com>

	maint: update init.sh and HACKING
	* HACKING: Sync from coreutils.
	* tests/init.sh: Update from gnulib.

2010-04-13  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest; adapt
	* COPYING: Remove empty line.
	* README: Likewise.
	* doc/fdl.texi: Likewise.
	* tests/backref-word: Likewise.

2010-04-12  Stefano Lattarini  <stefano.lattarini@gmail.com>

	tests: accept the Debian timeout program
	* tests/init.cfg: test timeout with `timeout 10s true'

2010-04-08  Jim Meyering  <meyering@redhat.com>

	dfa: convert "cannot happen" code/comment to use assert
	* src/dfa.c (dfamust): There were numerous "cannot happen" comments,
	some associated with "if (expr) goto done;".  Replace each with an
	equivalent "assert (!expr);".

	build: use gnulib's isblank module
	* bootstrap.conf (gnulib_modules): Use gnulib's isblank module,
	now that we rely on the function by that name.

	maint: undo TAB-conversion change to gl/lib/*.c.diff
	This fixes a bootstrap failure due to the patches not applying.
	* .x-sc_prohibit_tab_based_indentation: Add ^gl/lib/.*\.c\.diff$
	* gl/lib/regcomp.c.diff: Revert today's TAB->space change.
	* gl/lib/regex_internal.c.diff: Likewise.
	* gl/lib/regexec.c.diff: Likewise.

2010-04-08  Arnold D. Robbins  <arnold@skeeve.com>

	dfa: fix declaration of dfabroken in dfa.h
	* dfa.h (dfabroken) [GAWK]: Fix declaration to match that in dfa.c.

2010-04-08  Jim Meyering  <meyering@redhat.com>

	maint: add syntax-check rule to enforce the new no-leading-TABs policy
	* cfg.mk (sc_prohibit_tab_based_indentation): New rule, from coreutils.
	(sc_prohibit_emacs__indent_tabs_mode__setting): Likewise.
	(old_NEWS_hash): Update.
	* .x-sc_prohibit_tab_based_indentation: List exempt files.

2010-04-08  Jim Meyering  <meyering@redhat.com>

	convert all TABs to equivalent spaces in indentation
	Using this file,

	cat > leading-blank.exempt <<\EOF
	(?:^|\/)ChangeLog[^/]*$
	(?:^|\/)(?:GNU)?[Mm]akefile[^/]*$
	\.(?:am|mk)$
	EOF

	run this command to convert all non-conforming leading white
	space to be all spaces:

	git ls-files \
	  | pcregrep -vf leading-blank.exempt \
	  | xargs pcregrep -l '^ *\t' \
	  | xargs perl -MText::Tabs -ni -le \
	    '$m=/^( *\t[ \t]*)(.*)/; print $m ? expand($1) . $2 : $_'

2010-04-08  Jim Meyering  <meyering@redhat.com>

	build: include cfg.mk in the distribution tarball
	* Makefile.am (EXTRA_DIST): Add cfg.mk.

2010-04-08  Jim Meyering  <meyering@redhat.com>

	maint: Makefile.am tweak  (no semantic change)
	* Makefile.am (EXTRA_DIST): List one per line.  Sort.

	build: include cfg.mk in the distribution tarball
	* Makefile.am (EXTRA_DIST): Add cfg.mk.

2010-04-08  Jim Meyering  <meyering@redhat.com>

	dfa: move definition of __attribute__ back into dfa.h
	* src/dfa.c (__attribute__): Move definition back to...
	* src/dfa.h: ... this file.  It is essential for non-gcc compilers.
	Reported by Arnold Robbins.

2010-04-07  Arnold D. Robbins  <arnold@skeeve.com>

	dfa: move internals from dfa.h to dfa.c
	* src/dfa.h: Move internals into dfa.c.
	* src/dfa.c: The dfa internals are now totally local to this file.
	(dfaalloc, dfamusts, dfabroken): New functions to access features.
	* src/dfasearch.c (dfa): Change this global variable from struct to pointer.
	Adapt to that change, and use new functions, dfamusts and dfaalloc.

2010-04-07  Jim Meyering  <meyering@redhat.com>

	mbtolower: avoid potential NULL-dereference
	* src/searchutils.c: Include <assert.h>.
	(mbtolower): Assert that 0 < *n, to avoid possibility of NULL-deref.
	Remove dead increment.

	maint: tell git to ignore more build products
	* .gitignore: Also ignore results of "make ID" and "make tags".

	build: update gnulib submodule to latest

	tests: use init.sh consistently
	* tests/euc-mb: Call "path_prepend_ ." on a line by itself,
	and with a comment.  This makes it so all of the srcdir/init.sh
	lines are consistent, project-wide, and so that the addition of "."
	to PATH for this test is properly documented.
	* tests/sjis-mb: Likewise.

	maint: avoid new syntax-check failure, ...
	...now that the sole use of xmalloc no longer matches the
	regular expression used by the syntax-check rule.
	* .x-sc_prohibit_xalloc_without_use: Exempt src/kwset.c.

	grep: make kwset's obstack use xmalloc, not malloc
	This insidious bug could make grep fail to diagnose a failed malloc,
	and then proceed to dereference the resulting NULL pointer.
	Note that this bug was unlikely ever to cause real trouble; without
	the fix, grep would segfault upon OOM, now it exits with a diagnostic.
	* src/kwset.c (malloc) [GREP]: Define without the "(s)" macro
	parameter, so that unadorned uses of malloc are also mapped to xmalloc.
	One such use is in the expansion of obstack_init.
	Report and patch by Nelson H. F. Beebe, in
	http://thread.gmane.org/gmane.comp.gnu.grep.bugs/2995

	tests: improve help-version (sync from gzip's version)
	* tests/help-version: Cross-check $VERSION and --version output.
	* tests/Makefile.am (TESTS_ENVIRONMENT): Export VERSION=$(VERSION).

2010-04-06  Jim Meyering  <meyering@redhat.com>

	doc: update THANKS
	* THANKS: Update.

2010-04-06  Aharon Robbins  <arnold@skeeve.com>

	build: avoid conflict with WCHAR definition from Cygwin's <windows.h>
	* src/dfa.h (enum token): Remove the definition from this file.
	Replace with a declaration and typedef.  Moved to ...
	* src/dfa.c (enum token): ... here.
	Reported by Corinna Vinschen.

2010-04-06  Jim Meyering  <meyering@redhat.com>

	doc: add HACKING
	* HACKING: New file.  Copied from coreutils, with s/coreutils/grep/
	and a few minor edits.

2010-04-05  Jim Meyering  <meyering@redhat.com>

	tests: pull fixed init.sh from gnulib
	* tests/init.sh: Update from gnulib.

	maint: fix new argmatch-related syntax-check failures
	* configure.ac (ARGMATCH_DIE): Use usage(EXIT_FAILURE), not exit(1).
	* po/POTFILES.in: Add lib/argmatch.c.

	maint: update cfg.mk to work with gnulib's newer "make syntax-check"
	* cfg.mk: Update to use new _sc_search_regexp interface.  Run this:
	perl -pi -e 's/\b_prohibit_regexp\b/_sc_search_regexp/;'
	-e 's/\bmsg=/halt=/; s/\bre=/prohibit=/;' cfg.mk
	and then adjust backslashes so they still line up.

	maint: update tests/init.sh from gnulib
	This ensures that the explanation for any skipped or failed test
	is printed on stderr, not buried in each .log file.
	* tests/init.sh: Update from gnulib.
	* tests/init.cfg (stderr_fileno_): Define to 9, to match the
	literal 2>&9 in tests/Makefile.am

	build: update gnulib submodule to latest

2010-04-04  Jim Meyering  <meyering@redhat.com>

	maint: use argmatch, for better --directories=INVAL diagnostics
	Before, you'd see this:
	  grep: unknown directories method

	Now, you'll see this:
	  grep: invalid argument `INVAL' for `--directories'
	  Valid arguments are:
	    - `read'
	    - `recurse'
	    - `skip'
	  Usage: src/grep [OPTION]... PATTERN [FILE]...
	  Try `src/grep --help' for more information.

	* bootstrap.conf: Add argmatch.
	* configure.ac: Define ARGMATCH_DIE and ARGMATCH_DIE_DECL.
	* src/main.c (directories_type): Define.
	(directories_args, directories_types) Define.
	All of the above so we can...
	(main): Use XARGMATCH.
	(usage): Declare extern, now that argmatch calls it via ARGMATCH_DIE.

2010-04-04  Jim Meyering  <meyering@redhat.com>

	dfa.c: const correctness; and remove useless casts of realloc and malloc
	* src/dfa.c (icatalloc, icpyalloc, istrstr, enlist): As above.
	(inboth, dfamust, comsubs): Likewise.

	dfa.c: use a better (unsigned) type for an index: int->unsigned int
	* src/dfa.c (dfaexec): Use "unsigned int" for a logically unsigned index.

	maint: style: use sizeof VAR, rather than sizeof TYPE, where possible
	* src/dfa.c (copyset, zeroset): Prefer sizeof EXPR, over sizeof TYPE,
	for improved readability/maintainability.
	(equal, parse_bracket_exp, addtok_wc, dfaparse, dfaexec): Likewise.

2010-04-02  Jim Meyering  <meyering@redhat.com>

	dfa.c: use a better (unsigned) type for an index: int->size_t
	* src/dfa.c (parse_bracket_exp): Use size_t as type of index, not int.

	maint: const-correctness
	* src/dfa.c (tstbit, copyset, equal, charclass_index): Declare read-only
	"charclass" parameters to be "const".  No semantic change.

	maint: include <wchar.h> and <wctype.h> unconditionally
	* src/main.c: Include <wchar.h> and <wctype.h> unconditionally.
	Their presence/usefulness are assured by gnulib.
	* src/dfa.c: Likewise.
	* src/search.h: Likewise.

	maint: MBS_SUPPORT: define to 0/1, not undef/1
	Prepare to remove many of these #ifdefs.
	* src/mbsupport.h (MBS_SUPPORT): Define to 0/1, not undef/1.
	Change each "#ifdef MBS_SUPPORT" to "#if MBS_SUPPORT".  Use this:
	perl -pi -e 's/ifdef (MBS_SUPPORT)/if $1/' $(g grep -l ifdef.MBS_SUPPO)
	* src/dfa.c: s/#ifdef MBS_SUPPORT/#if MBS_SUPPORT/
	* src/dfa.h: Likewise.
	* src/dfasearch.c: Likewise.
	* src/kwsearch.c: Likewise.
	* src/main.c: Likewise.
	* src/search.h: Likewise.
	* src/searchutils.c: Likewise.

2010-04-02  Jim Meyering  <meyering@redhat.com>

	maint: use STREQ in place of strcmp
	perl -pi -e 's/\bstrcmp *\((.*?)\) == 0/STREQ ($1)/' src/main.c
	perl -pi -e 's/\bstrcmp *\((.*?)\) != 0/!STREQ ($1)/' src/main.c

	* src/dfa.c (STREQ): Define.
	Use it instead of strcmp.
	* src/main.c (STREQ): Likewise.
	* cfg.mk (local-checks-to-skip): Remove sc_prohibit_strcmp,
	to enable the strcmp-prohibition.

2010-04-02  Jim Meyering  <meyering@redhat.com>

	maint: enable the useless_cpp_parens syntax check
	* cfg.mk (local-checks-to-skip): Remove sc_useless_cpp_parens.
	* src/main.c (devices, fillbuf, exit_on_match): Remove useless parens.
	(print_line_head, grepfile, set_limits, main): Likewise.
	* src/vms_fab.h: Likewise.
	* vms/config_vms.h: Likewise.
	* src/mbsupport.h: Likewise.

	cleanup and improvement: parse command line arguments consistently
	* src/main.c: Include c-ctype.h, for this:
	(prepend_args): Use c_isspace, not ISSPACE.
	This is important so that we parse arguments consistently,
	and independently of the current locale.
	* bootstrap.conf (gnulib_modules): Add c-ctype.
	* src/system.h: Remove IS* definitions here, too.
	* src/dfasearch.c (WCHAR): Use isalnum, not ISALNUM.
	* src/kwsearch.c (WCHAR): Likewise.
	* src/searchutils.c (kwsinit): Use tolower, not TOLOWER.

	cleanup: rely on gnulib's ctype.h functions; remove IS* macros and is_*
	* src/dfa.c (setbit_case_fold, prednames): Use official names.
	(IS_WORD_CONSTITUENT, lex): Likewise.
	(ISALNUM, ISALPHA, ISCNTRL, ISDIGIT, ISGRAPH): Remove definitions.
	(ISLOWER, ISPRINT, ISPUNCT, ISSPACE, ISUPPER, ISXDIGIT): Likewise.
	(is_alnum, is_alpha, is_blank, is_cntrl, is_digit, is_graph): Likewise.
	(is_lower, is_print, is_punct, is_space, is_upper, is_xdigit): Likewise.
	(isgraph): Likewise.

	build: update gnulib submodule to latest, and adjust
	* src/main.c (parse_grep_colors): Adjust diagnostics not to trigger
	the sc_error_message_period and sc_error_message_uppercase
	syntax-check rules.

	maint: remove all VMS-related code
	* configure.ac (AC_CONFIG_FILES): Remove vms/Makefile
	* Makefile.am (SUBDIRS): Remove vms.
	* src/Makefile.am (EXTRA_DIST): Remove vms_fab.c and vms_fab.h.
	* src/vms_fab.c, src/vms_fab.h, vms/make.com: Remove files.
	* vms/Makefile.am, vms/README, vms/config_vms.h: Likewise.

	post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.6.3
	* NEWS: Record release date.

2010-04-02  Jim Meyering  <meyering@redhat.com>

	grep: avoid used-undefined error with truncated multibyte input
	* src/dfa.c (addtok_wc): Don't use buf[0] (it's undefined) when
	wcrtomb returns <= 0.

	MBS_SUPPORT-removal: * src/dfa.c (dfastate):

2010-04-01  Jim Meyering  <meyering@redhat.com>

	maint: avoid unnecessary 2nd getenv("TERM")
	* src/main.c (main): Don't call getenv("TERM") twice -- in the same
	expression, even.

	tests: remove all unportable uses of echo
	* src/main.c: Use printf rather than echo -ne in a comment.
	* tests/fedora: Use printf (not echo) also in ok/fail functions.
	* cfg.mk (sc_prohibit_echo_minus_en): New rule, to prohibit
	any future introduction.

	tests: add explicit requirement for en_US.UTF-8
	* tests/char-class-multibyte: Use require_en_utf8_locale_,
	rather than open-coding it.
	* tests/prefix-of-multibyte: Require the locale explicitly.
	* tests/fgrep-infloop: Likewise.
	This fixes test failures that would arise on systems without
	that particular locale.  Reported by Ludovic Court√®s.

	tests: new function, to require an en_US UTF8 locale
	* tests/init.cfg (require_en_utf8_locale_): New function.

	tests: use printf, not echo -n, echo -e, or any combination
	* tests/fedora: Using printf is more portable.

	grep: remove unnecessary code
	* src/main.c (print_line_middle): Now that we use RE_ICASE
	(enabled in commit 70e23616, "dfa: rewrite handling of multibyte
	case_fold lexing"), this case-conversion code is useless and wasteful.
	Remove it.

	doc: fix typo: s/AM_V_AT/AM_V_at/
	* doc/Makefile.am (egrep.1 fgrep.1): The former has case consistent
	with its sister variable, AM_V_GEN, but the latter is the one that
	actually works.

	doc: generated files are best made read-only, ...
	...to minimize risk of accidentally modifying the generated file
	rather than its template.  These are tiny, so no risk, but it's
	a good to be consistent, so generated files are easier to spot.
	* doc/Makefile.am (egrep.1 fgrep.1): When generating these files,
	ensure that they too are created read-only.

	doc: generate grep.1 from template
	* doc/Makefile.am (grep.1): New rule.
	(CLEANFILES): Add grep.1 to the list.
	* .gitignore: Add /doc/grep.1
	* doc/grep.in.1: Replace hard-coded "2.5.1-cvs" with @VERSION@.
	Update copyright year list.
	Omit the line-splitting \(co directive so that update-copyright
	will perform future updates automatically.
	Egmont Koblinger reported the outdated version string
	and copyright year list in the man page:
	http://savannah.gnu.org/bugs/?29390

	doc: prepare to generate grep.1
	* doc/grep.1: Rename to...
	* doc/grep.in.1: ...this.

2010-03-31  Eric Blake  <eblake@redhat.com>

	build: avoid another warning
	Noticed on cygwin:
	get-mb-cur-max.c: In function 'main':
	get-mb-cur-max.c:27: error: unused parameter 'argc' [-Wunused-parameter]

	* tests/get-mb-cur-max.c (main): Use argc.

2010-03-31  Paolo Bonzini  <bonzini@gnu.org>

	tests: fix on systems with broken sh
	* tests/Makefile.am (TESTS_ENVIRONMENT): Adjust coreutils remnants.
	* tests/bre.sh: Invoke script with $SHELL if defined.
	* tests/ere.sh: Likewise.
	* tests/spencer1-locale: Likewise.
	* tests/spencer1.sh: Likewise.

	tests: improve empty test
	* tests/empty: Add more tests, note expected failure.

	tests: improve empty test with respect to locales
	* tests/empty: Add tests for multiple locales.

	grep: fix grep -F against empty string
	* src/searchutils.c (is_mb_middle): Do not return true for empty matches
	when p == buf.

	tests: rename empty.sh to empty
	* tests/empty.sh: Rename to...
	* tests/empty: ... this.
	* tests/Makefile.am (TESTS): Adjust.

	tests: convert empty.sh to new style
	* tests/empty.sh: Convert to init.sh, add 10-second timeout.

	tests: use get-mb-cur-max in char-class-multibyte
	* tests/char-class-multibyte: Use get-mb-cur-max to detect UTF-8 support.
	Rewrite previous locale detection code as a grep test.

	tests: fix -Wformat failure
	* tests/get-mb-cur-max (main): Cast MB_CUR_MAX to int.

2010-03-31  Jim Meyering  <meyering@redhat.com>

	doc: add a "Reply-To" to the suggested announcement mail header
	* README-release: Add "Reply-To" with the list address,
	to minimize risk of replies to the other announcement recipients.
	Suggestion from Eric Blake.

2010-03-30  Jim Meyering  <meyering@redhat.com>

	build: avoid compiler warning when building test program
	* tests/Makefile.am (AM_CPPFLAGS, AM_CFLAGS, AM_LDFLAGS): Define,
	so that all the usual C compile-and-link machinery comes into play.
	* tests/get-mb-cur-max.c: Include "progname.h".
	Remove unnecessary inclusion of <ctype.h>.
	Mike Frysinger reported the "implicit decl of set_program_name" warning.

	build: detect PCRE support also when <pcre/pcre.h> is the header
	* m4/pcre.m4: Also check for <pcre/pcre.h>.
	* src/pcresearch.c: Include <pcre/pcre.h>, if needed.
	Guard inclusions with HAVE_PCRE_H and HAVE_PCRE_PCRE_H, not HAVE_LIBPCRE.
	* NEWS (Bug fixes): Mention it.
	Dmitry V. Levin reported that PCRE support was not detected
	on systems with <pcre.h> not in the default include path.

2010-03-29  Jim Meyering  <meyering@redhat.com>

	post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.6.2
	* NEWS: Record release date.

2010-03-29  Eric Blake  <eblake@redhat.com>

	build: avoid warnings on cygwin
	* lib/savedir.c (isdir): Avoid shadowing a declaration.
	* src/main.c (get_nondigit_option): Cast away const to avoid
	compiler warning.

	maint: ignore new test executable
	* .gitignore: Enhance.

2010-03-29  Jim Meyering  <meyering@redhat.com>

	doc: consolidate redundant-looking entries
	* NEWS: Consolidate the two --include/exclude-related entries.
	Suggested by Eric Blake.

2010-03-29  Paolo Bonzini  <bonzini@gnu.org>

	tests: use $(...) consistently
	* tests/backref.sh: Use `...' instead of ``...'' in comments.
	* tests/bre.awk: Use $(...) instead of `...`.
	* tests/ere.awk: Use $(...) instead of `...`.
	* tests/euc-mb: Use $(...) instead of `...`.
	* tests/fmbtest: Use $(...) instead of `...`.
	* tests/foad1: Use $(...) instead of `...`.
	* tests/pcre-z: Use $(...) instead of `...`.  Quote output of grep.
	* tests/spencer1-locale.awk: Use $(...) instead of `...`.
	* tests/spencer1.awk: Use $(...) instead of `...`.
	* tests/yesno.sh: Use $(...) instead of `...`.

2010-03-29  Jim Meyering  <meyering@redhat.com>

	build: make doc/Makefile.am cleaner and more robust
	* doc/Makefile.am (egrep.1 fgrep.1): Generate robustly, i.e.,
	do not redirect directly to $@.
	Use $(AM_V_GEN).
	Do not distribute intermediate files like fgrep.man and egrep.man.
	Likewise, do not use them to generate their %.1 images.
	Instead, generate the .1 files directly.

2010-03-29  Paolo Bonzini  <bonzini@gnu.org>

	tests: add program to detect locales
	* tests/Makefile.am (check_PROGRAMS): Add get-mb-cur-max.
	* tests/get-mb-cur-max.c: New.
	* tests/euc-mb: Use it.  Fail if the former detection test fails.
	* tests/sjis-mb: Use it.  Fail if the former detection test fails.  Expand
	comments.

2010-03-29  Paolo Bonzini  <bonzini@gnu.org>

	tests: add tests for SJIS character sets
	The attached test will be skipped unless (on a glibc system) you run
	something like

	  mkdir /usr/lib/locale/ja_JP.SHIFT_JIS
	  zcat /usr/share/i18n/charmaps/SHIFT_JIS.gz | \
	    localedef \
	      -f - \
	      -i /usr/share/i18n/locales/ja_JP \
	      /usr/lib/locale/ja_JP.SHIFT_JIS

	* tests/Makefile.am: Add sjis-mb.
	* tests/sjis-mb: New.

2010-03-29  Paolo Bonzini  <bonzini@gnu.org>

	grep -F: fix a bug with SJIS character sets
	Commit db9d6 would erroneously skip matches in SJIS character sets.  In
	this character set low bytes (i.e. ASCII bytes) are also valid second
	bytes in a double-byte character, so you have to continue looking for
	a match, even if you match in the middle of a double-byte character.

	* src/kwsearch.c: Ensure that beg is advanced by at least one byte,
	but do not fail immediately after matching in the middle of a double-byte
	character.

2010-03-29  Bruno Haible  <bruno@clisp.org>

	build: update after change in gnulib's lib-ignore module
	* src/Makefile.am (AM_LDFLAGS): Define.  Use gnulib's new
	$(IGNORE_UNUSED_LIBRARIES_CFLAGS).

2010-03-29  Jim Meyering  <meyering@redhat.com>

	tests: disable new texinfo-acronym syntax-check from gnulib
	* cfg.mk (local-checks-to-skip): Add new sc_texinfo_acronym, to skip it.

2010-03-28  Norihiro Tanaka  <noritnk@kcn.ne.jp>

	tests: exercise fix for improper match of incomplete MB char prefix
	* tests/prefix-of-multibyte: New file.
	* tests/Makefile.am (TESTS): Add it.

2010-03-28  Jim Meyering  <meyering@redhat.com>

	grep -F: fix a multi-byte erroneous-match-in-middle bug
	Just as Perl prints nothing in this case,
	  printf '\357\274\241\n' | perl -CIO -lne '/\357/ and print'

	grep should also print nothing when used as follows.
	However, these would mistakenly match with grep prior to 2.6.2:
	  printf '\357\274\241\n' | LC_ALL=en_US.UTF-8 src/grep -F $'\357'
	  printf '\357\274\241\n' | LC_ALL=en_US.UTF-8 src/grep -F $'\357\274'

	* src/searchutils.c (is_mb_middle): New parameter: the length of the
	match, in bytes, as determined by kwsexec.  Use this to detect when
	the nominal match found by kwsexec must be skipped because it is for
	an incomplete multi-byte character that is a prefix of a character
	in the input.
	* src/dfasearch.c (EGexecute): Update caller.
	* src/kwsearch.c (Fexecute): Likewise.
	* src/search.h: Update prototype.
	* NEWS (Bug fixes): Mention it.
	Report and analysis by Norihiro Tanaka.

2010-03-28  Norihiro Tanaka  <noritnk@kcn.ne.jp>

	tests: add tests for the fgrep-infloop bug
	* tests/init.cfg (require_timeout_): New function.
	* tests/fgrep-infloop: New file.  Test for the above fix.
	* tests/Makefile.am (TESTS): Add it.

2010-03-28  Jim Meyering  <meyering@redhat.com>

	grep -F: avoid infinite loop when searching for incomplete MB character
	Searching for an incomplete non-prefix of a multi-byte character
	should find no match.

	  Just as these print nothing,
	    printf '\357\274\241\357\274\241\n' \
	      | perl -CIO -ne '/\241\357/ and print'
	    printf '\357\274\241\n' | perl -CIO -ne '/\274\241/ and print'
	    printf '\357\274\241\n' | perl -CIO -ne '/\241/ and print'
	    printf '\357\274\241\n' | perl -CIO -ne '/\274/ and print'

	  These should also print nothing, but with grep-2.6 and grep-2.6.1,
	  they would infloop:
	    printf '\357\274\241\n' | LC_ALL=en_US.UTF-8 src/grep -F $'\241'
	    printf '\357\274\241\n' | LC_ALL=en_US.UTF-8 src/grep -F $'\274'
	    printf '\357\274\241\n' | LC_ALL=en_US.UTF-8 src/grep -F $'\274\241'

	* src/kwsearch.c (Fexecute): Don't infloop when searching for
	an incomplete non-prefix part of a multi-byte character.
	* NEWS (Bug fixes): Mention it.
	Reported and diagnosed by Norihiro Tanaka.

2010-03-28  Jim Meyering  <meyering@redhat.com>

	tests: rename: fmbtest.sh -> fmbtest
	* tests/fmbtest.sh: Rename to ...
	* tests/fmbtest: ...this, dropping the .sh suffix.
	* tests/Makefile.am (TESTS): Reflect renaming.

	tests: convert fmbtest.sh to use init.sh
	* tests/fmbtest.sh: Use init.sh and adapt accordingly:
	Use "grep", not ${GREP}.  Use Exit, not exit.

	tests: also exercise the --include + glob path
	* tests/include-exclude: Exercise Javier's fix.

2010-03-28  Javier Villavicencio  <the_paya@gentoo.org>

	grep -r: fix --include with globs, too
	The previous fix addressed only the non-glob case.
	* src/main.c (main): Use add_exclude's EXCLUDE_WILDCARDS option,
	to enable the use of fnmatch with --include=GLOB.
	gnulib: Update to latest, for the fixed exclude.c.

2010-03-28  Jim Meyering  <meyering@redhat.com>

	grep -r: fix --include with non-globs
	* lib/savedir.c (savedir): Fix logic error.  Introduced by commit
	bf3bd92c, "build: adapt to the newer exclude API we now get from gnulib"
	* tests/include-exclude: Test for this bug by exercising --include, too.
	* NEWS (Bug fixes): Mention it.
	Reported by Philipp Kohlbecher in http://savannah.gnu.org/bugs/?29358

2010-03-27  Jim Meyering  <meyering@redhat.com>

	kwset: correct comments; require non-NULL kwsmatch argument
	* src/kwset.c (kwsexec): Correct comments.  This function has been
	returning an offset, not a pointer, for 9 years.
	Do not test for kwsmatch == NULL.  All callers pass non-NULL.
	(cwexec): Likewise.
	* src/kwset.h (kwsexec): Mark the 4th parameter, kwsmatch, as non-NULL.
	Include "arg-nonnull.h".

	build: add -I$(top_builddir)/lib so we also find generated .h files
	* src/Makefile.am (AM_CPPFLAGS): Rename from INCLUDES to avoid
	warning from automake -Wall.
	Add -I$(top_builddir)/lib, so we find generated .h files like
	getopt.h in a non-srcdir build.

	build: remove superfluous LOCALEDIR definition
	* src/Makefile.am (INCLUDES): Remove unnecessary definition of
	LOCALEDIR here.  Now, it's defined via gnulib's configmake.h.
	* src/system.h: Include "configmake.h" for its LOCALEDIR definition.

	grep: don't segfault upon use of --include or --exclude* options
	* lib/savedir.c (isdir1): Fix fatal typo: deref "dir" argument,
	not the global (initially-NULL) "path".  Reported by Standish Parsley.
	* tests/include-exclude: New file.
	* tests/Makefile.am (TESTS): Add it.
	* NEWS (Bug fixes): Mention it.

2010-03-26  Jim Meyering  <meyering@redhat.com>

	tests: rename: foad1.sh -> foad1
	* tests/foad1.sh: Rename to ...
	* tests/foad1: ...this, dropping the .sh suffix.
	* tests/Makefile.am (TESTS): Reflect renaming.

	tests: convert foad1.sh to use init.sh
	This fixes a spurious test failure when "make check" is run with
	certain envvars set, e.g., "make check GREP_COLOR=always"
	* tests/foad1.sh: Use init.sh and adapt accordingly:
	Use "grep", not ${GREP}.  Test VERBOSE against "yes", not "1",
	to be consistent with init.sh.
	Use Exit, not exit.
	Reported by Nelson H. F. Beebe.

	tests: insulate tests from envvar settings
	* tests/init.cfg (vars_): Unset each envvar that can affect how
	grep works.  This protects only those tests that have been
	converted to use init.sh.

2010-03-26  Eric Blake  <eblake@redhat.com>

	maint: ignore 'make dist pdf' droppings
	* .gitignore: Add more exemptions.

2010-03-26  Jim Meyering  <meyering@redhat.com>

	tests: avoid spurious test failure due to lack of a French UTF8 locale
	* tests/init.cfg: New file.  If either $LOCALE_FR or $LOCALE_FR_UTF8
	is set to "none", reset it to the empty string.
	Reported by Mike Frysinger and Sven Joachim.
	* tests/Makefile.am (EXTRA_DIST): Add init.cfg.

	build: do not use pkg-config to test for PCRE support
	* configure.ac: Do not use PKG_PROG_PKG_CONFIG or PKG_CHECK_MODULES.
	Do not modify CPPFLAGS; that belongs to those who invoke make.
	Instead, use autoconf's AC_CHECK_HEADERS and AC_SEARCH_LIBS via the
	new macro, gl_FUNC_PCRE, defined in...
	* m4/pcre.m4 (gl_FUNC_PCRE): New macro, to handle pcre-related
	configure-time tests.
	* src/Makefile.am (grep_LDADD): Use LIB_PCRE, not PCRE_LIBS.
	* src/pcresearch.c: Test HAVE_LIBPCRE via "#if", not "#ifdef".
	All other cpp tests of this symbol used "#if".
	Prompted by a suggestion from Bruno Haible.
	* NEWS (Build-related): Mention this.

2010-03-25  Jim Meyering  <meyering@redhat.com>

	doc: correct and amend NEWS entries for 2.6.1
	* NEWS (Bug fixes): Correct character ranges bug description.
	Add an example from Dmitry V. Levin.
	Add that the word-with-backref bug was introduced in 2.5.1.
	* cfg.mk (old_NEWS_hash): Update to match.

	post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.6.1
	* NEWS: Record release date.

2010-03-25  Tony Abou-Assaleh  <taa@acm.org>

	tests: use awk's -v option more portably
	* tests/spencer1-locale: Add a space between awk's "-v" option and
	the following VAR=value string, to avoid test failure on Mac OS X.

2010-03-25  Norihirio Tanaka  <noritnk@kcn.ne.jp>

	dfa/grep: fix compilation with MBS_SUPPORT
	* src/dfa.c (cur_mb_len): Initialize to 1 and always make it available.
	(setbit_case_fold): Do not use wint_t in prototype if !MBS_SUPPORT.
	(parse_bracket_exp): Fix compilation with !MBS_SUPPORT.
	* src/kwsearch.c (kwsinit): Do not use mbtolower and MB_CUR_MAX
	if !MBS_SUPPORT.
	* src/searchutils.c (kwsinit): Do not refer to MB_CUR_MAX if !MBS_SUPPORT.

	* tests/char-class-multibyte: Skip if UTF-8 matching does not work.
	* tests/fmbtest.sh: Likewise.

2010-03-25  Jim Meyering  <meyering@redhat.com>

	build: avoid warnings about unnecessary use of "return"
	* src/grep.c (Gcompile, Ecompile, Acompile): Do not "return X"
	from a function returning void, not even when X itself is a
	function returning void.  This avoids warnings from Sun Studio 11
	reported by Dagobert Michelsen.
	* src/egrep.c (Ecompile): Likewise.

2010-03-25  Norihirio Tanaka  <noritnk@kcn.ne.jp>

	grep: fix printing when -w is used and regex is needed for matching
	* NEWS: Document bugfix.
	* src/dfasearch.c (EGexecute): After assess_pattern_match len, is either
	invalid or end-beg; jump to success.
	* tests/Makefile.am (TESTS): Add new test.
	* tests/backref-word: New.

2010-03-25  Paolo Bonzini  <bonzini@gnu.org>

	dfa: fix single byte character ranges
	* src/dfa.c (in_coll_range): Fix ordering for second strcoll.  Reported
	by Dmitry V. Levin.
	* tests/spencer1-locale.awk: Also test single-byte character sets.
	* NEWS: Add a note about this bugfix.
	* THANKS: Add Dmitry.

2010-03-25  Norihirio Tanaka  <noritnk@kcn.ne.jp>

	grep: reset state after truncated or invalid multibyte sequences
	* src/searchutils.c (is_mb_middle): When treating an invalid sequence
	or a truncated multibyte character as a single byte character, reset
	mbstate

	grep: do lowercase conversion in print_line_middle only for single-byte case
	* src/main.c (print_line_middle): Restrict match_icase code
	to MB_CUR_MAX == 1.  Adjust comments.

2010-03-25  Jim Meyering  <meyering@redhat.com>

	tests: provide framework_failure_ function
	The shell function "framework_failure" was called in the unusual
	event that some fundamental test set-up operation would fail.
	However it was not defined.  Define it, but with a trailing underscore
	to impinge less on the test writer's name space.  Adjust all uses.
	* tests/init.sh (framework_failure_): New function.
	* tests/case-fold-backref: s/framework_failure/framework_failure_/
	* tests/case-fold-char-class: Likewise.
	* tests/case-fold-char-range: Likewise.
	* tests/case-fold-char-type: Likewise.
	* tests/char-class-multibyte: Likewise.
	* tests/dfaexec-multibyte: Likewise.
	* tests/max-count-vs-context: Likewise.
	* tests/word-multi-file: Likewise.

	doc: tweak THANKS
	* THANKS: Update Arnold's name and address, per request.

2010-03-24  Jim Meyering  <meyering@redhat.com>

	portability: use gnulib's lseek wrapper
	* bootstrap.conf (gnulib_modules): Use gnulib's lseek wrapper,
	for improved portability.  lseek does not fail with ESPIPE on
	pipes on some systems.

	build: avoid link failure on Solaris 8
	* bootstrap.conf (gnulib_modules): Add wctob.
	* NEWS (Portability): Mention this.
	Reported by Dagobert Michelsen in <http://sv.gnu.org/bugs/?29325>.

2010-03-24  Petr P√≠sa≈ô  <petr.pisar@atlas.cz>

	doc: translate new --help message
	* src/main.c: Translate "after_options".

2010-03-24  Jim Meyering  <meyering@redhat.com>

	doc: NEWS make it clear that the bug was introduced in 2.6
	* NEWS: Clarify.

2010-03-24  Paolo Bonzini  <bonzini@gnu.org>

	tests: fix char-class-multibyte
	* tests/char-class-multibyte: Make it pass.

2010-03-23  Jim Meyering  <meyering@redhat.com>

	build: avoid compilation failure when MBS_SUPPORT not defined
	* src/dfa.c (setbit_case_fold) [!MBS_SUPPORT]: Fix curly brace mismatch.

2010-03-23  Paolo Bonzini  <bonzini@gnu.org>

	dfa: fix sigsegv on multibyte character classes
	Reported by Jaroslav ≈†karvada <jskarvad@redhat.com>.  This is
	unfortunate.  grep needs an automatic testcase generator.

	* NEWS: Document bug.
	* THANKS: Mention reporter.
	* src/dfa.c (set_bit_casefold): Change type of first argument for
	self-documentation.
	(parse_bracket_exp): Fix call.
	* tests/Makefile.am: Add new testcase.
	* tests/char-class-multibyte: New testcase.

2010-03-23  Jim Meyering  <meyering@redhat.com>

	post-release administrivia
	* NEWS: Add header line for next release.
	* .prev-version: Record previous version.
	* cfg.mk (old_NEWS_hash): Auto-update.

	version 2.6
	* NEWS: Record release date.

	build: avoid warnings: tell gcc and clang that dfaerror never returns
	* src/dfa.h (__attribute__): Define.
	(dfaerror): Declare with the "noreturn" attribute.
	* src/dfasearch.c (dfaerror): Add an unreachable use of abort.

2010-03-22  Eric Blake  <eblake@redhat.com>

	build: fix cygwin build
	Portions of gnulib depend on -lintl, and cygwin does not allow
	lazy linking.

	* src/Makefile.am (LDADD): Include libraries in correct order.

2010-03-22  Paolo Bonzini  <bonzini@gnu.org>

	grep: remove --mmap
	mmap is a bad idea for sequentially accessed file because it will cause
	a page fault for every read page.  Just consider it a failed experiment,
	and ignore --mmap while accepting it for backwards compatibility.

	* configure.ac (AC_FUNC_MMAP): Remove.
	* doc/grep.texi (Other options): Say --mmap is ignored.
	* src/grep.c (mmap_option): Remove.
	(long_options): Do not reference it.
	(bufmapped, initial_bufoffset): Remove.
	(reset, fillbuf): Remove HAVE_MMAP code.
	(grepfile): Remove bufmapped reference.
	(usage): Say --mmap is ignored.

2010-03-22  Paolo Bonzini  <bonzini@gnu.org>

	grep: rename files for intuitiveness
	* Makefile.am (libgrep_a_SOURCES, grep_SOURCES, egrep_SOURCES,
	fgrep_SOURCES): Adjust.
	* grep.c: Rename to main.c.
	* esearch.c: Rename to egrep.c.
	* fsearch.c: Rename to fgrep.c.
	* gsearch.c: Rename to grep.c.

	grep: kill GREP_PROGRAM/EGREP_PROGRAM/FGREP_PROGRAM
	* NEWS: Document slight semantic change.
	* TODO: #ifdefs are gone.
	* po/POTFILES.in: Update.
	* src/Makefile.am (grep_SOURCES, egrep_SOURCES, fgrep_SOURCES): Remove
	grep.c/egrep.c/fgrep.c.
	(noinst_LIBRARIES): Change libsearch.a to libgrep.a.
	(libsearch_a_SOURCES): Rename to libgrep_a_SOURCES, add grep.c
	(LDADD): Change libsearch.a to libgrep.a.
	* src/esearch.c: Add before_options and after_options.
	* src/fsearch.c: Likewise.
	* src/gsearch.c: Likewise.
	* src/grep.c (short_options, long_options): Remove GREP_PROGRAM
	special-casing.
	(usage): Use before_options and after_options, look at matchers.
	(setmatcher): Merge with install_matcher.
	(main): Call setmatcher (NULL) instead of install_matcher.
	* src/grep.h (GREP_PROGRAM): Remove.
	(before_options, after_options): Add.

	thank Eric Blake
	* THANKS: Add Eric Blake, who reported the warning fixed by 774d0ee.

	grep: libify *search.c
	* src/Makefile.am (libsearch_a_SOURCES): Add dfasearch.c, kwsearch.c,
	pcresearch.c.
	* src/esearch.c, src/fsearch.c, * src/gsearch.c: Only include search.h.
	* src/dfasearch.c (GEAcompile, EGexecute): Export.
	* src/kwsearch.c (Fcompile, Fexecute): Export.
	* src/pcresearch.c (Pcompile, Pexecute): Export.
	* src/search.h: Add new exported functions.

	grep: prepare for libification of *search.c
	* src/dfasearch.c (Ecompile): Remove.
	* src/esearch.c: Place it here...
	* src/gsearch.c: ... and here.

	grep: split search.c
	* po/POTFILES.in: Update.
	* src/Makefile.am (grep_SOURCES, egrep_SOURCES, fgrep_SOURCES): Move
	kwset.c and dfa.c to libsearch.a.  Add searchutils.c there too.
	* src/search.h, src/dfasearch.c, src/pcresearch.c, src/kwsearch.c,
	src/searchutils.c: New files, split out of src/search.c.
	* src/esearch.c, src/fsearch.c: Include the new files instead of search.c.
	* src/gsearch.c: Likewise, plus move Gcompile/Acompile here.

	grep: remove one #ifdef
	* search.c (GEAcompile) [EGREP_PROGRAM]: Use common code.  Inline IF_BK.

2010-03-22  Paolo Bonzini  <bonzini@gnu.org>

	grep: eliminate {COMPILE,EXECUTE}_{RET,ARGS,FCT}
	Modern compilers warn about type mismatches.

	* src/grep.c (do_execute): Write full declaration.
	* src/grep.h (COMPILE_RET, COMPILE_ARGS, COMPILE_FCT, EXECUTE_RET,
	EXECUTE_ARGS, EXECUTE_FCT): Remove.
	(compile_fp_t, execute_fp_t): Write full declaration.
	* src/search.c (GEAcompile, Gcompile, Acompile, Ecompile, EGexecute,
	Fcompile, Fexecute, Pcompile, Pexecute): Write full declaration.

2010-03-22  Paolo Bonzini  <bonzini@gnu.org>

	grep: make egrep/fgrep use struct matcher
	* Makefile.am (grep_SOURCES): Add gsearch.c.
	(EXTRA_DIST): Add search.c.
	* esearch.c (matchers): New.
	* fsearch.c (matchers): New.
	* gsearch.c: New.
	* search.c (matchers): Remove.
	* grep.c: Always compile most !GREP_PROGRAM sections.
	(main): Use first matcher if none is explicitly provided.  Remove
	"default" matcher.
	* grep.h (struct matcher): Adjust comments.

	grep: change struct matcher termination
	* src/grep.c (setmatcher): Look for NULL matchers[i].name.
	* src/grep.h (struct matcher): Change name to pointer.  Adjust comments.
	* src/search.c (matchers): Terminate with three NULLs.

	grep: remove one #ifdef
	* search.c (Ecompile): Always go through GEAcompile to use same code path
	for both grep and egrep.

	grep: remove getpagesize.h
	* src/getpagesize.h: Remove.
	* src/Makefile.am (noinst_HEADERS): Remove getpagesize.h.

2010-03-21  Jim Meyering  <meyering@redhat.com>

	build: use the fcntl-h module, not "fcntl"
	* bootstrap.conf (gnulib_modules): We might need fcntl.h somewhere,
	but don't use the fcntl function.  Reported by Bruno Haible.

	build: avoid link failure on systems using gnulib's fcntl but not open
	* bootstrap.conf (gnulib_modules): Using gnulib's fcntl module
	and including <fcntl.h>, but not also using gnulib's "open" module
	would result in link failure due to references to rpl_open
	on systems requiring the replacement (e.g., Cygwin and Darwin).

	build: avoid compilation failure on systems using rpl_open
	This new build failure has arisen as a result of using gnulib's
	"fcntl" module.  Now that an inadequate "open" syscall is replace
	by gnulib's wrapper, it is essential to include <fcntl.h>.
	* src/grep.c: Include <fcntl.h>.
	This is required, for grepfile's use of open, at least on
	Cygwin and Darwin.

	maint: use gnulib's fcntl module, just in case
	* bootstrap.conf (gnulib_modules): Add fcntl.
	Grep uses at least O_BINARY, which may be defined therein.

	maint: remove TYPE_* definitions from src/system.h
	* src/system.h (TYPE_MAXIMUM, TYPE_MINIMUM, TYPE_SIGNED): Remove
	definitions.  They are provided by intprops.h.
	* src/grep.c: Include "intprops.h"
	* bootstrap.conf (gnulib_modules): Add intprops.

	maint: alphabetize #include directives
	* src/grep.c: Alphabetize #include directives.

2010-03-20  Jim Meyering  <meyering@redhat.com>

	build: stop using gnulib's memmove module
	* bootstrap.conf (gnulib_modules): Remove obsolete module: memmove

	build: reinstate gnulib's fcntl-h-tests
	* bootstrap.conf (gnulib_tool_option_extras): Do not avoid
	the fcntl-h-tests.  I cannot reproduce the failure.

2010-03-20  Eric Blake  <eblake@redhat.com>

	build: allow compilation on cygwin
	Gnulib is incompatible with -Wunused-macros.  Addtionally,
	cygwin 1.7.1 coupled with --enable-gcc-warnings tripped on:

	grep.c: In function 'print_line_middle':
	grep.c:805: error: array subscript has type 'char' [-Wchar-subscripts]
	grep.c: In function 'main':
	grep.c:1833: error: 'optarg' redeclared without dllimport attribute: previous dllimport ignored [-Wattributes]
	grep.c:1834: error: 'optind' redeclared without dllimport attribute after being referenced with dll linkage

	* configure.ac (GNULIB_WARN_FLAGS): Disable -Wunused-macros.
	* src/grep.c (print_line_middle): Use correct type to tolower.
	(main): Drop useless redeclarations.
	* .gitignore: Ignore more built files.

2010-03-20  Jim Meyering  <meyering@redhat.com>

	tests: ensure that all programs handle [b-a] consistently
	* tests/reversed-range-endpoints: New test.
	* tests/Makefile.am (TESTS): Add it.

2010-03-20  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest
	This pulls in the latest regex module from gnulib, including a fix
	to make it honor the RE_NO_EMPTY_RANGES syntax bit.

	tests: temporarily disable irrelevant-to-grep failing C++ fcntl-h-tests
	* bootstrap.conf (gnulib_tool_option_extras): Temporarily add
	--avoid=fcntl-h-tests, until the C++ part of that test is fixed.

2010-03-20  Jim Meyering  <meyering@redhat.com>

	reject reversed-endpoint ranges, with all regex variants
	* src/search.c: Add RE_NO_EMPTY_RANGES to the syntax bits
	in three places, so that all of grep, egrep, and grep -E reject
	a range with reversed endpoints like '[b-a]'.  This is required,
	when using the latest version of gnulib's regex module, since it
	now honors the RE_NO_EMPTY_RANGES flag, rather than acting as if
	it were always set.
	Based on a change by Matthew Burgess.

2010-03-19  Jim Meyering  <meyering@redhat.com>

	maint: correct macro parameter parentheses
	* src/dfa.c (FETCH_WC, FETCH): Parenthesize macro parameters.

2010-03-19  Paolo Bonzini  <bonzini@gnu.org>

	tests: change help-version to per-program functions
	* help-version: Change each *_args variable to a *_setup function.

	dfa: fix wchar_t/wint_t type mismatch
	* src/dfa.c (FETCH_WC): Pass a local wchar_t variable to mbrtowc.
	(FETCH): Rename temporary second argument to FETCH_WC.
	(parse_bracket_exp): Always use FETCH_WC.

2010-03-19  Jim Meyering  <meyering@redhat.com>

	doc: add README-prereq, referenced from README-hacking
	* README-prereq: New file.  Cloned from coreutils, s/coreutils/grep/
	Reported by Tony Abou-Assaleh.

2010-03-19  Arnold Robbins  <arnold@skeeve.com>

	maint: sync dfa comments from gawk
	* src/dfa.h (struct dfa) [newlines]: Amend comment.
	* src/dfa.c: Update copyright year list to include gawk's.

2010-03-17  Jim Meyering  <meyering@redhat.com>

	maint: remove obsolete "cvs-clean" make target
	* Makefile.am (cvs-clean): Remove obsolete target.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	dfa: initialize struct mbcset using memset
	* src/dfa.c (parse_bracket_exp): Use memset to initialize workmbc.

	dfa: spell out "unsigned int"
	* dfa.c (setbit, tstbit, clrbit, setbit_case_fold, lex, dfaoptimize,
	free_mbdata): Put "int" after unsigned.
	* dfa.h (struct position, struct dfa): Likewise.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	dfa: optimize simple character sets under UTF-8 charsets
	Only use a bitset when possible without involving MBCSET.  Testcase:
	   yes 'the quick brown fox jumps over the lazy dog' | sed 100000q | \
	     time grep -c [ABCDEFGHIJKLMNOPQRSTUVWXYZ,]

	Before: 51ms (best of three runs); after: 16ms(best of three runs).

	* src/dfa.c (parse_bracket_exp): For simple bracket expressions
	under UTF-8, use a CSET.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	dfa: speed up handling of brackets
	This patch has two sides.  One is to fold the parsing of brackets in the
	single- and multi-byte cases.  The second is to leverage this change,
	and use a bitset to test for single-byte characters in the charset.
	Splitting the two would be very hard.

	Testcase:
	   yes 'the quick brown fox jumps over the lazy dog' | sed 100000q | \
	     time grep -c [ABCDEFGHIJKLMNOPQRSTUVWXYZ,]

	Before: 59ms (best of three runs); after: 51ms (best of three runs).
	Nice, but mostly providing infrastructure for the next patch.

	* src/dfa.c (setbit_case_fold): Try applying towlower/towupper.
	(looking_at): Remove.
	(FETCH_WC): New.
	(fetch_wc): Merge into FETCH_WC [MBS_SUPPORT].
	(FETCH) [MBS_SUPPORT]: Call FETCH_WC.
	(prednames, find_pred, is_blank and other predicates): Move above,
	remove K&R syntax support.
	(parse_bracket_exp): New name of parse_bracket_exp_mb, rewritten to
	include single-byte character set parsing of brackets.
	(lex): Adjust for fetch_wc->FETCH_WC change, remove single-byte
	character set parsing of brackets.
	(match_mb_charset): Test against work_mbc->cset.
	* src/dfa.h (struct mb_char_classes): Add cset.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	syntax-check: remove space-tab exception
	* .x-sc_space_tab: Remove.
	* src/dfa.c: Fix space-tab occurrence.

	THANKS: fix Jim Meyering's email address
	* THANKS: Jim is now with Red Hat.

	dfa: add missing function
	* src/dfa.c (using_utf8): New.
	(addtok_wc, free_mbdata, dfaoptimize) [!MBS_SUPPORT]: Do not define.
	(dfacomp) [!MBS_SUPPORT]: Do not call dfaoptimize.

	tests: fix typo
	* fedora: Fix typo.

	tests: use Exit
	* euc-mb: exit with "Exit 0".

	grep: remove more register keywords
	* dosbuf.c: Remove register keywords.
	* grep.c: Remove register keywords.
	* kwset.c: Remove register keywords.
	* search.c: Remove register keywords.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	dfa: run simple UTF-8 regexps as a single-byte character set
	This provides a speedup whenever fgrep is "almost" sufficient but
	not quite (e.g. grep ^abc).  This affects test cases such as
	https://savannah.gnu.org/bugs/?29117, which are already worked around
	by the line-by-line matching patch c32c04; without that patch the
	speedup can reach 1000x even on non-contrived testcases.

	* src/dfa.c (dfaoptimize): New.
	(dfacomp): Call it.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	tests: fix syntax-check failures
	* tests/case-fold-backref: Use "foo" instead of "the".
	* tests/dfaexec-multibyte: Remove trailing blanks.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	grep: remove check_multibyte_string, fix non-UTF8 missed match
	Avoid computing ahead something that can be computed lazily as efficiently
	(or more efficiently in the case of UTF-8, though this is left as TODO).
	At the same time, "soften" the rejection condition for matching in the
	middle of a multibyte sequence to fix bug 23814.

	Multibyte "grep -i" would still be very slow if it wasn't for the workaround
	patch c32c042 (grep: match multibyte charsets line-by-line when using -i,
	2010-03-08).

	* NEWS: Document bugfix.
	* src/search.c (check_multibyte_string): Rewrite as...
	(is_mb_middle): ... this.
	(EGexecute, Fexecute): Adjust.
	* tests/Makefile.am (TESTS): Add euc-mb.
	* tests/euc-mb: New testcase.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	dfa: cache MB_CUR_MAX for dfaexec
	* src/dfa.c (state_index, dfaexec): Use d->mb_cur_max.
	(dfainit): Initialize it.
	(free_mbdata): New, extracted out of dfafree.
	(dfafree): Use it.

	dfa: improve documentation of struct dfa
	* src/dfa.h (struct dfa): Reword some comments.

	tests: factor name of output files into a variable
	* tests/case-fold-backref, tests/case-fold-char-class,
	tests/case-fold-char-range, tests/case-fold-char-type,
	tests/dfaexec-multibyte: Use a variable for the output filename,
	as it is common to the grep and compare invocations.

	tests: use different output files to simplify reading failed .log files
	* tests/case-fold-backref, tests/case-fold-char-class,
	tests/case-fold-char-range, tests/case-fold-char-type: Use a different
	name for each output file from grep.
	* tests/dfaexec-multibyte: Likewise, and merge some grep invocations.

	tests: add another grep -i testcase, from bug 16179
	* tests/case-fold-backref: New.
	* tests/Makefile.am (TESTS): Add it.

2010-03-17  Paolo Bonzini  <bonzini@gnu.org>

	dfa: rewrite handling of multibyte case_fold lexing
	Let dfacomp do the folding to lowercase of multibyte input strings,
	and remove it from grep.c.  Input strings to kwset.c are still folded
	outside kwset.c, so we still need to do mbtolower in search.c.

	* NEWS: Document bugfixes.
	* .x-sc_cast_of_argument_to_free: Remove.
	* src/dfa.c (wctok, addtok_wc): New.
	(cur_mb_index, update_mb_len_index): Remove.
	(FETCH): Do not call it.
	(parse_bracket_exp_mb) [GREP]: Disable case-folding of ranges and
	characters.
	(addtok): Extract part to...
	(addtok_mb): ... this new function.
	(lex): Call fetch_wc in the main loop for MB_CUR_MAX > 1.  Return WCHAR
	for normal characters if MB_CUR_MAX > 1.
	(atom): Handle WCHAR instead of treating multibyte characters specially.
	Do case folding of multibyte characters here.
	(dfacomp): Remove case_fold special casing.
	* src/dfa.h (WCHAR): New.
	* src/grep.c (mb_icase_keys): Remove.
	(main): Do not call it.
	* src/search.c (kwsinit): Init transition table only for MB_CUR_MAX == 1.
	(mbtolower): New.
	(kwsincr_case): New.
	(kwsmusts): Call it instead of kwsincr.
	(check_multibyte_string): Remove.
	(check_multibyte_string_no_icase): Rename to check_multibyte_string.
	(GEAcompile, EGexecute, Fcompile): Use mbtolower instead of the old
	check_multibyte_string.
	* tests/Makefile.am (TESTS): Add case-fold-backslash-w.
	* tests/foad1.sh: Enable fixed tests.
	* tests/case-fold-backslash-w: New.

2010-03-16  Paolo Bonzini  <bonzini@gnu.org>

	grep: match multibyte charsets line-by-line when using -i
	The turtle combination -i + MB_CUR_MAX>1 requires case conversion ahead
	of time.  Avoid doing this repeatedly when many matches succeed.  Together
	with the previous changes, this fixes https://savannah.gnu.org/bugs/?29117
	and https://savannah.gnu.org/bugs/?14472.

	* NEWS: Document new speedup.
	* src/grep.c (do_execute): New.
	(grepbuf): Use it.

2010-03-15  Paolo Bonzini  <bonzini@gnu.org>

	dfa: fix handling of ranges in multibyte character sets
	* src/dfa.c (parse_bracket_exp_mb): Add separate ranges for
	lowercase and uppercase endpoints if folding case.
	* tests/Makefile.am (TESTS): Add case-fold-char-range.
	* tests/case-fold-char-range: New.

	tests: add more UTF-8 test cases
	* tests/Makefile.am (TESTS): Add spencer1-locale.
	(EXTRA_DIST): Add spencer1-locale.awk.
	* tests/spencer1-locale.awk: New.
	* tests/spencer1-locale: New.

2010-03-15  Jim Meyering  <meyering@redhat.com>

	tests: complete the renaming fedora.sh -> fedora
	* tests/Makefile.am (TESTS): Rename fedora.sh -> fedora here, too.

2010-03-15  Jim Meyering  <meyering@redhat.com>

	* tests/fedora.sh: Rename to...
	* tests/fedora: ...this, to reflect new convention:
	Use the lack of a suffix to indicate we've converted to the new
	init.sh-using test framework.

	tests: adjust fedora.sh to handle traps more portably

2010-03-15  Jim Meyering  <meyering@redhat.com>

	tests: adjust fedora.sh to handle traps more portably
	* tests/fedora.sh: Use "Exit", not "exit".

	tests: for each test, set an envvar to its name
	* tests/Makefile.am (TESTS_ENVIRONMENT): Set GREP_TEST_NAME for
	each test.  This is used to help make the output of hundreds of
	independent, often-parallel valgrind runs more manageable.

2010-03-14  Jim Meyering  <meyering@redhat.com>

	tests: clean up fedora.sh
	* tests/fedora.sh: Use "grep", not ${GREP}.
	Use init.sh.
	Use timeout 10, not sleep 1 (three times).
	The latter would always sleep for 3 seconds, and the test would
	fail with a false positive on a slow system or with a heavily
	instrumented (valgrind) executable.

2010-03-12  Jim Meyering  <meyering@redhat.com>

	build: avoid build failure with --enable-gcc-warnings
	* src/dfa.c: Don't include <assert.h>, now that it is not used.
	[DEBUG]: Remove #ifdef block.

2010-03-12  Paolo Bonzini  <bonzini@gnu.org>

	syntax-check: enable space-tab
	* cfg.mk (local-checks-to-skip): Enable space-tab.
	* .x-sc_space_tab: Add exceptions.
	* tests/status.sh: Fix occurrence.

	syntax-check: enable m4-quote-check
	* cfg.mk (local-checks-to-skip): Enable m4-quote-check.
	* configure.ac: Fix occurrence.

	syntax-check: enable makefile-TAB-only-indentation
	* cfg.mk (local-checks-to-skip): Enable makefile-TAB-only-indentation.
	* Makefile.am: Fix only occurrence.

	grep: fix error-message-uppercase
	* cfg.mk (local-checks-to-skip): Enable error-message-uppercase.
	* src/dfa.c (parse_bracket_exp_mb, lex, dfaparse): Fix occurrences.
	* src/search.c (Pcompile, Pexecute): Fix occurrences.

	dfa, grep: cleanup if-before-free and cast-of-argument-to-free
	* .x-sc_avoid_if_before_free: Remove.
	* .x-sc_cast_of_alloca_return_value: Remove.
	* .x-sc_cast_of_x_alloc_return_value: Remove.
	* .x-sc_cast_of_argument_to_free: Temporarily add src/search.c.
	* cfg.mk (local-checks-to-skip): Remove sc_cast_of_argument_to_free.
	* src/dfa.c (ifree): Remove.
	(dfamust, build_state, transit_state, dfafree): Do not do if-before-free,
	do not cast free argument to ptr_t or char *.
	(freelist): Call free instead of ifree.
	* src/dfa.h (ptr_t): Remove.

2010-03-12  Paolo Bonzini  <bonzini@gnu.org>

	dfa: remove CRANGE dead code
	The only use of CRANGE was removed by commit 193830d.  In theory it is
	more correct to do what CRANGE did, but in practice it seems like it did
	not work.

	* src/dfa.h (token): Remove CRANGE.
	* src/dfa.c (atom): Do not handle CRANGE.
	(prtok): Likewise.

2010-03-12  Paolo Bonzini  <bonzini@gnu.org>

	dfa: get rid of x*alloc
	* src/dfa.c: Include xalloc.h.
	(xmalloc, xrealloc, xcalloc): Remove.

	grep: cleanup one const cast
	* src/search.c (GEAcompile): Do not reuse motif when operating on the
	(const) pattern, so we can make it non-const.  Remove cast from free.

	kwset/system: remove ptr_t
	* src/kwset.h: Declare kwset using an incomplete struct type.
	* src/system.h (ptr_t): Remove.

2010-03-12  Jim Meyering  <meyering@redhat.com>

	tests: add test cases for dfaexec bug
	* tests/dfaexec-multibyte: New test.
	* tests/Makefile.am (TESTS): Add it.
	Reported by Paolo Bonzini in http://bugzilla.redhat.com/544407
	and http://bugzilla.redhat.com/544406 .

2010-03-12  Jim Meyering  <meyering@redhat.com>

	dfa: manually merge gawk's dfaexec
	* src/dfa.c (dfaexec): Adjust API: return pointer, not offset, and
	take an "end" pointer parameter, rather than integral "size".
	Adjust comment accordingly.
	(build_state): Maintain d->newlines.
	(copytoks): Update multibyte_prop indices.
	(SKIP_REMAINS_MB_IF_INITIAL_STATE): Update a cast.
	Return NULL, rather than (size_t) -1.
	(realloc_trans_if_necessary): Realloc d->newlines.
	* src/dfa.h (struct dfa): New member, "newlines".
	(struct dfa) [GAWK]: New member, "broken".
	(dfaexec): Update prototype and copy the new comment from dfa.c.

	dfa: make search.c use the new dfaexec API

	* src/search.c: Adjust to new dfaexec API.
	Now, dfaexec returns a pointer, not an integer,
	and the third parameter is END, not buffer size.
	* src/dfa.c (dfaexec): Rewrite the function's comment.
	Don't just clobber *END.  While doing that happens to be
	fine for gawk's usage, in grep, *END usually points to the
	first byte of the next buffer.  Save the initial value,
	and restore it just before returning.
	* src/dfa.h (dfaexec): Update comment; include parameter names.

2010-03-12  Jim Meyering  <meyering@redhat.com>

	dfa: appease static analyzers
	* src/dfa.c (transit_state_singlebyte): Call abort rather
	than returning in a "can't happen" scenario.
	This stops clang from emitting a false-positive report (I think it
	was used-uninitialized) about a caller.

2010-03-11  Jim Meyering  <meyering@redhat.com>

	dfa: do not accept [[:UPPER:]] or [[:LOWER:]] internally
	* src/dfa.c (parse_bracket_exp_mb): Those class names are not
	valid, and rejected elsewhere, so there is no point in allowing
	upper or mixed-case versions here.

2010-03-11  Jim Meyering  <meyering@redhat.com>

	maint: remove a trailing space
	* src/search.c (EXECUTE_FCT): Remove trailing space.

	maint: remove all uses of PARAMS
	Remove most with this:
	git grep -lw PARAMS |xargs perl -pi -e 's/\bPARAMS *\((.*)\);/$1;/'
	Remove the remainder manually.

2010-03-11  Jim Meyering  <meyering@redhat.com>

	maint: remove all uses of PARAMS
	* lib/savedir.h (PARAMS): Remove definitions manually.
	Remove the remaining ones via this command:
	  git grep -l define.PARAMS |xargs perl -ni -e '/define PARAMS/ or print'
	* src/dfa.h (PARAMS): Remove definitions.
	* src/system.h (PARAMS): Likewise.
	Remove most uses with this:
	  git grep -lw PARAMS |xargs perl -pi -e 's/\bPARAMS *\((.*)\);/$1;/'
	Remove the remainder manually.

	maint: remove now-useless prototypes
	* src/dfa.c: Remove the prototype of each static, non-recursive
	function whose definition precedes first use.

	grep: plug an inconsequential leak
	* src/grep.c (main): Plug a leak: free "keys".

	grep: avoid useless allocations for empty GREP_OPTIONS
	* src/grep.c (prepend_default_options): Ignore GREP_OPTIONS
	when it's empty, not just when it's undefined.
	There are still relatively harmless leaks when GREP_OPTIONS
	is set and non-empty.  We'll address those, eventually.

2010-03-09  Jim Meyering  <meyering@redhat.com>

	build: record build-from-clone tool requirements
	* bootstrap.conf (buildreq): This makes bootstrap fail with
	a clear explanation of the problem.  Otherwise, you'd get into
	the build process and fail with something far more cryptic.

	dfa: remove a trailing blank
	* src/dfa.c (dfaexec): No trailing blanks allowed.

	dfa: sync a tiny change from gawk
	* src/dfa.c (state_index) [MBS_SUPPORT]: Initialize .mpbs.nelem member
	unconditionally.  Also initialize .mbps.elems.

	dfa: avoid a leak (work_mbc->chars)
	* src/dfa.c (parse_bracket_exp_mb): Remove useless (and leaked MALLOC).

	doc+bootstrap: document build-from-git-clone process
	* bootstrap: Update from coreutils/gnulib.
	* README-hacking: New file, nearly identical to the one in coreutils.

2010-03-08  Paolo Bonzini  <bonzini@gnu.org>

	more work on TODO
	* TODO: More work on the first section.  Use clearer section headers.

2010-03-08  Reuben Thomas  <rrt@sc3d.org>

	bring TODO up-to-date
	* TODO: merge with TODO section of http://www.gnu.org/software/grep/devel.html
	and remove done items. Some small bits of tidying also.

2010-03-07  Paolo Bonzini  <bonzini@gnu.org>

	simplify parsing of [a-z]
	* src/dfa.c (in_coll_range): New.
	(lex): Use it instead of regcomp/regexec.

	Small refactoring in src/dfa.c
	* src/dfa.c (parse_bracket_exp_mb): Return MBCSET.
	(lex): Assign return value of parse_bracket_exp_mb to lasttok, return it.

	use do...while(0) idiom
	* dfa.c (FETCH): Wrap with do...while(0).

2010-03-06  Paolo Bonzini  <bonzini@gnu.org>

	extract common code from if/else
	* dfa.c (dfaexec): Simplify logic for MB_CUR_MAX > 1 case.

	remove register variable hacks
	* dfa.c (dfaexec): We can extract the address of a variable without fearing
	performance problems, modern compilers know better.

	remove register keywords
	* dfa.c (dfaexec): Modern compilers just ignore it.

	allow grep -Pz
	* NEWS: Document grep -P improvements.
	* src/search.c (Pcompile): Remove restriction on grep -Pz.
	* tests/pcre-z: New.
	* tests/Makefile.am (TESTS): Add pcre-z.

	fix cross-line matching in PCRE backend
	* search.c (Pexecute): Split the buffer in lines and match each line
	separately.
	* tests/fedora.sh: Add regression testsuite.

	fix formatting of NEWS
	* NEWS: fix formatting of 2.6 entries.

	fix a bug in handling of -i and character type
	* dfa.c (parse_bracket_exp_mb): Convert [[:lower:]] and [[:upper]] to
	[[:alpha:]] when folding case.
	* tests/case-fold-char-type: New file.  Test for the bug.
	* tests/Makefile.am (TESTS): Add it.
	* NEWS (Bug fixes): Mention it.

	fix previous test case change
	* tests/case-fold-char-class: Do not reset fail to 0 after first test.

2010-03-06  Mike Frysinger  <vapier@gentoo.org>

	grep(1) man page: touchup --label option
	* doc/grep.1 (--label): Don't italicize ending period.  Point to -H
	option.

2010-03-06  Paolo Bonzini  <bonzini@gnu.org>

	augment case-fold-char-class test case
	* tests/case-fold-char-class: Test matching lowercase against uppercase
	as well as vice versa.

2010-03-06  Reuben Thomas  <rrt@sc3d.org>

	doc: improve the discussion of PCRE
	* doc/grep.1: Add a sentence about Perl regular expressions,
	and point to pcresyntax(3) and pcrepattern(3).
	* doc/grep.texi: Likewise.

2010-03-05  Jim Meyering  <meyering@redhat.com>

	maint: dfa-sync: comment and dead-to-grep code: no semantic change
	* src/dfa.c: Sync a comment and some #ifdef GAWK code.

	maint: dfa-sync: don't malloc zero
	* src/dfa.c (dfacomp): Skip case_fold logic when length is zero.
	This probably "no semantic change", but does improve efficiency in
	a degenerate case.

	maint: dfa-sync: use CALLOC rather than equiv. MALLOC+initialize-loop
	* src/dfa.c (dfaanalyze): Sync from gawk.  No semantic change.

	dfa.c: add support for \s and \S
	* src/dfa.c (lex): Sync from gawk's dfa.c.

	maint: dfa-sync: add omitted array initializer
	* src/dfa.c (prednames): Add a "0" to final initializer.
	No semantic change.

	fix a bug in handling of -i and character classes
	* dfa.c (parse_bracket_exp_mb): Sync one part of this function
	from gawk's dfa.c, which was patched by Arnold D. Robbins.
	* tests/case-fold-char-class: New file.  Test for the bug.
	* tests/Makefile.am (TESTS): Add it.
	(TESTS_ENVIRONMENT): Propagate LOCALE_FR and LOCALE_FR_UTF8
	definitions into tests.
	* NEWS (Bug fixes): Mention it.

2010-03-05  Paolo Bonzini  <pbonzini@redhat.com>

	Fedora Grep regression test suite
	* tests/Makefile.am (TESTS): Add fedora.sh.
	(CLEANFILES): Add several new files.
	* tests/fedora.sh: New file, originally by Lubomir Rintel but somewhat
	rewritten to avoid bashisms.

2010-03-05  Paolo Bonzini  <bonzini@gnu.org>

	convert AUTHORS file to UTF-8
	* AUTHORS: Convert to UTF-8.

	eliminate invalid "ptr += (ptr2 - ptr1)"
	* lib/savedir.c (savedir): new_name_space and name_space do not point into
	the same object, so computing their difference is invalid.  Similarly,
	summing the difference to namep is invalid because namep and the result
	point into different objects.  Avoid this.

	fix for bug 21276
	* lib/savedir.c (isdir1): Use realloc instead of calloc.  Remove
	dead code.
	(savedir): Do not leak name_space if allocation of new_name_space fails.

2010-03-04  Jim Meyering  <meyering@redhat.com>

	tests: add a test based on an example from Paolo Bonzini
	* tests/word-multi-file: New test.
	* tests/Makefile.am (TESTS): Add it.

	doc: document release procedure
	* README-release: New file.

	build: update gnulib submodule to latest

2010-02-22  Paolo Bonzini  <bonzini@gnu.org>

	add --group-separator=FOO and --no-group-separator
	* src/grep.c (group_separator): New.
	(long_options): Add --group-separator=FOO and --no-group-separator.
	(prtext): Print group_separator instead of SEP_STR_GROUP.  Optionally
	suppress the separator altogether.
	(main) Handle GROUP_SEPARATOR_OPTION.
	* doc/grep.texi (Context control): Document it.
	* NEWS: Mention it.
	* tests/yesno.sh: Add testcases.

2010-02-21  Jim Meyering  <meyering@redhat.com>

	tests: don't use "echo -n"
	* tests/foad1.sh: Use printf, not echo -n.  The latter is not portable.
	Reported by Daniel Richman.

2010-02-08  Jim Meyering  <meyering@redhat.com>

	remove useless DJGPP-specific code
	* src/grep.c (grepfile): Remove now-useless DJGPP-specific code.
	Now, all S_IS* macros are guaranteed to be defined via gnulib.

2010-02-07  Jim Meyering  <meyering@redhat.com>

	tests: add help-version sanity tests from coreutils
	* tests/help-version: New test, from coreutils.
	* tests/Makefile.am (TESTS): Add it.
	(TESTS_ENVIRONMENT) [built_programs]: Define it.

	tests: correct TESTS_ENVIRONMENT's PATH setting
	* tests/Makefile.am (TESTS_ENVIRONMENT): Set PATH to start with
	$(abs_top_builddir)/src, so that we test the programs we've just built.

	grep: use the correct exit status (2) upon write failure, not 1
	* src/grep.c (main): Initialize exit_failure to EXIT_TROUBLE.
	* NEWS (Bug fixes): Mention this fix.

	maint: enable the prohibit_magic_number_exit syntax check
	* cfg.mk (local-checks-to-skip): Remove sc_prohibit_magic_number_exit,
	to enable that check.
	* src/system.h (EXIT_TROUBLE): Define.
	* src/grep.c: Use symbolic names, EXIT_SUCCESS, EXIT_FAILURE, and
	EXIT_TROUBLE, not 0, 1, 2.
	* src/search.c: Likewise.
	* src/vms_fab.c (string): Likewise.

2010-02-05  Jim Meyering  <meyering@redhat.com>

	doc: adjust NEWS item
	* NEWS: Correct a description.

2010-02-04  Jim Meyering  <meyering@redhat.com>

	tests: exercise surprising -m1 vs. --context behavior
	* tests/max-count-vs-context: New test.  Exercise the surprising,
	but documented, behavior reported by Markus Jochim in
	http://savannah.gnu.org/bugs/?28588.
	* tests/Makefile.am (TESTS): Add it.

2010-02-03  Jim Meyering  <meyering@redhat.com>

	tests: use init.sh from gnulib
	* tests/init.sh: New file, from gnulib.
	* tests/Makefile.am (EXTRA_DIST): Add it.
	(TESTS_ENVIRONMENT): Add variables and features.
	(VERBOSE): Define.

	maint: remove unused Makefile rule
	* tests/Makefile.am (dist-hook): Remove rule.  No longer needed.

	maint: adjust formatting in tests/Makefile.am
	* tests/Makefile.am (TESTS, CLEANFILES): Align and sort.

	build: avoid warnings in gnulib-supplied regex files
	Now that we enable more warnings in lib/, we choose
	to avoid some via patches applied by bootstrap, using
	files in the gl/ hierarchy.  Other, less-important
	warnings are avoided simply by turning off the
	-Wold-style-definition option and using a slightly
	relaxed set of warnings $(GNULIB_WARN_CFLAGS) in lib/.
	* gl/lib/regcomp.c.diff: Avoid warnings.
	* gl/lib/regex_internal.c.diff: Likewise.
	* gl/lib/regex_internal.h.diff: Likewise.
	* gl/lib/regexec.c.diff: Likewise.
	* configure.ac (GNULIB_PORTCHECK): Disable only -Wold-style-definition.
	* lib/Makefile.am (AM_CFLAGS): Use $(GNULIB_WARN_CFLAGS) rather
	than the slightly more strict $(WARN_CFLAGS).

	tests: adjust spencer #37 to pass with gnulib's regex code
	* tests/spencer1.tests: Change #37 to expect an exit status of 2, not 1.
	grep 'a[b-a]' reports "Invalid range end".

	maint: use regex from gnulib, rather than our bit-rotting one
	* bootstrap.conf (gnulib_modules): Add regex.
	* configure.ac: Don't use jm_INCLUDED_REGEX.
	Update use of cache variable.
	* lib/regex.c: Remove file.
	* lib/regex.h: Likewise.
	* m4/regex.m4: Likewise.
	* POTFILES.in: Update to match.

	build: update gnulib submodule to latest

2010-01-28  Jim Meyering  <meyering@redhat.com>

	maint: update to latest gnulib; adjust cfg.mk
	* gnulib: Update submodule to latest.
	* cfg.mk (old_NEWS_hash): Update to reflect NEWS Copyright line change.

2010-01-06  Jim Meyering  <meyering@redhat.com>

	maint: avoid old jm_* macros
	There were jm_* macros here, until very recently.
	* cfg.mk (sc_prohibit_jm_in_m4): New rule, from coreutils.

	maint: remove decl.m4
	* m4/decl.m4: Remove unused file.

	maint: rely on gnulib's new isdir.h
	* src/grep.c: Include "isdir.h".
	* src/system.h: Remove declaration of isdir.

	build: rename local to avoid shadowing global, dfa
	* src/dfa.c (dfamust): Rename parameter: s/dfa/d/.

	build: avoid warning from -Wmissing-prototypes
	* src/dfa.c (match_mb_charset): Declare to be static.

	build: avoid shadowing warning for "link"
	* src/kwset.c (link): Define to kwset_link, to avoid shadowing
	the function.

	build: avoid shadowing warning for unused "rs"
	* src/dfa.c (transit_state): Remove dead stores;
	move a declaration "down".
	Ignore transit_state_consume_1char return value.

	build: avoid shadowing warnings
	* src/dfa.c (match_mb_charset): Rename parameter: s/index/idx/.
	(check_matching_with_multibyte_ops, match_anychar): Likewise.

	build: avoid warning about unused definition of N_
	* src/dfa.c (N_): Remove unused definition.

	build: avoid format-string warnings
	* src/search.c (dfaerror): Use literal "%s" as format string.
	(kwsmusts, GEAcompile): Likewise.
	(Pcompile): Likewise.

	build: add configure-time --enable-gcc-warnings option; avoid warnings
	* bootstrap.conf (gnulib_modules): Add "manywarnings" module.
	* configure.ac: Add --enable-gcc-warnings, derived from code in bison.
	* src/Makefile.am (AM_CFLAGS): Set to $(WARN_CFLAGS) $(WERROR_CFLAGS)
	* lib/Makefile.am (AM_CFLAGS): Likewise, but append.

	build: remove now-useless -I../intl option
	* src/Makefile.am (INCLUDES): Remove -I../intl, now that intl is gone.

	maint: avoid more warnings
	* src/grep.c (MAX): Remove definition of unused macro.
	(usage): Declare with __attribute__ ((noreturn)).
	Split long strings into chunks of length < 509.

	fix a possible bug: remove errant semicolon
	* src/grep.c (prline): Remove erroneous semicolon-after-if-expr.

	maint: avoid compilation warnings
	* bootstrap.conf (gnulib_modules): Add ignore-value.
	* src/search.c (check_multibyte_string_no_icase): A variant of
	check_multibyte_string that does *not* convert case, and hence
	does not modify its BUF parameter.
	(check_multibyte_string): Use xcalloc in place of xmalloc+memset.
	Use ignore_value to ignore the return value from wcrtomb.  This is
	ok, since we know the input is a valid upper case wide character.
	(Fexecute, EGexecute): Update callers of check_multibyte_string
	to use both it and check_multibyte_string_no_icase.

	maint: avoid warnings about unused fwrite return value
	* bootstrap.conf (gnulib_modules): Add unlocked-io.
	* src/system.h: Include "unlocked-io.h".

	maint: remove {m4,lib}/.gitignore; they were undergoing too much churn
	* .gitignore: Ignore all of m4/* except m4/djgpp.m4
	and all of lib/* except Makefile.am, savedir.c and savedir.h.
	* m4/.gitignore: Remove file.
	* lib/.gitignore: Remove file.

2010-01-05  Jim Meyering  <meyering@redhat.com>

	build: run gnulib's tests, too
	* Makefile.am (SUBDIRS): Add gnulib-tests.
	* gnulib-tests/Makefile.am: New file.
	* bootstrap.conf (bootstrap_epilogue): New function, from coreutils.
	(gnulib_tool_option_extras): Define.
	* configure.ac: Add gnulib-tests/Makefile.

2010-01-03  Jim Meyering  <meyering@redhat.com>

	maint: record update-copyright options for this package
	* cfg.mk: Next time, just run "make update-copyright".

2010-01-01  Jim Meyering  <meyering@redhat.com>

	maint: update all FSF copyright year lists to include 2010
	Use this command:
	git ls-files |grep -vE '^(\..*|COPYING|gnulib)$' |xargs \
	env UPDATE_COPYRIGHT_USE_INTERVALS=1 build-aux/update-copyright

2009-12-23  Jim Meyering  <meyering@redhat.com>

	fix multi-byte-locale read-beyond-end-of-buffer error
	Avoid read-beyond-end-of-buffer errors, evoked by running this:
	LC_ALL=en_US.UTF-8 valgrind src/grep -f <(printf 'a\nb\n') <(echo c)

	Conditional jump or move depends on uninitialised value(s)
	   at 0x78136D: __gconv_transform_utf8_internal (in /lib/libc-2.11.so)
	   by 0x7E7232: mbrtowc (in /lib/libc-2.11.so)
	   by 0x8055773: dfaexec (dfa.c:2816)
	   by 0x804D7B0: EGexecute (search.c:353)
	   by 0x804ACD8: grepbuf (grep.c:1036)
	   by 0x804B023: grep (grep.c:1156)
	   by 0x804B460: grepfile (grep.c:1287)
	   by 0x804CF0D: main (grep.c:2282)

	Conditional jump or move depends on uninitialised value(s)
	   at 0x7E7248: mbrtowc (in /lib/libc-2.11.so)
	   by 0x8055773: dfaexec (dfa.c:2816)
	   by 0x804D7B0: EGexecute (search.c:353)
	   by 0x804ACD8: grepbuf (grep.c:1036)
	   by 0x804B023: grep (grep.c:1156)
	   by 0x804B460: grepfile (grep.c:1287)
	   by 0x804CF0D: main (grep.c:2282)

	* src/dfa.c (dfaexec) [MBS_SUPPORT]: Do not access one byte beyond
	end of buffer.

2009-12-23  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

2009-12-23  Paolo Bonzini  <bonzini@gnu.org>

	Speed up insert.
	Suggested by Johan Walles <johan.walles@gmail.com> (bug 23354).

	* src/dfa.c (insert): Use binary search.

2009-12-23  Johan Walles  <johan.walles@gmail.com>

	Decrease epsclosure memory usage
	Fixes bug 23321.

	* src/dfa.c (epsclosure): Make visited an array of char.

2009-12-22  Paolo Bonzini  <bonzini@gnu.org>

	Make 'grep -1 -2' and 'grep -1v2' equivalent to grep -2
	Fixes bug 12128.

	* src/grep.c (get_nondigit_option): Reset the buffer every time
	a non-digit option is found or a new argument is started.

2009-12-22  Paolo Bonzini  <bonzini@gnu.org>

	Improve description of --label
	Fixes bug 22681.

	* doc/grep.1 (--label): Use -H in the example, improve wording.
	* doc/grep.texi (Output Line Prefix Control): Likewise.

2009-12-22  Paolo Bonzini  <bonzini@gnu.org>

	Avoid using an invalid memchr result.
	Related to bug 13161.  I cannot find a testcase, but it is better to be
	defensive considering that these bug were found in the past.

	* src/search.c (EGexecute, Fexecute): Check for memchr return values.

2009-12-11  Jim Meyering  <meyering@redhat.com>

	build: update gnulib submodule to latest

2009-12-04  Jim Meyering  <meyering@redhat.com>

	maint: enable prohibit_have_config_h check
	* cfg.mk (local-checks-to-skip): Enable sc_prohibit_have_config_h
	* lib/regex.c: Remove useless cpp test of HAVE_CONFIG_H.
	* lib/savedir.c: Likewise.
	* src/grep.c: Likewise.
	* src/kwset.c: Likewise.
	* src/search.c: Likewise.

	maint: enable cast_of_x_alloc_return_value check
	* cfg.mk (local-checks-to-skip): Enable sc_cast_of_x_alloc_return_value.
	* .x-sc_cast_of_x_alloc_return_value:
	* src/dfa.c (CALLOC, MALLOC, REALLOC): Remove casts.
	* src/dosbuf.c (undossify_input): Likewise.
	* src/grep.c (print_line_middle, prepend_default_options): Likewise.

	maint: enable cast_of_alloca_return_value check
	* cfg.mk (local-checks-to-skip): Enable sc_cast_of_alloca_return_value.
	* .x-sc_cast_of_alloca_return_value: New file.

2009-12-04  Paolo Bonzini  <bonzini@gnu.org>

	fix "grep -Ff" on CRLF-terminated files
	* src/search.c (Fcompile) [HAVE_DOS_FILE_CONTENTS]: Recognize \r\n as
	a line terminator.

	fix compilation with included regex
	* Makefile.am (libgreputils_a_DEPENDENCIES): New.

	switch to pkg-config for PCRE detection
	* configure.ac: use pkg-config to detect PCRE
	* src/Makefile.am (grep_LDADD): link grep with PCRE_LIBS

2009-12-04  Jim Meyering  <meyering@redhat.com>

	maint: remove "missing" script
	* missing: Remove now-unused file.

	maint: make .gitignore ignore more
	* .gitignore: Ignore more.

	maint: enable useless-if-before-free check
	* cfg.mk (local-checks-to-skip): Enable sc_avoid_if_before_free.
	* .x-sc_avoid_if_before_free: New file.  Exempt regex.c and dfa.c,
	in case anyone ever tries to merge their contents with other versions.
	* src/grep.c (print_line_middle, grepdir): Remove useless if-before-free.
	* src/search.c (IF_BK, EXECUTE_FCT): Likewise.

	maint: enable po-check
	* cfg.mk (local-checks-to-skip): Enable sc_po_check.
	* po/POTFILES.in: Sort and update.

2009-12-03  Paolo Bonzini  <bonzini@gnu.org>

	update gnulib, fixing missing inclusion of stdbool.h
	* gnulib: Update.

2009-11-30  Jim Meyering  <meyering@redhat.com>

	maint: enable two checks
	* cfg.mk (local-checks-to-skip): Enable two:
	sc_prohibit_xalloc_without_use sc_two_space_separator_in_usage
	* src/grep.c (usage): Conform: use two spaces, not 1.
	* src/kwset.c (malloc): Define as a function-macro so that the
	syntax-check rule sees that we are indeed using xmalloc here.

	maint: enable makefile_path_separator check
	* cfg.mk (local-checks-to-skip): Enable sc_makefile_path_separator_check,
	now that the sole offender, an old po/Makefile.in.in, is gone.

	maint: remove now-generated file: po/Makefile.in.in
	* po/Makefile.in.in: Remove file, now generated via bootstrap.

	maint: enable makefile @...@ check
	* cfg.mk (local-checks-to-skip): Enable sc_makefile_check.
	* lib/Makefile.am (libgreputils_a_LIBADD): Use $(...), rather than
	anachronistic @...@ notation.
	* src/Makefile.am (LDADD): Likewise.
	* tests/Makefile.am (AWK): Remove definition.

	maint: enable trailing_blank check
	* cfg.mk (local-checks-to-skip): Enable sc_trailing_blank.
	* AUTHORS: Remove trailing blanks.
	* COPYING: Likewise.
	* README: Likewise.
	* README-alpha: Likewise.
	* README-boot: Likewise.
	* THANKS: Likewise.
	* TODO: Likewise.
	* src/dfa.c: Likewise.
	* src/mbsupport.h: Likewise.
	* tests/backref.sh: Likewise.
	* tests/file.sh: Likewise.
	* tests/options.sh: Likewise.
	* tests/tests: Likewise.
	* vms/README: Likewise.
	* vms/make.com: Likewise.

	maint: enable unmarked_diagnostics check
	* cfg.mk (local-checks-to-skip): Enable sc_unmarked_diagnostics
	* src/grep.c (fillbuf): Mark a diagnostic for translation.
	(reset): Likewise.

	maint: enable require_config_h checks
	* cfg.mk (local-checks-to-skip): Enable sc_require_config_h
	and sc_require_config_h_first.
	* src/dosbuf.c: Include <config.h>.
	* src/vms_fab.c: Likewise.
	* .x-sc_require_config_h: New file: list the exceptions.
	* .x-sc_require_config_h_first: Likewise.

	maint: use gnulib's progname module; enable set_program_name check
	* bootstrap.conf (gnulib_modules): Add progname.
	* src/grep.c: Include "progname.h".
	(program_name): Remove declaration.
	(main): Call set_program_name.
	* cfg.mk (local-checks-to-skip): Add sc_program_name.

	maint: enable "file system" check
	* cfg.mk (local-checks-to-skip): Enable sc_file_system.
	* lib/savedir.c (savedir): Tweak spelling.  Remove trailing blanks.

	maint: enable immutable_NEWS check
	* NEWS: Move copyright to the bottom.
	Use the format required by release-related tools.
	* .prev-version: New file.
	* cfg.mk (old_NEWS_hash): Define.
	(local-checks-to-skip): Enable check: sc_immutable_NEWS.

	maint: disable the many failing syntax-checks
	* cfg.mk: New file.
	(local-checks-to-skip): Define to the list of disabled rules.
	Subsequent change-sets will enable them, one by one.

	build: require automake-1.11, enable silent-rules, parallel tests, xz
	* configure.ac (AM_INIT_AUTOMAKE): Create xz-compressed tarballs,
	not bzip2-compressed ones.  Enable automake's silent-rules,
	parallel tests, and test PASS/FAIL coloring options.
	Use AC_CONFIG_HEADERS, not AM_CONFIG_HEADER.  Quote the argument.

	build: use git-version-gen for inter-release version strings
	* configure.ac (AC_INIT): Use git-version-gen.

	build: add several build- and release-related gnulib modules
	* bootstrap.conf (gnulib_modules): Add announce-gen update-copyright
	do-release-commit-and-tag git-version-gen gnu-web-doc-update
	gnupload maintainer-makefile useless-if-before-free

	build: adapt to the newer closeout module from gnulib
	* src/grep.c: Include "exitfail.h".
	(main) [-q]: Set the global variable, exit_failure, rather than
	calling the now-removed close_stdout_set_file_name function.

	build: adapt to the newer exclude API we now get from gnulib
	* src/grep.c (main): Adapt to newer exclude.c: add EXCLUDE_WILDCARDS as
	the new "option" argument in calls to add_exclude and add_exclude_file.

	build: get more lib/* files from gnulib, adjust savedir
	* bootstrap.conf (gnulib_modules): Add the following:
	closeout exclude hard-locale isdir strtoumax.
	* lib/.gitignore, m4/.gitignore: Update.
	* lib/closeout.c, lib/closeout.h: Remove.
	* lib/exclude.c, lib/exclude.h: Remove.
	* lib/hard-locale.c, lib/hard-locale.h: Remove.
	* lib/strtoumax.c: Remove.
	* lib/isdir.c: Remove.
	* lib/Makefile.am: Remove here, too.
	* lib/savedir.c: Adapt to new exclude module:
	s/excluded_filename/excluded_file_name/ and remove 3rd argument.

	build: update gnulib submodule to latest

	maint: generate ChangeLog from git logs
	* Makefile.am (dist-hook, gen-ChangeLog): New rules.
	* bootstrap.conf (gnulib_modules): Add gitlog-to-changelog.
	Ensure that ChangeLog exists.
	* ChangeLog-2009: Rename from ChangeLog
	* ChangeLog: Remove file.
	* .gitignore: Add ChangeLog.

	maint: list gnulib modules one per line
	* bootstrap.conf (gnulib_modules): List them one per line.

2009-11-30  Tony Abou-Assaleh  <taa@acm.org>

	Acknowledge new maintainers, update README-alpha
	* AUTHORS: new maintainers added
	* THANKS: same
	* README-alpha: change CVS references to Git

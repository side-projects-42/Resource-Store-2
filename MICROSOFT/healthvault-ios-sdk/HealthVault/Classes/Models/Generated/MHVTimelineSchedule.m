//
// MHVTimelineSchedule.m
// MHVLib
//
// Copyright (c) 2017 Microsoft Corporation. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import "MHVTimelineSchedule.h"

@implementation MHVTimelineSchedule

+ (BOOL)shouldValidateProperties
{
    return YES;
}

- (instancetype)init {
  self = [super init];
  if (self) {
    // initialize property's default value, if any
    
  }
  return self;
}



+ (NSDictionary *)propertyNameMap
{
    static dispatch_once_t once;
    static NSMutableDictionary *names = nil;
    dispatch_once(&once, ^{
        names = [[super propertyNameMap] mutableCopy];
        [names addEntriesFromDictionary:@{
            @"adherenceDelta": @"adherenceDelta",
            @"localDateTime": @"localDateTime",
            @"type": @"type",
            @"recurrenceType": @"recurrenceType",
            @"occurrences": @"occurrences"
        }];
    });
    return names;
}

+ (NSDictionary *)objectParametersMap
{
    static dispatch_once_t once;
    static NSMutableDictionary *types = nil;
    dispatch_once(&once, ^{
        types = [[super objectParametersMap] mutableCopy];
        [types addEntriesFromDictionary:@{
            @"type": [MHVTimelineScheduleTypeEnum class],
            @"recurrenceType": [MHVTimelineScheduleRecurrenceTypeEnum class],
            @"occurrences": [MHVTimelineScheduleOccurrence class]

        }];
    });
    return types;
}
@end
@implementation MHVTimelineScheduleTypeEnum

-(NSDictionary *)enumMap
{
    return @{
        @"Unknown": @"Unknown",
        @"Zoned": @"Zoned",
        @"Local": @"Local",
        @"Unscheduled": @"Unscheduled",
        @"Anytime": @"Anytime",
    };
}

+(MHVTimelineScheduleTypeEnum *)MHVUnknown
{
    return [[MHVTimelineScheduleTypeEnum alloc] initWithString:@"Unknown"];
}
+(MHVTimelineScheduleTypeEnum *)MHVZoned
{
    return [[MHVTimelineScheduleTypeEnum alloc] initWithString:@"Zoned"];
}
+(MHVTimelineScheduleTypeEnum *)MHVLocal
{
    return [[MHVTimelineScheduleTypeEnum alloc] initWithString:@"Local"];
}
+(MHVTimelineScheduleTypeEnum *)MHVUnscheduled
{
    return [[MHVTimelineScheduleTypeEnum alloc] initWithString:@"Unscheduled"];
}
+(MHVTimelineScheduleTypeEnum *)MHVAnytime
{
    return [[MHVTimelineScheduleTypeEnum alloc] initWithString:@"Anytime"];
}
@end
@implementation MHVTimelineScheduleRecurrenceTypeEnum

-(NSDictionary *)enumMap
{
    return @{
        @"Unknown": @"Unknown",
        @"None": @"None",
        @"Minute": @"Minute",
        @"Hourly": @"Hourly",
        @"Daily": @"Daily",
        @"Weekly": @"Weekly",
        @"Monthly": @"Monthly",
        @"Annually": @"Annually",
    };
}

+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVUnknown
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"Unknown"];
}
+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVNone
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"None"];
}
+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVMinute
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"Minute"];
}
+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVHourly
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"Hourly"];
}
+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVDaily
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"Daily"];
}
+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVWeekly
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"Weekly"];
}
+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVMonthly
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"Monthly"];
}
+(MHVTimelineScheduleRecurrenceTypeEnum *)MHVAnnually
{
    return [[MHVTimelineScheduleRecurrenceTypeEnum alloc] initWithString:@"Annually"];
}
@end

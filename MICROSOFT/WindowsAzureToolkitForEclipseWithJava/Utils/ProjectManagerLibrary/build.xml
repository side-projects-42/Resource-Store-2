<project name="SampleJUnitTests" default="dist" basedir=".">
    <description>
        Project Management JUnit Tests
    </description>
  <!-- set global properties for this build -->

  <property name="project_name" value="ProjectManagerLibrary"/>
  <property name="src" location="src"/>
  <property name="junittest" location="test"/>
  <property name="build" location="bin"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="extlib"/>
  <property name="res"  location="res"/>
  <property name="reports" location="reports"/>
  
  <!-- the names of various distributable files -->
  <property name="jar_name" value="${project_name}.jar"/>
  <property name="war_name" value="${project_name}.war"/>

	<!-- top level targets -->

  <target name="compile" depends="init" description="compile the source code " >
		<javac srcdir="${src}" includeantruntime="false" destdir="${build}" source="1.6" target="1.6" debug="true" debugLevel="lines,vars,source">  
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
		
		<javac srcdir="${junittest}" includeantruntime="false" destdir="${build}" source="1.6" target="1.6" debug="true" debugLevel="lines,vars,source">  
			<classpath>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
		
		<copy includeemptydirs="false" todir="${build}">
            <fileset dir="${src}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="${build}">
            <fileset dir="${junittest}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
  </target>
	
	<target name="compile-sources" depends="init" description="compile the source code " >
			<javac srcdir="${src}" includeantruntime="false" destdir="${build}" source="1.6" target="1.6" debug="true" debugLevel="lines,vars,source">  
				<classpath>
					<fileset dir="${lib}">
						<include name="**/*.jar"/>
					</fileset>
				</classpath>
			</javac>
			
			<copy includeemptydirs="false" todir="${build}">
	            <fileset dir="${src}">
	                <exclude name="**/*.java"/>
	            </fileset>
	        </copy>
	        
	  </target>


  <target name="dist" depends="compile-sources" description="generate the distributable files " >
  
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/${jar_name}" basedir="${build}"/>
  	<copy file="${dist}/${jar_name}" tofile="${basedir}\..\..\PluginsAndFeatures\com.microsoftopentechnologies.wacommon\resources\${jar_name}" overwrite="true" />
  	<copy file="${dist}/${jar_name}" tofile="${basedir}\..\AzureCommons\resources\${jar_name}" overwrite="true" />
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${reports}"/>
  </target>

	<target name="run-tests" depends="compile" description="run your test suite" >
		
		<junit printsummary="yes" haltonfailure="no" showoutput="yes" >
			<classpath>
				<pathelement path="${build}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>			
		
 		  <batchtest fork="yes" todir="${reports}/raw/">
		  	<formatter type="xml"/>
		    <fileset dir="${src}">
		      <include name="**/*Test*.java"/>
		    </fileset>
		    <fileset dir="${junittest}">
		      <include name="**/*Test*.java"/>
		    </fileset>

		  </batchtest>
		</junit>	
	</target>
	
  <target name ="test" depends="run-tests">
		<junitreport todir="${reports}">
		  <fileset dir="${reports}/raw/">
		    <include name="TEST-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${reports}\html\"/>
		</junitreport>
  </target>

  <target name ="run" depends="" description="if this project can be run, run it" >
  	
  </target>

	<!-- supporting targets -->
	
	 <target name="init" depends="clean" description="initialize the build environment" >
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create directory structures -->
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}/lib"/>
    <mkdir dir="${reports}"/>
    <mkdir dir="${reports}/raw/"/>
    <mkdir dir="${reports}/html/"/>
  </target>
  
  <target name="all" depends="clean, test">
  	
  </target>
  
</project>


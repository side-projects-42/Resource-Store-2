{ Dataset,
} = require './dataset'
{ countriesData
} = require '../../util'


/**
 * @class Giant hack to handle Mobile Device by Geo.
 * @extends Dataset
 */
class exports.MobileDeviceByGeoDataset extends Dataset
    @registerType 'mobile_device_by_geo'
    
    ->
        super ...
        @format = 'json'
    
    
    /**
     * @returns {Array<String>} List of column labels.
     */
    getLabels: ->
        labels = []
        if @data?.length
            for key in @data[0]
                labels.push key
        labels
    
    
    parse: (rawData) ->
        return rawData unless typeof rawData is 'string'
        console.warn 'INFO: PIG format, pre-parsing it into JSON'
        
        # Hardcoding this format: (2013-02-01,A2,Android,Samsung,GT-S5830,3,3,3)
        # regex = /\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\)/g
        # Hardcoding this format: 2013-02-01	TZ	SonyEricsson	Symbian OS	5
        regex = /([^\t]*)\t([^\t]*)\t([^\t]*)\t([^\t]*)\t([^\t]*)\n/g
        rawDataPivoted = {}
        
        while match = regex.exec rawData
            country = match[2]
            manufacturer = match[3].toLowerCase()
            count = parseInt(match[5]) or 0
            
            unless rawDataPivoted[country]
                countryData = countriesData[country] or do
                    id: 'unknown'
                    name: 'Unknown'
                rawDataPivoted[country] = do
                    id: countryData.id
                    name: countryData.name
            
            rawDataPivoted[country][manufacturer] ?= 0
            rawDataPivoted[country][manufacturer] += count
            rawDataPivoted[country]['Total'] ?= 0
            rawDataPivoted[country]['Total'] += count
        
        results = ( for country, v in rawDataPivoted then v )
